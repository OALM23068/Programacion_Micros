
AVRASM ver. 2.2.8  C:\Users\oscar\OneDrive\Documents\GitHub\Programacion_Micros\Pruebas_finales_proyecto_micros_oscar\Pruebas_finales_proyecto_micros_oscar\main.asm Tue Mar 18 09:30:05 2025

[builtin](2): Including file 'C:/Program Files (x86)\Atmel\Studio\7.0\Packs\atmel\ATmega_DFP\1.7.374\avrasm\inc\m328Pdef.inc'
C:\Users\oscar\OneDrive\Documents\GitHub\Programacion_Micros\Pruebas_finales_proyecto_micros_oscar\Pruebas_finales_proyecto_micros_oscar\main.asm(7): Including file 'C:/Program Files (x86)\Atmel\Studio\7.0\Packs\atmel\ATmega_DFP\1.7.374\avrasm\inc\M328PDEF.inc'
[builtin](2): Including file 'C:/Program Files (x86)\Atmel\Studio\7.0\Packs\atmel\ATmega_DFP\1.7.374\avrasm\inc\m328Pdef.inc'
C:\Users\oscar\OneDrive\Documents\GitHub\Programacion_Micros\Pruebas_finales_proyecto_micros_oscar\Pruebas_finales_proyecto_micros_oscar\main.asm(7): Including file 'C:/Program Files (x86)\Atmel\Studio\7.0\Packs\atmel\ATmega_DFP\1.7.374\avrasm\inc\M328PDEF.inc'
                                 
                                 ;
                                 
                                 ;***** Created: 2011-02-09 12:03 ******* Source: ATmega328P.xml **********
                                 ;*************************************************************************
                                 ;* A P P L I C A T I O N   N O T E   F O R   T H E   A V R   F A M I L Y
                                 ;* 
                                 ;* Number            : AVR000
                                 ;* File Name         : "m328Pdef.inc"
                                 ;* Title             : Register/Bit Definitions for the ATmega328P
                                 ;* Date              : 2011-02-09
                                 ;* Version           : 2.35
                                 ;* Support E-mail    : avr@atmel.com
                                 ;* Target MCU        : ATmega328P
                                 ;* 
                                 ;* DESCRIPTION
                                 ;* When including this file in the assembly program file, all I/O register 
                                 ;* names and I/O register bit names appearing in the data book can be used.
                                 ;* In addition, the six registers forming the three data pointers X, Y and 
                                 ;* Z have been assigned names XL - ZH. Highest RAM address for Internal 
                                 ;* SRAM is also defined 
                                 ;* 
                                 ;* The Register names are represented by their hexadecimal address.
                                 ;* 
                                 ;* The Register Bit names are represented by their bit number (0-7).
                                 ;* 
                                 ;* Please observe the difference in using the bit names with instructions
                                 ;* such as "sbr"/"cbr" (set/clear bit in register) and "sbrs"/"sbrc"
                                 ;* (skip if bit in register set/cleared). The following example illustrates
                                 ;* this:
                                 ;* 
                                 ;* in    r16,PORTB             ;read PORTB latch
                                 ;* sbr   r16,(1<<PB6)+(1<<PB5) ;set PB6 and PB5 (use masks, not bit#)
                                 ;* out   PORTB,r16             ;output to PORTB
                                 ;* 
                                 ;* in    r16,TIFR              ;read the Timer Interrupt Flag Register
                                 ;* sbrc  r16,TOV0              ;test the overflow flag (use bit#)
                                 ;* rjmp  TOV0_is_set           ;jump if set
                                 ;* ...                         ;otherwise do something else
                                 ;*************************************************************************
                                 
                                 #ifndef _M328PDEF_INC_
                                 #define _M328PDEF_INC_
                                 
                                 
                                 #pragma partinc 0
                                 
                                 ; ***** SPECIFY DEVICE ***************************************************
                                 .device ATmega328P
                                 #pragma AVRPART ADMIN PART_NAME ATmega328P
                                 .equ	SIGNATURE_000	= 0x1e
                                 .equ	SIGNATURE_001	= 0x95
                                 .equ	SIGNATURE_002	= 0x0f
                                 
                                 #pragma AVRPART CORE CORE_VERSION V2E
                                 
                                 
                                 ; ***** I/O REGISTER DEFINITIONS *****************************************
                                 ; NOTE:
                                 ; Definitions marked "MEMORY MAPPED"are extended I/O ports
                                 ; and cannot be used with IN/OUT instructions
                                 .equ	UDR0	= 0xc6	; MEMORY MAPPED
                                 .equ	UBRR0L	= 0xc4	; MEMORY MAPPED
                                 .equ	UBRR0H	= 0xc5	; MEMORY MAPPED
                                 .equ	UCSR0C	= 0xc2	; MEMORY MAPPED
                                 .equ	UCSR0B	= 0xc1	; MEMORY MAPPED
                                 .equ	UCSR0A	= 0xc0	; MEMORY MAPPED
                                 .equ	TWAMR	= 0xbd	; MEMORY MAPPED
                                 .equ	TWCR	= 0xbc	; MEMORY MAPPED
                                 .equ	TWDR	= 0xbb	; MEMORY MAPPED
                                 .equ	TWAR	= 0xba	; MEMORY MAPPED
                                 .equ	TWSR	= 0xb9	; MEMORY MAPPED
                                 .equ	TWBR	= 0xb8	; MEMORY MAPPED
                                 .equ	ASSR	= 0xb6	; MEMORY MAPPED
                                 .equ	OCR2B	= 0xb4	; MEMORY MAPPED
                                 .equ	OCR2A	= 0xb3	; MEMORY MAPPED
                                 .equ	TCNT2	= 0xb2	; MEMORY MAPPED
                                 .equ	TCCR2B	= 0xb1	; MEMORY MAPPED
                                 .equ	TCCR2A	= 0xb0	; MEMORY MAPPED
                                 .equ	OCR1BL	= 0x8a	; MEMORY MAPPED
                                 .equ	OCR1BH	= 0x8b	; MEMORY MAPPED
                                 .equ	OCR1AL	= 0x88	; MEMORY MAPPED
                                 .equ	OCR1AH	= 0x89	; MEMORY MAPPED
                                 .equ	ICR1L	= 0x86	; MEMORY MAPPED
                                 .equ	ICR1H	= 0x87	; MEMORY MAPPED
                                 .equ	TCNT1L	= 0x84	; MEMORY MAPPED
                                 .equ	TCNT1H	= 0x85	; MEMORY MAPPED
                                 .equ	TCCR1C	= 0x82	; MEMORY MAPPED
                                 .equ	TCCR1B	= 0x81	; MEMORY MAPPED
                                 .equ	TCCR1A	= 0x80	; MEMORY MAPPED
                                 .equ	DIDR1	= 0x7f	; MEMORY MAPPED
                                 .equ	DIDR0	= 0x7e	; MEMORY MAPPED
                                 .equ	ADMUX	= 0x7c	; MEMORY MAPPED
                                 .equ	ADCSRB	= 0x7b	; MEMORY MAPPED
                                 .equ	ADCSRA	= 0x7a	; MEMORY MAPPED
                                 .equ	ADCH	= 0x79	; MEMORY MAPPED
                                 .equ	ADCL	= 0x78	; MEMORY MAPPED
                                 .equ	TIMSK2	= 0x70	; MEMORY MAPPED
                                 .equ	TIMSK1	= 0x6f	; MEMORY MAPPED
                                 .equ	TIMSK0	= 0x6e	; MEMORY MAPPED
                                 .equ	PCMSK1	= 0x6c	; MEMORY MAPPED
                                 .equ	PCMSK2	= 0x6d	; MEMORY MAPPED
                                 .equ	PCMSK0	= 0x6b	; MEMORY MAPPED
                                 .equ	EICRA	= 0x69	; MEMORY MAPPED
                                 .equ	PCICR	= 0x68	; MEMORY MAPPED
                                 .equ	OSCCAL	= 0x66	; MEMORY MAPPED
                                 .equ	PRR	= 0x64	; MEMORY MAPPED
                                 .equ	CLKPR	= 0x61	; MEMORY MAPPED
                                 .equ	WDTCSR	= 0x60	; MEMORY MAPPED
                                 .equ	SREG	= 0x3f
                                 .equ	SPL	= 0x3d
                                 .equ	SPH	= 0x3e
                                 .equ	SPMCSR	= 0x37
                                 .equ	MCUCR	= 0x35
                                 .equ	MCUSR	= 0x34
                                 .equ	SMCR	= 0x33
                                 .equ	ACSR	= 0x30
                                 .equ	SPDR	= 0x2e
                                 .equ	SPSR	= 0x2d
                                 .equ	SPCR	= 0x2c
                                 .equ	GPIOR2	= 0x2b
                                 .equ	GPIOR1	= 0x2a
                                 .equ	OCR0B	= 0x28
                                 .equ	OCR0A	= 0x27
                                 .equ	TCNT0	= 0x26
                                 .equ	TCCR0B	= 0x25
                                 .equ	TCCR0A	= 0x24
                                 .equ	GTCCR	= 0x23
                                 .equ	EEARH	= 0x22
                                 .equ	EEARL	= 0x21
                                 .equ	EEDR	= 0x20
                                 .equ	EECR	= 0x1f
                                 .equ	GPIOR0	= 0x1e
                                 .equ	EIMSK	= 0x1d
                                 .equ	EIFR	= 0x1c
                                 .equ	PCIFR	= 0x1b
                                 .equ	TIFR2	= 0x17
                                 .equ	TIFR1	= 0x16
                                 .equ	TIFR0	= 0x15
                                 .equ	PORTD	= 0x0b
                                 .equ	DDRD	= 0x0a
                                 .equ	PIND	= 0x09
                                 .equ	PORTC	= 0x08
                                 .equ	DDRC	= 0x07
                                 .equ	PINC	= 0x06
                                 .equ	PORTB	= 0x05
                                 .equ	DDRB	= 0x04
                                 .equ	PINB	= 0x03
                                 
                                 
                                 ; ***** BIT DEFINITIONS **************************************************
                                 
                                 ; ***** USART0 ***********************
                                 ; UDR0 - USART I/O Data Register
                                 .equ	UDR0_0	= 0	; USART I/O Data Register bit 0
                                 .equ	UDR0_1	= 1	; USART I/O Data Register bit 1
                                 .equ	UDR0_2	= 2	; USART I/O Data Register bit 2
                                 .equ	UDR0_3	= 3	; USART I/O Data Register bit 3
                                 .equ	UDR0_4	= 4	; USART I/O Data Register bit 4
                                 .equ	UDR0_5	= 5	; USART I/O Data Register bit 5
                                 .equ	UDR0_6	= 6	; USART I/O Data Register bit 6
                                 .equ	UDR0_7	= 7	; USART I/O Data Register bit 7
                                 
                                 ; UCSR0A - USART Control and Status Register A
                                 .equ	MPCM0	= 0	; Multi-processor Communication Mode
                                 .equ	U2X0	= 1	; Double the USART transmission speed
                                 .equ	UPE0	= 2	; Parity Error
                                 .equ	DOR0	= 3	; Data overRun
                                 .equ	FE0	= 4	; Framing Error
                                 .equ	UDRE0	= 5	; USART Data Register Empty
                                 .equ	TXC0	= 6	; USART Transmitt Complete
                                 .equ	RXC0	= 7	; USART Receive Complete
                                 
                                 ; UCSR0B - USART Control and Status Register B
                                 .equ	TXB80	= 0	; Transmit Data Bit 8
                                 .equ	RXB80	= 1	; Receive Data Bit 8
                                 .equ	UCSZ02	= 2	; Character Size
                                 .equ	TXEN0	= 3	; Transmitter Enable
                                 .equ	RXEN0	= 4	; Receiver Enable
                                 .equ	UDRIE0	= 5	; USART Data register Empty Interrupt Enable
                                 .equ	TXCIE0	= 6	; TX Complete Interrupt Enable
                                 .equ	RXCIE0	= 7	; RX Complete Interrupt Enable
                                 
                                 ; UCSR0C - USART Control and Status Register C
                                 .equ	UCPOL0	= 0	; Clock Polarity
                                 .equ	UCSZ00	= 1	; Character Size
                                 .equ	UCPHA0	= UCSZ00	; For compatibility
                                 .equ	UCSZ01	= 2	; Character Size
                                 .equ	UDORD0	= UCSZ01	; For compatibility
                                 .equ	USBS0	= 3	; Stop Bit Select
                                 .equ	UPM00	= 4	; Parity Mode Bit 0
                                 .equ	UPM01	= 5	; Parity Mode Bit 1
                                 .equ	UMSEL00	= 6	; USART Mode Select
                                 .equ	UMSEL0	= UMSEL00	; For compatibility
                                 .equ	UMSEL01	= 7	; USART Mode Select
                                 .equ	UMSEL1	= UMSEL01	; For compatibility
                                 
                                 ; UBRR0H - USART Baud Rate Register High Byte
                                 .equ	UBRR8	= 0	; USART Baud Rate Register bit 8
                                 .equ	UBRR9	= 1	; USART Baud Rate Register bit 9
                                 .equ	UBRR10	= 2	; USART Baud Rate Register bit 10
                                 .equ	UBRR11	= 3	; USART Baud Rate Register bit 11
                                 
                                 ; UBRR0L - USART Baud Rate Register Low Byte
                                 .equ	_UBRR0	= 0	; USART Baud Rate Register bit 0
                                 .equ	_UBRR1	= 1	; USART Baud Rate Register bit 1
                                 .equ	UBRR2	= 2	; USART Baud Rate Register bit 2
                                 .equ	UBRR3	= 3	; USART Baud Rate Register bit 3
                                 .equ	UBRR4	= 4	; USART Baud Rate Register bit 4
                                 .equ	UBRR5	= 5	; USART Baud Rate Register bit 5
                                 .equ	UBRR6	= 6	; USART Baud Rate Register bit 6
                                 .equ	UBRR7	= 7	; USART Baud Rate Register bit 7
                                 
                                 
                                 ; ***** TWI **************************
                                 ; TWAMR - TWI (Slave) Address Mask Register
                                 .equ	TWAM0	= 1	; 
                                 .equ	TWAMR0	= TWAM0	; For compatibility
                                 .equ	TWAM1	= 2	; 
                                 .equ	TWAMR1	= TWAM1	; For compatibility
                                 .equ	TWAM2	= 3	; 
                                 .equ	TWAMR2	= TWAM2	; For compatibility
                                 .equ	TWAM3	= 4	; 
                                 .equ	TWAMR3	= TWAM3	; For compatibility
                                 .equ	TWAM4	= 5	; 
                                 .equ	TWAMR4	= TWAM4	; For compatibility
                                 .equ	TWAM5	= 6	; 
                                 .equ	TWAMR5	= TWAM5	; For compatibility
                                 .equ	TWAM6	= 7	; 
                                 .equ	TWAMR6	= TWAM6	; For compatibility
                                 
                                 ; TWBR - TWI Bit Rate register
                                 .equ	TWBR0	= 0	; 
                                 .equ	TWBR1	= 1	; 
                                 .equ	TWBR2	= 2	; 
                                 .equ	TWBR3	= 3	; 
                                 .equ	TWBR4	= 4	; 
                                 .equ	TWBR5	= 5	; 
                                 .equ	TWBR6	= 6	; 
                                 .equ	TWBR7	= 7	; 
                                 
                                 ; TWCR - TWI Control Register
                                 .equ	TWIE	= 0	; TWI Interrupt Enable
                                 .equ	TWEN	= 2	; TWI Enable Bit
                                 .equ	TWWC	= 3	; TWI Write Collition Flag
                                 .equ	TWSTO	= 4	; TWI Stop Condition Bit
                                 .equ	TWSTA	= 5	; TWI Start Condition Bit
                                 .equ	TWEA	= 6	; TWI Enable Acknowledge Bit
                                 .equ	TWINT	= 7	; TWI Interrupt Flag
                                 
                                 ; TWSR - TWI Status Register
                                 .equ	TWPS0	= 0	; TWI Prescaler
                                 .equ	TWPS1	= 1	; TWI Prescaler
                                 .equ	TWS3	= 3	; TWI Status
                                 .equ	TWS4	= 4	; TWI Status
                                 .equ	TWS5	= 5	; TWI Status
                                 .equ	TWS6	= 6	; TWI Status
                                 .equ	TWS7	= 7	; TWI Status
                                 
                                 ; TWDR - TWI Data register
                                 .equ	TWD0	= 0	; TWI Data Register Bit 0
                                 .equ	TWD1	= 1	; TWI Data Register Bit 1
                                 .equ	TWD2	= 2	; TWI Data Register Bit 2
                                 .equ	TWD3	= 3	; TWI Data Register Bit 3
                                 .equ	TWD4	= 4	; TWI Data Register Bit 4
                                 .equ	TWD5	= 5	; TWI Data Register Bit 5
                                 .equ	TWD6	= 6	; TWI Data Register Bit 6
                                 .equ	TWD7	= 7	; TWI Data Register Bit 7
                                 
                                 ; TWAR - TWI (Slave) Address register
                                 .equ	TWGCE	= 0	; TWI General Call Recognition Enable Bit
                                 .equ	TWA0	= 1	; TWI (Slave) Address register Bit 0
                                 .equ	TWA1	= 2	; TWI (Slave) Address register Bit 1
                                 .equ	TWA2	= 3	; TWI (Slave) Address register Bit 2
                                 .equ	TWA3	= 4	; TWI (Slave) Address register Bit 3
                                 .equ	TWA4	= 5	; TWI (Slave) Address register Bit 4
                                 .equ	TWA5	= 6	; TWI (Slave) Address register Bit 5
                                 .equ	TWA6	= 7	; TWI (Slave) Address register Bit 6
                                 
                                 
                                 ; ***** TIMER_COUNTER_1 **************
                                 ; TIMSK1 - Timer/Counter Interrupt Mask Register
                                 .equ	TOIE1	= 0	; Timer/Counter1 Overflow Interrupt Enable
                                 .equ	OCIE1A	= 1	; Timer/Counter1 Output CompareA Match Interrupt Enable
                                 .equ	OCIE1B	= 2	; Timer/Counter1 Output CompareB Match Interrupt Enable
                                 .equ	ICIE1	= 5	; Timer/Counter1 Input Capture Interrupt Enable
                                 
                                 ; TIFR1 - Timer/Counter Interrupt Flag register
                                 .equ	TOV1	= 0	; Timer/Counter1 Overflow Flag
                                 .equ	OCF1A	= 1	; Output Compare Flag 1A
                                 .equ	OCF1B	= 2	; Output Compare Flag 1B
                                 .equ	ICF1	= 5	; Input Capture Flag 1
                                 
                                 ; TCCR1A - Timer/Counter1 Control Register A
                                 .equ	WGM10	= 0	; Waveform Generation Mode
                                 .equ	WGM11	= 1	; Waveform Generation Mode
                                 .equ	COM1B0	= 4	; Compare Output Mode 1B, bit 0
                                 .equ	COM1B1	= 5	; Compare Output Mode 1B, bit 1
                                 .equ	COM1A0	= 6	; Comparet Ouput Mode 1A, bit 0
                                 .equ	COM1A1	= 7	; Compare Output Mode 1A, bit 1
                                 
                                 ; TCCR1B - Timer/Counter1 Control Register B
                                 .equ	CS10	= 0	; Prescaler source of Timer/Counter 1
                                 .equ	CS11	= 1	; Prescaler source of Timer/Counter 1
                                 .equ	CS12	= 2	; Prescaler source of Timer/Counter 1
                                 .equ	WGM12	= 3	; Waveform Generation Mode
                                 .equ	WGM13	= 4	; Waveform Generation Mode
                                 .equ	ICES1	= 6	; Input Capture 1 Edge Select
                                 .equ	ICNC1	= 7	; Input Capture 1 Noise Canceler
                                 
                                 ; TCCR1C - Timer/Counter1 Control Register C
                                 .equ	FOC1B	= 6	; 
                                 .equ	FOC1A	= 7	; 
                                 
                                 ; GTCCR - General Timer/Counter Control Register
                                 .equ	PSRSYNC	= 0	; Prescaler Reset Timer/Counter1 and Timer/Counter0
                                 .equ	TSM	= 7	; Timer/Counter Synchronization Mode
                                 
                                 
                                 ; ***** TIMER_COUNTER_2 **************
                                 ; TIMSK2 - Timer/Counter Interrupt Mask register
                                 .equ	TOIE2	= 0	; Timer/Counter2 Overflow Interrupt Enable
                                 .equ	TOIE2A	= TOIE2	; For compatibility
                                 .equ	OCIE2A	= 1	; Timer/Counter2 Output Compare Match A Interrupt Enable
                                 .equ	OCIE2B	= 2	; Timer/Counter2 Output Compare Match B Interrupt Enable
                                 
                                 ; TIFR2 - Timer/Counter Interrupt Flag Register
                                 .equ	TOV2	= 0	; Timer/Counter2 Overflow Flag
                                 .equ	OCF2A	= 1	; Output Compare Flag 2A
                                 .equ	OCF2B	= 2	; Output Compare Flag 2B
                                 
                                 ; TCCR2A - Timer/Counter2 Control Register A
                                 .equ	WGM20	= 0	; Waveform Genration Mode
                                 .equ	WGM21	= 1	; Waveform Genration Mode
                                 .equ	COM2B0	= 4	; Compare Output Mode bit 0
                                 .equ	COM2B1	= 5	; Compare Output Mode bit 1
                                 .equ	COM2A0	= 6	; Compare Output Mode bit 1
                                 .equ	COM2A1	= 7	; Compare Output Mode bit 1
                                 
                                 ; TCCR2B - Timer/Counter2 Control Register B
                                 .equ	CS20	= 0	; Clock Select bit 0
                                 .equ	CS21	= 1	; Clock Select bit 1
                                 .equ	CS22	= 2	; Clock Select bit 2
                                 .equ	WGM22	= 3	; Waveform Generation Mode
                                 .equ	FOC2B	= 6	; Force Output Compare B
                                 .equ	FOC2A	= 7	; Force Output Compare A
                                 
                                 ; TCNT2 - Timer/Counter2
                                 .equ	TCNT2_0	= 0	; Timer/Counter 2 bit 0
                                 .equ	TCNT2_1	= 1	; Timer/Counter 2 bit 1
                                 .equ	TCNT2_2	= 2	; Timer/Counter 2 bit 2
                                 .equ	TCNT2_3	= 3	; Timer/Counter 2 bit 3
                                 .equ	TCNT2_4	= 4	; Timer/Counter 2 bit 4
                                 .equ	TCNT2_5	= 5	; Timer/Counter 2 bit 5
                                 .equ	TCNT2_6	= 6	; Timer/Counter 2 bit 6
                                 .equ	TCNT2_7	= 7	; Timer/Counter 2 bit 7
                                 
                                 ; OCR2A - Timer/Counter2 Output Compare Register A
                                 .equ	OCR2A_0	= 0	; Timer/Counter2 Output Compare Register Bit 0
                                 .equ	OCR2A_1	= 1	; Timer/Counter2 Output Compare Register Bit 1
                                 .equ	OCR2A_2	= 2	; Timer/Counter2 Output Compare Register Bit 2
                                 .equ	OCR2A_3	= 3	; Timer/Counter2 Output Compare Register Bit 3
                                 .equ	OCR2A_4	= 4	; Timer/Counter2 Output Compare Register Bit 4
                                 .equ	OCR2A_5	= 5	; Timer/Counter2 Output Compare Register Bit 5
                                 .equ	OCR2A_6	= 6	; Timer/Counter2 Output Compare Register Bit 6
                                 .equ	OCR2A_7	= 7	; Timer/Counter2 Output Compare Register Bit 7
                                 
                                 ; OCR2B - Timer/Counter2 Output Compare Register B
                                 .equ	OCR2B_0	= 0	; Timer/Counter2 Output Compare Register Bit 0
                                 .equ	OCR2B_1	= 1	; Timer/Counter2 Output Compare Register Bit 1
                                 .equ	OCR2B_2	= 2	; Timer/Counter2 Output Compare Register Bit 2
                                 .equ	OCR2B_3	= 3	; Timer/Counter2 Output Compare Register Bit 3
                                 .equ	OCR2B_4	= 4	; Timer/Counter2 Output Compare Register Bit 4
                                 .equ	OCR2B_5	= 5	; Timer/Counter2 Output Compare Register Bit 5
                                 .equ	OCR2B_6	= 6	; Timer/Counter2 Output Compare Register Bit 6
                                 .equ	OCR2B_7	= 7	; Timer/Counter2 Output Compare Register Bit 7
                                 
                                 ; ASSR - Asynchronous Status Register
                                 .equ	TCR2BUB	= 0	; Timer/Counter Control Register2 Update Busy
                                 .equ	TCR2AUB	= 1	; Timer/Counter Control Register2 Update Busy
                                 .equ	OCR2BUB	= 2	; Output Compare Register 2 Update Busy
                                 .equ	OCR2AUB	= 3	; Output Compare Register2 Update Busy
                                 .equ	TCN2UB	= 4	; Timer/Counter2 Update Busy
                                 .equ	AS2	= 5	; Asynchronous Timer/Counter2
                                 .equ	EXCLK	= 6	; Enable External Clock Input
                                 
                                 ; GTCCR - General Timer Counter Control register
                                 .equ	PSRASY	= 1	; Prescaler Reset Timer/Counter2
                                 .equ	PSR2	= PSRASY	; For compatibility
                                 ;.equ	TSM	= 7	; Timer/Counter Synchronization Mode
                                 
                                 
                                 ; ***** AD_CONVERTER *****************
                                 ; ADMUX - The ADC multiplexer Selection Register
                                 .equ	MUX0	= 0	; Analog Channel and Gain Selection Bits
                                 .equ	MUX1	= 1	; Analog Channel and Gain Selection Bits
                                 .equ	MUX2	= 2	; Analog Channel and Gain Selection Bits
                                 .equ	MUX3	= 3	; Analog Channel and Gain Selection Bits
                                 .equ	ADLAR	= 5	; Left Adjust Result
                                 .equ	REFS0	= 6	; Reference Selection Bit 0
                                 .equ	REFS1	= 7	; Reference Selection Bit 1
                                 
                                 ; ADCSRA - The ADC Control and Status register A
                                 .equ	ADPS0	= 0	; ADC  Prescaler Select Bits
                                 .equ	ADPS1	= 1	; ADC  Prescaler Select Bits
                                 .equ	ADPS2	= 2	; ADC  Prescaler Select Bits
                                 .equ	ADIE	= 3	; ADC Interrupt Enable
                                 .equ	ADIF	= 4	; ADC Interrupt Flag
                                 .equ	ADATE	= 5	; ADC  Auto Trigger Enable
                                 .equ	ADSC	= 6	; ADC Start Conversion
                                 .equ	ADEN	= 7	; ADC Enable
                                 
                                 ; ADCSRB - The ADC Control and Status register B
                                 .equ	ADTS0	= 0	; ADC Auto Trigger Source bit 0
                                 .equ	ADTS1	= 1	; ADC Auto Trigger Source bit 1
                                 .equ	ADTS2	= 2	; ADC Auto Trigger Source bit 2
                                 .equ	ACME	= 6	; 
                                 
                                 ; ADCH - ADC Data Register High Byte
                                 .equ	ADCH0	= 0	; ADC Data Register High Byte Bit 0
                                 .equ	ADCH1	= 1	; ADC Data Register High Byte Bit 1
                                 .equ	ADCH2	= 2	; ADC Data Register High Byte Bit 2
                                 .equ	ADCH3	= 3	; ADC Data Register High Byte Bit 3
                                 .equ	ADCH4	= 4	; ADC Data Register High Byte Bit 4
                                 .equ	ADCH5	= 5	; ADC Data Register High Byte Bit 5
                                 .equ	ADCH6	= 6	; ADC Data Register High Byte Bit 6
                                 .equ	ADCH7	= 7	; ADC Data Register High Byte Bit 7
                                 
                                 ; ADCL - ADC Data Register Low Byte
                                 .equ	ADCL0	= 0	; ADC Data Register Low Byte Bit 0
                                 .equ	ADCL1	= 1	; ADC Data Register Low Byte Bit 1
                                 .equ	ADCL2	= 2	; ADC Data Register Low Byte Bit 2
                                 .equ	ADCL3	= 3	; ADC Data Register Low Byte Bit 3
                                 .equ	ADCL4	= 4	; ADC Data Register Low Byte Bit 4
                                 .equ	ADCL5	= 5	; ADC Data Register Low Byte Bit 5
                                 .equ	ADCL6	= 6	; ADC Data Register Low Byte Bit 6
                                 .equ	ADCL7	= 7	; ADC Data Register Low Byte Bit 7
                                 
                                 ; DIDR0 - Digital Input Disable Register
                                 .equ	ADC0D	= 0	; 
                                 .equ	ADC1D	= 1	; 
                                 .equ	ADC2D	= 2	; 
                                 .equ	ADC3D	= 3	; 
                                 .equ	ADC4D	= 4	; 
                                 .equ	ADC5D	= 5	; 
                                 
                                 
                                 ; ***** ANALOG_COMPARATOR ************
                                 ; ACSR - Analog Comparator Control And Status Register
                                 .equ	ACIS0	= 0	; Analog Comparator Interrupt Mode Select bit 0
                                 .equ	ACIS1	= 1	; Analog Comparator Interrupt Mode Select bit 1
                                 .equ	ACIC	= 2	; Analog Comparator Input Capture Enable
                                 .equ	ACIE	= 3	; Analog Comparator Interrupt Enable
                                 .equ	ACI	= 4	; Analog Comparator Interrupt Flag
                                 .equ	ACO	= 5	; Analog Compare Output
                                 .equ	ACBG	= 6	; Analog Comparator Bandgap Select
                                 .equ	ACD	= 7	; Analog Comparator Disable
                                 
                                 ; DIDR1 - Digital Input Disable Register 1
                                 .equ	AIN0D	= 0	; AIN0 Digital Input Disable
                                 .equ	AIN1D	= 1	; AIN1 Digital Input Disable
                                 
                                 
                                 ; ***** PORTB ************************
                                 ; PORTB - Port B Data Register
                                 .equ	PORTB0	= 0	; Port B Data Register bit 0
                                 .equ	PB0	= 0	; For compatibility
                                 .equ	PORTB1	= 1	; Port B Data Register bit 1
                                 .equ	PB1	= 1	; For compatibility
                                 .equ	PORTB2	= 2	; Port B Data Register bit 2
                                 .equ	PB2	= 2	; For compatibility
                                 .equ	PORTB3	= 3	; Port B Data Register bit 3
                                 .equ	PB3	= 3	; For compatibility
                                 .equ	PORTB4	= 4	; Port B Data Register bit 4
                                 .equ	PB4	= 4	; For compatibility
                                 .equ	PORTB5	= 5	; Port B Data Register bit 5
                                 .equ	PB5	= 5	; For compatibility
                                 .equ	PORTB6	= 6	; Port B Data Register bit 6
                                 .equ	PB6	= 6	; For compatibility
                                 .equ	PORTB7	= 7	; Port B Data Register bit 7
                                 .equ	PB7	= 7	; For compatibility
                                 
                                 ; DDRB - Port B Data Direction Register
                                 .equ	DDB0	= 0	; Port B Data Direction Register bit 0
                                 .equ	DDB1	= 1	; Port B Data Direction Register bit 1
                                 .equ	DDB2	= 2	; Port B Data Direction Register bit 2
                                 .equ	DDB3	= 3	; Port B Data Direction Register bit 3
                                 .equ	DDB4	= 4	; Port B Data Direction Register bit 4
                                 .equ	DDB5	= 5	; Port B Data Direction Register bit 5
                                 .equ	DDB6	= 6	; Port B Data Direction Register bit 6
                                 .equ	DDB7	= 7	; Port B Data Direction Register bit 7
                                 
                                 ; PINB - Port B Input Pins
                                 .equ	PINB0	= 0	; Port B Input Pins bit 0
                                 .equ	PINB1	= 1	; Port B Input Pins bit 1
                                 .equ	PINB2	= 2	; Port B Input Pins bit 2
                                 .equ	PINB3	= 3	; Port B Input Pins bit 3
                                 .equ	PINB4	= 4	; Port B Input Pins bit 4
                                 .equ	PINB5	= 5	; Port B Input Pins bit 5
                                 .equ	PINB6	= 6	; Port B Input Pins bit 6
                                 .equ	PINB7	= 7	; Port B Input Pins bit 7
                                 
                                 
                                 ; ***** PORTC ************************
                                 ; PORTC - Port C Data Register
                                 .equ	PORTC0	= 0	; Port C Data Register bit 0
                                 .equ	PC0	= 0	; For compatibility
                                 .equ	PORTC1	= 1	; Port C Data Register bit 1
                                 .equ	PC1	= 1	; For compatibility
                                 .equ	PORTC2	= 2	; Port C Data Register bit 2
                                 .equ	PC2	= 2	; For compatibility
                                 .equ	PORTC3	= 3	; Port C Data Register bit 3
                                 .equ	PC3	= 3	; For compatibility
                                 .equ	PORTC4	= 4	; Port C Data Register bit 4
                                 .equ	PC4	= 4	; For compatibility
                                 .equ	PORTC5	= 5	; Port C Data Register bit 5
                                 .equ	PC5	= 5	; For compatibility
                                 .equ	PORTC6	= 6	; Port C Data Register bit 6
                                 .equ	PC6	= 6	; For compatibility
                                 
                                 ; DDRC - Port C Data Direction Register
                                 .equ	DDC0	= 0	; Port C Data Direction Register bit 0
                                 .equ	DDC1	= 1	; Port C Data Direction Register bit 1
                                 .equ	DDC2	= 2	; Port C Data Direction Register bit 2
                                 .equ	DDC3	= 3	; Port C Data Direction Register bit 3
                                 .equ	DDC4	= 4	; Port C Data Direction Register bit 4
                                 .equ	DDC5	= 5	; Port C Data Direction Register bit 5
                                 .equ	DDC6	= 6	; Port C Data Direction Register bit 6
                                 
                                 ; PINC - Port C Input Pins
                                 .equ	PINC0	= 0	; Port C Input Pins bit 0
                                 .equ	PINC1	= 1	; Port C Input Pins bit 1
                                 .equ	PINC2	= 2	; Port C Input Pins bit 2
                                 .equ	PINC3	= 3	; Port C Input Pins bit 3
                                 .equ	PINC4	= 4	; Port C Input Pins bit 4
                                 .equ	PINC5	= 5	; Port C Input Pins bit 5
                                 .equ	PINC6	= 6	; Port C Input Pins bit 6
                                 
                                 
                                 ; ***** PORTD ************************
                                 ; PORTD - Port D Data Register
                                 .equ	PORTD0	= 0	; Port D Data Register bit 0
                                 .equ	PD0	= 0	; For compatibility
                                 .equ	PORTD1	= 1	; Port D Data Register bit 1
                                 .equ	PD1	= 1	; For compatibility
                                 .equ	PORTD2	= 2	; Port D Data Register bit 2
                                 .equ	PD2	= 2	; For compatibility
                                 .equ	PORTD3	= 3	; Port D Data Register bit 3
                                 .equ	PD3	= 3	; For compatibility
                                 .equ	PORTD4	= 4	; Port D Data Register bit 4
                                 .equ	PD4	= 4	; For compatibility
                                 .equ	PORTD5	= 5	; Port D Data Register bit 5
                                 .equ	PD5	= 5	; For compatibility
                                 .equ	PORTD6	= 6	; Port D Data Register bit 6
                                 .equ	PD6	= 6	; For compatibility
                                 .equ	PORTD7	= 7	; Port D Data Register bit 7
                                 .equ	PD7	= 7	; For compatibility
                                 
                                 ; DDRD - Port D Data Direction Register
                                 .equ	DDD0	= 0	; Port D Data Direction Register bit 0
                                 .equ	DDD1	= 1	; Port D Data Direction Register bit 1
                                 .equ	DDD2	= 2	; Port D Data Direction Register bit 2
                                 .equ	DDD3	= 3	; Port D Data Direction Register bit 3
                                 .equ	DDD4	= 4	; Port D Data Direction Register bit 4
                                 .equ	DDD5	= 5	; Port D Data Direction Register bit 5
                                 .equ	DDD6	= 6	; Port D Data Direction Register bit 6
                                 .equ	DDD7	= 7	; Port D Data Direction Register bit 7
                                 
                                 ; PIND - Port D Input Pins
                                 .equ	PIND0	= 0	; Port D Input Pins bit 0
                                 .equ	PIND1	= 1	; Port D Input Pins bit 1
                                 .equ	PIND2	= 2	; Port D Input Pins bit 2
                                 .equ	PIND3	= 3	; Port D Input Pins bit 3
                                 .equ	PIND4	= 4	; Port D Input Pins bit 4
                                 .equ	PIND5	= 5	; Port D Input Pins bit 5
                                 .equ	PIND6	= 6	; Port D Input Pins bit 6
                                 .equ	PIND7	= 7	; Port D Input Pins bit 7
                                 
                                 
                                 ; ***** TIMER_COUNTER_0 **************
                                 ; TIMSK0 - Timer/Counter0 Interrupt Mask Register
                                 .equ	TOIE0	= 0	; Timer/Counter0 Overflow Interrupt Enable
                                 .equ	OCIE0A	= 1	; Timer/Counter0 Output Compare Match A Interrupt Enable
                                 .equ	OCIE0B	= 2	; Timer/Counter0 Output Compare Match B Interrupt Enable
                                 
                                 ; TIFR0 - Timer/Counter0 Interrupt Flag register
                                 .equ	TOV0	= 0	; Timer/Counter0 Overflow Flag
                                 .equ	OCF0A	= 1	; Timer/Counter0 Output Compare Flag 0A
                                 .equ	OCF0B	= 2	; Timer/Counter0 Output Compare Flag 0B
                                 
                                 ; TCCR0A - Timer/Counter  Control Register A
                                 .equ	WGM00	= 0	; Waveform Generation Mode
                                 .equ	WGM01	= 1	; Waveform Generation Mode
                                 .equ	COM0B0	= 4	; Compare Output Mode, Fast PWm
                                 .equ	COM0B1	= 5	; Compare Output Mode, Fast PWm
                                 .equ	COM0A0	= 6	; Compare Output Mode, Phase Correct PWM Mode
                                 .equ	COM0A1	= 7	; Compare Output Mode, Phase Correct PWM Mode
                                 
                                 ; TCCR0B - Timer/Counter Control Register B
                                 .equ	CS00	= 0	; Clock Select
                                 .equ	CS01	= 1	; Clock Select
                                 .equ	CS02	= 2	; Clock Select
                                 .equ	WGM02	= 3	; 
                                 .equ	FOC0B	= 6	; Force Output Compare B
                                 .equ	FOC0A	= 7	; Force Output Compare A
                                 
                                 ; TCNT0 - Timer/Counter0
                                 .equ	TCNT0_0	= 0	; 
                                 .equ	TCNT0_1	= 1	; 
                                 .equ	TCNT0_2	= 2	; 
                                 .equ	TCNT0_3	= 3	; 
                                 .equ	TCNT0_4	= 4	; 
                                 .equ	TCNT0_5	= 5	; 
                                 .equ	TCNT0_6	= 6	; 
                                 .equ	TCNT0_7	= 7	; 
                                 
                                 ; OCR0A - Timer/Counter0 Output Compare Register
                                 .equ	OCR0A_0	= 0	; 
                                 .equ	OCR0A_1	= 1	; 
                                 .equ	OCR0A_2	= 2	; 
                                 .equ	OCR0A_3	= 3	; 
                                 .equ	OCR0A_4	= 4	; 
                                 .equ	OCR0A_5	= 5	; 
                                 .equ	OCR0A_6	= 6	; 
                                 .equ	OCR0A_7	= 7	; 
                                 
                                 ; OCR0B - Timer/Counter0 Output Compare Register
                                 .equ	OCR0B_0	= 0	; 
                                 .equ	OCR0B_1	= 1	; 
                                 .equ	OCR0B_2	= 2	; 
                                 .equ	OCR0B_3	= 3	; 
                                 .equ	OCR0B_4	= 4	; 
                                 .equ	OCR0B_5	= 5	; 
                                 .equ	OCR0B_6	= 6	; 
                                 .equ	OCR0B_7	= 7	; 
                                 
                                 ; GTCCR - General Timer/Counter Control Register
                                 ;.equ	PSRSYNC	= 0	; Prescaler Reset Timer/Counter1 and Timer/Counter0
                                 .equ	PSR10	= PSRSYNC	; For compatibility
                                 ;.equ	TSM	= 7	; Timer/Counter Synchronization Mode
                                 
                                 
                                 ; ***** EXTERNAL_INTERRUPT ***********
                                 ; EICRA - External Interrupt Control Register
                                 .equ	ISC00	= 0	; External Interrupt Sense Control 0 Bit 0
                                 .equ	ISC01	= 1	; External Interrupt Sense Control 0 Bit 1
                                 .equ	ISC10	= 2	; External Interrupt Sense Control 1 Bit 0
                                 .equ	ISC11	= 3	; External Interrupt Sense Control 1 Bit 1
                                 
                                 ; EIMSK - External Interrupt Mask Register
                                 .equ	INT0	= 0	; External Interrupt Request 0 Enable
                                 .equ	INT1	= 1	; External Interrupt Request 1 Enable
                                 
                                 ; EIFR - External Interrupt Flag Register
                                 .equ	INTF0	= 0	; External Interrupt Flag 0
                                 .equ	INTF1	= 1	; External Interrupt Flag 1
                                 
                                 ; PCICR - Pin Change Interrupt Control Register
                                 .equ	PCIE0	= 0	; Pin Change Interrupt Enable 0
                                 .equ	PCIE1	= 1	; Pin Change Interrupt Enable 1
                                 .equ	PCIE2	= 2	; Pin Change Interrupt Enable 2
                                 
                                 ; PCMSK2 - Pin Change Mask Register 2
                                 .equ	PCINT16	= 0	; Pin Change Enable Mask 16
                                 .equ	PCINT17	= 1	; Pin Change Enable Mask 17
                                 .equ	PCINT18	= 2	; Pin Change Enable Mask 18
                                 .equ	PCINT19	= 3	; Pin Change Enable Mask 19
                                 .equ	PCINT20	= 4	; Pin Change Enable Mask 20
                                 .equ	PCINT21	= 5	; Pin Change Enable Mask 21
                                 .equ	PCINT22	= 6	; Pin Change Enable Mask 22
                                 .equ	PCINT23	= 7	; Pin Change Enable Mask 23
                                 
                                 ; PCMSK1 - Pin Change Mask Register 1
                                 .equ	PCINT8	= 0	; Pin Change Enable Mask 8
                                 .equ	PCINT9	= 1	; Pin Change Enable Mask 9
                                 .equ	PCINT10	= 2	; Pin Change Enable Mask 10
                                 .equ	PCINT11	= 3	; Pin Change Enable Mask 11
                                 .equ	PCINT12	= 4	; Pin Change Enable Mask 12
                                 .equ	PCINT13	= 5	; Pin Change Enable Mask 13
                                 .equ	PCINT14	= 6	; Pin Change Enable Mask 14
                                 
                                 ; PCMSK0 - Pin Change Mask Register 0
                                 .equ	PCINT0	= 0	; Pin Change Enable Mask 0
                                 .equ	PCINT1	= 1	; Pin Change Enable Mask 1
                                 .equ	PCINT2	= 2	; Pin Change Enable Mask 2
                                 .equ	PCINT3	= 3	; Pin Change Enable Mask 3
                                 .equ	PCINT4	= 4	; Pin Change Enable Mask 4
                                 .equ	PCINT5	= 5	; Pin Change Enable Mask 5
                                 .equ	PCINT6	= 6	; Pin Change Enable Mask 6
                                 .equ	PCINT7	= 7	; Pin Change Enable Mask 7
                                 
                                 ; PCIFR - Pin Change Interrupt Flag Register
                                 .equ	PCIF0	= 0	; Pin Change Interrupt Flag 0
                                 .equ	PCIF1	= 1	; Pin Change Interrupt Flag 1
                                 .equ	PCIF2	= 2	; Pin Change Interrupt Flag 2
                                 
                                 
                                 ; ***** SPI **************************
                                 ; SPDR - SPI Data Register
                                 .equ	SPDR0	= 0	; SPI Data Register bit 0
                                 .equ	SPDR1	= 1	; SPI Data Register bit 1
                                 .equ	SPDR2	= 2	; SPI Data Register bit 2
                                 .equ	SPDR3	= 3	; SPI Data Register bit 3
                                 .equ	SPDR4	= 4	; SPI Data Register bit 4
                                 .equ	SPDR5	= 5	; SPI Data Register bit 5
                                 .equ	SPDR6	= 6	; SPI Data Register bit 6
                                 .equ	SPDR7	= 7	; SPI Data Register bit 7
                                 
                                 ; SPSR - SPI Status Register
                                 .equ	SPI2X	= 0	; Double SPI Speed Bit
                                 .equ	WCOL	= 6	; Write Collision Flag
                                 .equ	SPIF	= 7	; SPI Interrupt Flag
                                 
                                 ; SPCR - SPI Control Register
                                 .equ	SPR0	= 0	; SPI Clock Rate Select 0
                                 .equ	SPR1	= 1	; SPI Clock Rate Select 1
                                 .equ	CPHA	= 2	; Clock Phase
                                 .equ	CPOL	= 3	; Clock polarity
                                 .equ	MSTR	= 4	; Master/Slave Select
                                 .equ	DORD	= 5	; Data Order
                                 .equ	SPE	= 6	; SPI Enable
                                 .equ	SPIE	= 7	; SPI Interrupt Enable
                                 
                                 
                                 ; ***** WATCHDOG *********************
                                 ; WDTCSR - Watchdog Timer Control Register
                                 .equ	WDP0	= 0	; Watch Dog Timer Prescaler bit 0
                                 .equ	WDP1	= 1	; Watch Dog Timer Prescaler bit 1
                                 .equ	WDP2	= 2	; Watch Dog Timer Prescaler bit 2
                                 .equ	WDE	= 3	; Watch Dog Enable
                                 .equ	WDCE	= 4	; Watchdog Change Enable
                                 .equ	WDP3	= 5	; Watchdog Timer Prescaler Bit 3
                                 .equ	WDIE	= 6	; Watchdog Timeout Interrupt Enable
                                 .equ	WDIF	= 7	; Watchdog Timeout Interrupt Flag
                                 
                                 
                                 ; ***** CPU **************************
                                 ; SREG - Status Register
                                 .equ	SREG_C	= 0	; Carry Flag
                                 .equ	SREG_Z	= 1	; Zero Flag
                                 .equ	SREG_N	= 2	; Negative Flag
                                 .equ	SREG_V	= 3	; Two's Complement Overflow Flag
                                 .equ	SREG_S	= 4	; Sign Bit
                                 .equ	SREG_H	= 5	; Half Carry Flag
                                 .equ	SREG_T	= 6	; Bit Copy Storage
                                 .equ	SREG_I	= 7	; Global Interrupt Enable
                                 
                                 ; OSCCAL - Oscillator Calibration Value
                                 .equ	CAL0	= 0	; Oscillator Calibration Value Bit0
                                 .equ	CAL1	= 1	; Oscillator Calibration Value Bit1
                                 .equ	CAL2	= 2	; Oscillator Calibration Value Bit2
                                 .equ	CAL3	= 3	; Oscillator Calibration Value Bit3
                                 .equ	CAL4	= 4	; Oscillator Calibration Value Bit4
                                 .equ	CAL5	= 5	; Oscillator Calibration Value Bit5
                                 .equ	CAL6	= 6	; Oscillator Calibration Value Bit6
                                 .equ	CAL7	= 7	; Oscillator Calibration Value Bit7
                                 
                                 ; CLKPR - Clock Prescale Register
                                 .equ	CLKPS0	= 0	; Clock Prescaler Select Bit 0
                                 .equ	CLKPS1	= 1	; Clock Prescaler Select Bit 1
                                 .equ	CLKPS2	= 2	; Clock Prescaler Select Bit 2
                                 .equ	CLKPS3	= 3	; Clock Prescaler Select Bit 3
                                 .equ	CLKPCE	= 7	; Clock Prescaler Change Enable
                                 
                                 ; SPMCSR - Store Program Memory Control and Status Register
                                 .equ    SELFPRGEN = 0; Added for backwards compatibility
                                 .equ	SPMEN	= 0	; Store Program Memory
                                 .equ	PGERS	= 1	; Page Erase
                                 .equ	PGWRT	= 2	; Page Write
                                 .equ	BLBSET	= 3	; Boot Lock Bit Set
                                 .equ	RWWSRE	= 4	; Read-While-Write section read enable
                                 .equ    SIGRD   = 5 ; Signature Row Read
                                 .equ	RWWSB	= 6	; Read-While-Write Section Busy
                                 .equ	SPMIE	= 7	; SPM Interrupt Enable
                                 
                                 ; MCUCR - MCU Control Register
                                 .equ	IVCE	= 0	; 
                                 .equ	IVSEL	= 1	; 
                                 .equ	PUD	= 4	; 
                                 .equ	BODSE	= 5	; BOD Sleep Enable
                                 .equ	BODS	= 6	; BOD Sleep
                                 
                                 ; MCUSR - MCU Status Register
                                 .equ	PORF	= 0	; Power-on reset flag
                                 .equ	EXTRF	= 1	; External Reset Flag
                                 .equ	EXTREF	= EXTRF	; For compatibility
                                 .equ	BORF	= 2	; Brown-out Reset Flag
                                 .equ	WDRF	= 3	; Watchdog Reset Flag
                                 
                                 ; SMCR - Sleep Mode Control Register
                                 .equ	SE	= 0	; Sleep Enable
                                 .equ	SM0	= 1	; Sleep Mode Select Bit 0
                                 .equ	SM1	= 2	; Sleep Mode Select Bit 1
                                 .equ	SM2	= 3	; Sleep Mode Select Bit 2
                                 
                                 ; GPIOR2 - General Purpose I/O Register 2
                                 .equ	GPIOR20	= 0	; 
                                 .equ	GPIOR21	= 1	; 
                                 .equ	GPIOR22	= 2	; 
                                 .equ	GPIOR23	= 3	; 
                                 .equ	GPIOR24	= 4	; 
                                 .equ	GPIOR25	= 5	; 
                                 .equ	GPIOR26	= 6	; 
                                 .equ	GPIOR27	= 7	; 
                                 
                                 ; GPIOR1 - General Purpose I/O Register 1
                                 .equ	GPIOR10	= 0	; 
                                 .equ	GPIOR11	= 1	; 
                                 .equ	GPIOR12	= 2	; 
                                 .equ	GPIOR13	= 3	; 
                                 .equ	GPIOR14	= 4	; 
                                 .equ	GPIOR15	= 5	; 
                                 .equ	GPIOR16	= 6	; 
                                 .equ	GPIOR17	= 7	; 
                                 
                                 ; GPIOR0 - General Purpose I/O Register 0
                                 .equ	GPIOR00	= 0	; 
                                 .equ	GPIOR01	= 1	; 
                                 .equ	GPIOR02	= 2	; 
                                 .equ	GPIOR03	= 3	; 
                                 .equ	GPIOR04	= 4	; 
                                 .equ	GPIOR05	= 5	; 
                                 .equ	GPIOR06	= 6	; 
                                 .equ	GPIOR07	= 7	; 
                                 
                                 ; PRR - Power Reduction Register
                                 .equ	PRADC	= 0	; Power Reduction ADC
                                 .equ	PRUSART0	= 1	; Power Reduction USART
                                 .equ	PRSPI	= 2	; Power Reduction Serial Peripheral Interface
                                 .equ	PRTIM1	= 3	; Power Reduction Timer/Counter1
                                 .equ	PRTIM0	= 5	; Power Reduction Timer/Counter0
                                 .equ	PRTIM2	= 6	; Power Reduction Timer/Counter2
                                 .equ	PRTWI	= 7	; Power Reduction TWI
                                 
                                 
                                 ; ***** EEPROM ***********************
                                 ; EEARL - EEPROM Address Register Low Byte
                                 .equ	EEAR0	= 0	; EEPROM Read/Write Access Bit 0
                                 .equ	EEAR1	= 1	; EEPROM Read/Write Access Bit 1
                                 .equ	EEAR2	= 2	; EEPROM Read/Write Access Bit 2
                                 .equ	EEAR3	= 3	; EEPROM Read/Write Access Bit 3
                                 .equ	EEAR4	= 4	; EEPROM Read/Write Access Bit 4
                                 .equ	EEAR5	= 5	; EEPROM Read/Write Access Bit 5
                                 .equ	EEAR6	= 6	; EEPROM Read/Write Access Bit 6
                                 .equ	EEAR7	= 7	; EEPROM Read/Write Access Bit 7
                                 
                                 ; EEARH - EEPROM Address Register High Byte
                                 .equ	EEAR8	= 0	; EEPROM Read/Write Access Bit 8
                                 .equ	EEAR9	= 1	; EEPROM Read/Write Access Bit 9
                                 
                                 ; EEDR - EEPROM Data Register
                                 .equ	EEDR0	= 0	; EEPROM Data Register bit 0
                                 .equ	EEDR1	= 1	; EEPROM Data Register bit 1
                                 .equ	EEDR2	= 2	; EEPROM Data Register bit 2
                                 .equ	EEDR3	= 3	; EEPROM Data Register bit 3
                                 .equ	EEDR4	= 4	; EEPROM Data Register bit 4
                                 .equ	EEDR5	= 5	; EEPROM Data Register bit 5
                                 .equ	EEDR6	= 6	; EEPROM Data Register bit 6
                                 .equ	EEDR7	= 7	; EEPROM Data Register bit 7
                                 
                                 ; EECR - EEPROM Control Register
                                 .equ	EERE	= 0	; EEPROM Read Enable
                                 .equ	EEPE	= 1	; EEPROM Write Enable
                                 .equ	EEMPE	= 2	; EEPROM Master Write Enable
                                 .equ	EERIE	= 3	; EEPROM Ready Interrupt Enable
                                 .equ	EEPM0	= 4	; EEPROM Programming Mode Bit 0
                                 .equ	EEPM1	= 5	; EEPROM Programming Mode Bit 1
                                 
                                 
                                 
                                 ; ***** LOCKSBITS ********************************************************
                                 .equ	LB1	= 0	; Lock bit
                                 .equ	LB2	= 1	; Lock bit
                                 .equ	BLB01	= 2	; Boot Lock bit
                                 .equ	BLB02	= 3	; Boot Lock bit
                                 .equ	BLB11	= 4	; Boot lock bit
                                 .equ	BLB12	= 5	; Boot lock bit
                                 
                                 
                                 ; ***** FUSES ************************************************************
                                 ; LOW fuse bits
                                 .equ	CKSEL0	= 0	; Select Clock Source
                                 .equ	CKSEL1	= 1	; Select Clock Source
                                 .equ	CKSEL2	= 2	; Select Clock Source
                                 .equ	CKSEL3	= 3	; Select Clock Source
                                 .equ	SUT0	= 4	; Select start-up time
                                 .equ	SUT1	= 5	; Select start-up time
                                 .equ	CKOUT	= 6	; Clock output
                                 .equ	CKDIV8	= 7	; Divide clock by 8
                                 
                                 ; HIGH fuse bits
                                 .equ	BOOTRST	= 0	; Select reset vector
                                 .equ	BOOTSZ0	= 1	; Select boot size
                                 .equ	BOOTSZ1	= 2	; Select boot size
                                 .equ	EESAVE	= 3	; EEPROM memory is preserved through chip erase
                                 .equ	WDTON	= 4	; Watchdog Timer Always On
                                 .equ	SPIEN	= 5	; Enable Serial programming and Data Downloading
                                 .equ	DWEN	= 6	; debugWIRE Enable
                                 .equ	RSTDISBL	= 7	; External reset disable
                                 
                                 ; EXTENDED fuse bits
                                 .equ	BODLEVEL0	= 0	; Brown-out Detector trigger level
                                 .equ	BODLEVEL1	= 1	; Brown-out Detector trigger level
                                 .equ	BODLEVEL2	= 2	; Brown-out Detector trigger level
                                 
                                 
                                 
                                 ; ***** CPU REGISTER DEFINITIONS *****************************************
                                 .def	XH	= r27
                                 .def	XL	= r26
                                 .def	YH	= r29
                                 .def	YL	= r28
                                 .def	ZH	= r31
                                 .def	ZL	= r30
                                 
                                 
                                 
                                 ; ***** DATA MEMORY DECLARATIONS *****************************************
                                 .equ	FLASHEND	= 0x3fff	; Note: Word address
                                 .equ	IOEND	= 0x00ff
                                 .equ	SRAM_START	= 0x0100
                                 .equ	SRAM_SIZE	= 2048
                                 .equ	RAMEND	= 0x08ff
                                 .equ	XRAMEND	= 0x0000
                                 .equ	E2END	= 0x03ff
                                 .equ	EEPROMEND	= 0x03ff
                                 .equ	EEADRBITS	= 10
                                 #pragma AVRPART MEMORY PROG_FLASH 32768
                                 #pragma AVRPART MEMORY EEPROM 1024
                                 #pragma AVRPART MEMORY INT_SRAM SIZE 2048
                                 #pragma AVRPART MEMORY INT_SRAM START_ADDR 0x100
                                 
                                 
                                 
                                 ; ***** BOOTLOADER DECLARATIONS ******************************************
                                 .equ	NRWW_START_ADDR	= 0x3800
                                 .equ	NRWW_STOP_ADDR	= 0x3fff
                                 .equ	RWW_START_ADDR	= 0x0
                                 .equ	RWW_STOP_ADDR	= 0x37ff
                                 .equ	PAGESIZE	= 64
                                 .equ	FIRSTBOOTSTART	= 0x3f00
                                 .equ	SECONDBOOTSTART	= 0x3e00
                                 .equ	THIRDBOOTSTART	= 0x3c00
                                 .equ	FOURTHBOOTSTART	= 0x3800
                                 .equ	SMALLBOOTSTART	= FIRSTBOOTSTART
                                 .equ	LARGEBOOTSTART	= FOURTHBOOTSTART
                                 
                                 
                                 
                                 ; ***** INTERRUPT VECTORS ************************************************
                                 .equ	INT0addr	= 0x0002	; External Interrupt Request 0
                                 .equ	INT1addr	= 0x0004	; External Interrupt Request 1
                                 .equ	PCI0addr	= 0x0006	; Pin Change Interrupt Request 0
                                 .equ	PCI1addr	= 0x0008	; Pin Change Interrupt Request 0
                                 .equ	PCI2addr	= 0x000a	; Pin Change Interrupt Request 1
                                 .equ	WDTaddr	= 0x000c	; Watchdog Time-out Interrupt
                                 .equ	OC2Aaddr	= 0x000e	; Timer/Counter2 Compare Match A
                                 .equ	OC2Baddr	= 0x0010	; Timer/Counter2 Compare Match A
                                 .equ	OVF2addr	= 0x0012	; Timer/Counter2 Overflow
                                 .equ	ICP1addr	= 0x0014	; Timer/Counter1 Capture Event
                                 .equ	OC1Aaddr	= 0x0016	; Timer/Counter1 Compare Match A
                                 .equ	OC1Baddr	= 0x0018	; Timer/Counter1 Compare Match B
                                 .equ	OVF1addr	= 0x001a	; Timer/Counter1 Overflow
                                 .equ	OC0Aaddr	= 0x001c	; TimerCounter0 Compare Match A
                                 .equ	OC0Baddr	= 0x001e	; TimerCounter0 Compare Match B
                                 .equ	OVF0addr	= 0x0020	; Timer/Couner0 Overflow
                                 .equ	SPIaddr	= 0x0022	; SPI Serial Transfer Complete
                                 .equ	URXCaddr	= 0x0024	; USART Rx Complete
                                 .equ	UDREaddr	= 0x0026	; USART, Data Register Empty
                                 .equ	UTXCaddr	= 0x0028	; USART Tx Complete
                                 .equ	ADCCaddr	= 0x002a	; ADC Conversion Complete
                                 .equ	ERDYaddr	= 0x002c	; EEPROM Ready
                                 .equ	ACIaddr	= 0x002e	; Analog Comparator
                                 .equ	TWIaddr	= 0x0030	; Two-wire Serial Interface
                                 .equ	SPMRaddr	= 0x0032	; Store Program Memory Read
                                 
                                 .equ	INT_VECTORS_SIZE	= 52	; size in words
                                 
                                 #endif  /* _M328PDEF_INC_ */
                                 
                                 ; ***** END OF FILE ******************************************************
                                 
                                 ; Pruebas_finales_proyecto_micros_oscar.asm
                                 ;
                                 ; Created: 3/6/2025 4:12:37 PM
                                 ; Author : oscar
                                 ;
                                 .include "M328PDEF.inc"
                                 
                                 ;***** Created: 2011-02-09 12:03 ******* Source: ATmega328P.xml **********
                                 ;*************************************************************************
                                 ;* A P P L I C A T I O N   N O T E   F O R   T H E   A V R   F A M I L Y
                                 ;* 
                                 ;* Number            : AVR000
                                 ;* File Name         : "m328Pdef.inc"
                                 ;* Title             : Register/Bit Definitions for the ATmega328P
                                 ;* Date              : 2011-02-09
                                 ;* Version           : 2.35
                                 ;* Support E-mail    : avr@atmel.com
                                 ;* Target MCU        : ATmega328P
                                 ;* 
                                 ;* DESCRIPTION
                                 ;* When including this file in the assembly program file, all I/O register 
                                 ;* names and I/O register bit names appearing in the data book can be used.
                                 ;* In addition, the six registers forming the three data pointers X, Y and 
                                 ;* Z have been assigned names XL - ZH. Highest RAM address for Internal 
                                 ;* SRAM is also defined 
                                 ;* 
                                 ;* The Register names are represented by their hexadecimal address.
                                 ;* 
                                 ;* The Register Bit names are represented by their bit number (0-7).
                                 ;* 
                                 ;* Please observe the difference in using the bit names with instructions
                                 ;* such as "sbr"/"cbr" (set/clear bit in register) and "sbrs"/"sbrc"
                                 ;* (skip if bit in register set/cleared). The following example illustrates
                                 ;* this:
                                 ;* 
                                 ;* in    r16,PORTB             ;read PORTB latch
                                 ;* sbr   r16,(1<<PB6)+(1<<PB5) ;set PB6 and PB5 (use masks, not bit#)
                                 ;* out   PORTB,r16             ;output to PORTB
                                 ;* 
                                 ;* in    r16,TIFR              ;read the Timer Interrupt Flag Register
                                 ;* sbrc  r16,TOV0              ;test the overflow flag (use bit#)
                                 ;* rjmp  TOV0_is_set           ;jump if set
                                 ;* ...                         ;otherwise do something else
                                 ;*************************************************************************
                                 
                                 #ifndef _M328PDEF_INC_
                                 #endif  /* _M328PDEF_INC_ */
                                 
                                 ; ***** END OF FILE ******************************************************
                                 .cseg
                                 .org 0x0000
000000 940c 0022                 	JMP START
                                 .org 0x0008
000008 940c 029c                 	JMP PINCHANGEC_ISR
                                 .org 0x0020
000020 940c 0313                 	JMP TMR0_ISR
                                 
                                 
                                 START:
                                 
                                 // Configuraci n de la pila?
000022 ef0f                      	LDI R16, LOW(RAMEND)
000023 bf0d                      	OUT SPL, R16
000024 e008                      	LDI R16, HIGH(RAMEND)
000025 bf0e                      	OUT SPH, R16
                                 
000026 053f
000027 4f5b
000028 6e65
000029 077e
00002a 677f                      DIS: .DB 0x3F,0x05,0x5B,0x4F,0x65,0x6E,0x7E,0x07,0x7F,0x67
00002b 1c1f
00002c 1e1f
00002d 1e1f
00002e 1f1f
00002f 1f1e
000030 1f1e                      MESES: .DB 0x1F,0x1C,0x1F,0x1E,0x1F,0x1E,0x1F,0x1F,0x1E,0x1F,0x1E,0x1F
                                 
                                 
                                 
                                 SETUP:
                                 
000031 94f8                      	CLI
                                 
000032 e800                      	LDI R16, (1 << CLKPCE)
000033 9300 0061                 	STS CLKPR, R16
000035 e004                      	LDI R16, 0b00000100
000036 9300 0061                 	STS CLKPR,R16
                                 
000038 e003                      	LDI R16,(1 << CS01)|(1 << CS00)
000039 bd05                      	OUT TCCR0B, R16
00003a e604                      	LDI R16,100
00003b bd06                      	OUT TCNT0, R16
                                 
00003c e001                      	LDI R16, (1 << TOIE0)
00003d 9300 006e                 	STS TIMSK0, R16
                                 
00003f e002                      	LDI R16, (1 << PCIE1)
000040 9300 0068                 	STS PCICR, R16
000042 e20f                      	LDI R16,(1 << PCINT13)|(1 << PCINT11)|(1 << PCINT10)|(1 << PCINT9)|(1 << PCINT8)
000043 9300 006c                 	STS PCMSK1, R16
                                 	
000045 e000                      	LDI R16,0x00
000046 b90b                      	OUT PORTD, R16
000047 b905                      	OUT PORTB, R16
000048 9300 00c1                 	STS UCSR0B, R16
00004a e300                      	LDI R16,0x30
00004b b907                      	OUT DDRC,R16
00004c ef0f                      	LDI R16,0xFF
00004d b908                      	OUT PORTC, R16
00004e b904                      	OUT DDRB,R16
00004f b90a                      	OUT DDRD, R16
                                 
                                 
                                 	
000050 9478                      	SEI
                                 
000051 e000                      	LDI R16,0x00
000052 2e00                      	MOV R0,R16
000053 e000                      	LDI R16,0x00
000054 2e10                      	MOV R1,R16
000055 e000                      	LDI R16,0x00
000056 2e20                      	MOV R2,R16
000057 e000                      	LDI R16,0x00
000058 2e30                      	MOV R3,R16
000059 e000                      	LDI R16,0x00
00005a 2e40                      	MOV R4,R16
00005b 2e50                      	MOV R5,R16
00005c 2e60                      	MOV R6,R16
00005d 2e70                      	MOV R7,R16
00005e 2e80                      	MOV R8,R16 
00005f 2e90                      	MOV R9,R16
000060 2ea0                      	MOV R10,R16
000061 2eb0                      	MOV R11,R16
000062 2ec0                      	MOV R12,R16
000063 2ed0                      	MOV R13,R16
000064 2ee0                      	MOV R14,R16
000065 2ef0                      	MOV R15,R16
                                 
000066 9443                      	INC R4
000067 9463                      	INC R6
                                 // Registro mover informacion
000068 e000                      	LDI R16,0x00
                                 // Contadores para minutos
000069 e010                      	LDI R17,0x00
00006a e020                      	LDI R18,0x00
                                 // Valores temporales
00006b e040                      	LDI R20,0x00
                                 // Modo del sistema
00006c e051                      	LDI R21,0x01
                                 //Alarma estado
00006d e060                      	LDI R22,0x00
                                 // Registro para puntos cada 500ms
00006e e0d0                      	LDI R29,0x00
                                 // Registro para el delay de los displays
00006f e0f0                      	LDI R31,0x00
                                 
                                 MAIN_LOOP:
000070 7057                      	ANDI R21,0x07 
000071 3050                      	CPI R21,0x00
000072 f071                      	BREQ SALTO_APAGADO
000073 3051                      	CPI R21,0x01
000074 f071                      	BREQ SALTO_RELOJ
000075 3052                      	CPI R21,0x02
000076 f071                      	BREQ SALTO_FECHA
000077 3053                      	CPI R21,0x03
000078 f071                      	BREQ SALTO_CONFIG_HORA
000079 3054                      	CPI R21,0x04
00007a f071                      	BREQ SALTO_CONFIG_FECHA
00007b 3055                      	CPI R21,0x05
00007c f071                      	BREQ SALTO_CONFIG_ALARMA
00007d 3056                      	CPI R21,0x06
00007e f071                      	BREQ SALTO_APAGAR_ALARMA
00007f 940c 0070                 	JMP MAIN_LOOP
                                 
                                 SALTO_APAGADO:
000081 940c 014f                 	JMP APAGADO
                                 SALTO_RELOJ:
000083 940c 0158                 	JMP RELOJ
                                 SALTO_FECHA:
000085 940c 0163                 	JMP FECHA
                                 SALTO_CONFIG_HORA:
000087 940c 019c                 	JMP CONFIG_HORA
                                 SALTO_CONFIG_FECHA:
000089 940c 01ff                 	JMP CONFIG_FECHA
                                 SALTO_CONFIG_ALARMA:
00008b 940c 0250                 	JMP CONFIG_ALARMA
                                 SALTO_APAGAR_ALARMA:
00008d 940c 028b                 	JMP APAGAR_ALARMA
                                 
                                 RESTRICCIONES:
00008f 3128                      	CPI R18, 24
000090 f4f9                      	BRNE FINAL
000091 2711                      	CLR R17
000092 2722                      	CLR R18
000093 9403                      	INC R0
000094 e00a                      	LDI R16,0x0A
000095 1600                      	CP R0,R16
000096 f0d1                      	BREQ OVER_UNIDADES_SEGUNDOS
                                 CASO2_RELOJ:
000097 e006                      	LDI R16,0x06
000098 1610                      	CP R1,R16
000099 f0d9                      	BREQ OVER_DECENA_SEGUNDOS
                                 CASO3_RELOJ:
00009a e004                      	LDI R16,0x04
00009b 1620                      	CP R2,R16
00009c f0e1                      	BREQ OVER_UNIDADES_HORA
                                 CASO4_RELOJ:
00009d e00a                      	LDI R16,0x0A
00009e 1620                      	CP R2,R16
00009f f111                      	BREQ OVER_DECENAS_HORA
                                 CASO5_FECHA:
0000a0 e00a                      	LDI R16,0x0A
0000a1 1640                      	CP R4,R16
0000a2 f119                      	BREQ OVER_UNIDADES_DIA_FECHA
                                 CASO6_FECHA:
0000a3 2d0d                      	MOV R16,R13
0000a4 e0f0                      	LDI ZH, HIGH(MESES << 1)
0000a5 e5e6                      	LDI ZL, LOW(MESES << 1)
0000a6 0fe0                      	ADD ZL,R16
0000a7 9104                      	LPM R16, Z
0000a8 16c0                      	CP R12,R16
0000a9 f50c                      	BRGE OVER_DIAS_FECHA
                                 CASO7_FECHA:
0000aa e00a                      	LDI R16,0x0A
0000ab 1660                      	CP R6,R16
0000ac f131                      	BREQ OVER_MES_UNIDADES_FECHA
                                 CASO8_FECHA:
0000ad e00c                      	LDI R16,0x0C
0000ae 16d0                      	CP R13,R16
0000af f139                      	BREQ OVER_MES_FECHA
                                 FINAL:
0000b0 9508                      	RET
                                 
                                 OVER_UNIDADES_SEGUNDOS:
0000b1 e000                      	LDI R16, 0x00
0000b2 2e00                      	MOV R0,R16
0000b3 9413                      	INC R1
0000b4 cfe2                      	RJMP CASO2_RELOJ
                                 OVER_DECENA_SEGUNDOS:
0000b5 e000                      	LDI R16, 0x00
0000b6 2e10                      	MOV R1,R16
0000b7 9423                      	INC R2
0000b8 cfe1                      	RJMP CASO3_RELOJ
                                 OVER_UNIDADES_HORA:
0000b9 e002                      	LDI R16, 0x02
0000ba 1630                      	CP R3,R16
0000bb f709                      	BRNE CASO4_RELOJ
0000bc e000                      	LDI R16,0x00
0000bd 2e20                      	MOV R2,R16
0000be 2e30                      	MOV R3,R16
0000bf 9443                      	INC R4
0000c0 94c3                      	INC R12
0000c1 cfde                      	RJMP CASO5_FECHA
                                 OVER_DECENAS_HORA:
0000c2 e000                      	LDI R16, 0x00
0000c3 2e20                      	MOV R2,R16
0000c4 9433                      	INC R3
0000c5 cfda                      	RJMP CASO5_FECHA
                                 OVER_UNIDADES_DIA_FECHA:
0000c6 e000                      	LDI R16,0x00
0000c7 2e40                      	MOV R4,R16
0000c8 9453                      	INC R5
0000c9 94c3                      	INC R12
0000ca cfd8                      	RJMP CASO6_FECHA
                                 OVER_DIAS_FECHA:
0000cb e001                      	LDI R16,0x01
0000cc 2e40                      	MOV R4,R16
0000cd e000                      	LDI R16,0x00
0000ce 2ec0                      	MOV R12,R16
0000cf 2e50                      	MOV R5,R16
0000d0 9463                      	INC R6
0000d1 94d3                      	INC R13
0000d2 cfd7                      	RJMP CASO7_FECHA
                                 OVER_MES_UNIDADES_FECHA:
0000d3 e000                      	LDI R16,0x00
0000d4 2e60                      	MOV R6,R16
0000d5 9473                      	INC R7
0000d6 cfd6                      	RJMP CASO8_FECHA
                                 OVER_MES_FECHA:
0000d7 e001                      	LDI R16,0x01
0000d8 2e40                      	MOV R4,R16
0000d9 2e60                      	MOV R6,R16
0000da e000                      	LDI R16,0x00
0000db 2e70                      	MOV R7,R16
0000dc 2e80                      	MOV R8,R16
0000dd 2ed0                      	MOV R13,R16
0000de cfd1                      	RJMP FINAL
                                 
                                 MOSTRAR_DISPLAY:
0000df e0f0                      	LDI ZH, HIGH(DIS << 1)
0000e0 e4ec                      	LDI ZL, LOW(DIS << 1)
0000e1 0fe0                      	ADD ZL,R16
0000e2 9104                      	LPM R16, Z
0000e3 b90b                      	OUT PORTD, R16
0000e4 9508                      	RET
                                 
                                 MOSTRAR_DISPLAY_RELOJ_Y_CONFIG_RELOJ:
0000e5 2d00                      	MOV R16,R0
0000e6 9828                      	CBI PORTB, 0
0000e7 9829                      	CBI PORTB, 1
0000e8 982a                      	CBI PORTB, 2
0000e9 982b                      	CBI PORTB, 3
0000ea 940e 00df                 	CALL MOSTRAR_DISPLAY
0000ec 9a28                      	SBI PORTB, 0
0000ed 940e 0297                 	CALL DELAY
0000ef 9828                      	CBI PORTB, 0
0000f0 2d01                      	MOV R16,R1
0000f1 940e 00df                 	CALL MOSTRAR_DISPLAY
0000f3 9a29                      	SBI PORTB, 1
0000f4 940e 0297                 	CALL DELAY
0000f6 9829                      	CBI PORTB, 1
0000f7 2d02                      	MOV R16,R2
0000f8 940e 00df                 	CALL MOSTRAR_DISPLAY
0000fa 9a2a                      	SBI PORTB, 2
0000fb 940e 0297                 	CALL DELAY
0000fd 982a                      	CBI PORTB, 2
0000fe 2d03                      	MOV R16,R3
0000ff 940e 00df                 	CALL MOSTRAR_DISPLAY
000101 9a2b                      	SBI PORTB, 3
000102 940e 0297                 	CALL DELAY
000104 982b                      	CBI PORTB, 3
000105 9508                      	RET
                                 
                                 MOSTRAR_DISPLAY_FECHA_Y_CONFIG_FECHA:
000106 2d06                      	MOV R16,R6
000107 9828                      	CBI PORTB, 0
000108 9829                      	CBI PORTB, 1
000109 982a                      	CBI PORTB, 2
00010a 982b                      	CBI PORTB, 3
00010b 940e 00df                 	CALL MOSTRAR_DISPLAY
00010d 9a28                      	SBI PORTB, 0
00010e 940e 0297                 	CALL DELAY
000110 9828                      	CBI PORTB, 0
000111 2d07                      	MOV R16,R7
000112 940e 00df                 	CALL MOSTRAR_DISPLAY
000114 9a29                      	SBI PORTB, 1
000115 940e 0297                 	CALL DELAY
000117 9829                      	CBI PORTB, 1
000118 2d04                      	MOV R16,R4
000119 940e 00df                 	CALL MOSTRAR_DISPLAY
00011b 9a2a                      	SBI PORTB, 2
00011c 940e 0297                 	CALL DELAY
00011e 982a                      	CBI PORTB, 2
00011f 2d05                      	MOV R16,R5
000120 940e 00df                 	CALL MOSTRAR_DISPLAY
000122 9a2b                      	SBI PORTB, 3
000123 940e 0297                 	CALL DELAY
000125 982b                      	CBI PORTB, 3
000126 9508                      	RET
                                 
                                 PUNTOS:
000127 33d2                      	CPI R29, 50
000128 f449                      	BRNE SALIR_PUNTOS
000129 27dd                      	CLR R29
00012a 9b34                      	SBIS PINC,4
00012b 940c 012f                 	JMP ENCENDER
00012d 9934                      	SBIC PINC,4
00012e c002                      	RJMP APAGAR
                                 ENCENDER:
00012f 9a44                      	SBI PORTC,4
000130 c001                      	RJMP SALIR_PUNTOS
                                 APAGAR:
000131 9844                      	CBI PORTC,4
                                 SALIR_PUNTOS:
000132 9508                      RET
                                 
                                 ALARMA_COMP:
000133 1408                      	CP R0, R8
000134 f019                      	BREQ COMPARAR2
000135 9845                      	CBI PORTC,5
000136 940c 014e                 	JMP SALIR_ALARMA_COMP
                                 COMPARAR2:
000138 1419                      	CP R1, R9
000139 f019                      	BREQ COMPARAR3
00013a 9845                      	CBI PORTC,5
00013b 940c 014e                 	JMP SALIR_ALARMA_COMP
                                 COMPARAR3:
00013d 142a                      	CP R2, R10
00013e f019                      	BREQ COMPARAR4
00013f 9845                      	CBI PORTC,5
000140 940c 014e                 	JMP SALIR_ALARMA_COMP
                                 COMPARAR4:
000142 143b                      	CP R3, R11
000143 f019                      	BREQ COMPARAR5
000144 9845                      	CBI PORTC,5
000145 940c 014e                 	JMP SALIR_ALARMA_COMP
                                 COMPARAR5:
000147 e001                      	LDI R16,0x01
000148 1760                      	CP R22,R16
000149 f019                      	BREQ ACTIVAR_ALARMA
00014a 9845                      	CBI PORTC,5
00014b 940c 014e                 	JMP SALIR_ALARMA_COMP
                                 ACTIVAR_ALARMA:
00014d 9a45                      	SBI PORTC, 5
                                 SALIR_ALARMA_COMP:
00014e 9508                      RET
                                 
                                 APAGADO:
00014f 9828                      	CBI PORTB,0
000150 9829                      	CBI PORTB,1
000151 982a                      	CBI PORTB,2
000152 982b                      	CBI PORTB,3
000153 982c                      	CBI PORTB,4
000154 982d                      	CBI PORTB,5
000155 9844                      	CBI PORTC,4
000156 940c 0070                 	JMP MAIN_LOOP
                                 
                                 RELOJ:
000158 940e 008f                 	CALL RESTRICCIONES
00015a 9a2c                      	SBI PORTB,4
00015b 940e 0127                 	CALL PUNTOS
00015d 940e 0133                 	CALL ALARMA_COMP
00015f 940e 00e5                 	CALL MOSTRAR_DISPLAY_RELOJ_Y_CONFIG_RELOJ
000161 940c 0070                 	JMP MAIN_LOOP
                                 
                                 FECHA:
000163 982c                      	CBI PORTB,4
000164 9a2d                      	SBI PORTB,5
000165 940e 0127                 	CALL PUNTOS
000167 940e 0133                 	CALL ALARMA_COMP
000169 940e 008f                 	CALL RESTRICCIONES
00016b 940e 0106                 	CALL MOSTRAR_DISPLAY_FECHA_Y_CONFIG_FECHA
00016d 940c 0070                 	JMP MAIN_LOOP
                                 
                                 CONFIG_HORA_CASO1:
00016f e000                      	LDI R16,0x00
000170 2e00                      	MOV R0,R16
000171 9413                      	INC R1
000172 940c 01a3                 	JMP CONFIG_HORA_MINS_UNIDADES2
                                 CONFIG_HORA_CASO2:
000174 e009                      	LDI R16,0x09
000175 2e00                      	MOV R0,R16
000176 941a                      	DEC R1 
000177 940c 01a6                 	JMP CONFIG_HORA_MINS_DECENAS
                                 CONFIG_HORA_CASO3:
000179 e000                      	LDI R16,0x00
00017a 2e10                      	MOV R1,R16
00017b 940c 01a9                 	JMP CONFIG_HORA_MINS_DECENAS2
                                 CONFIG_HORA_CASO4:
00017d e005                      	LDI R16,0x05
00017e 2e10                      	MOV R1,R16
00017f 940c 01ac                 	JMP CONFIG_HORA_HORAS_UNIDADES
                                 CONFIG_HORA_CASO5:
000181 e000                      	LDI R16,0x00
000182 2e20                      	MOV R2,R16
000183 9433                      	INC R3
000184 940c 01af                 	JMP CONFIG_HORA_HORAS_UNIDADES2
                                 CONFIG_HORA_CASO6:
000186 e000                      	LDI R16,0x00
000187 1630                      	CP R3,R16
000188 f069                      	BREQ CONFIG_HORA_REINICIO
000189 e009                      	LDI R16,0x09
00018a 2e20                      	MOV R2,R16
00018b 943a                      	DEC R3
00018c 940c 01b2                 	JMP CONFIG_HORA_HORAS_DECENAS
                                 CONFIG_HORA_CASO7:
00018e e004                      	LDI R16,0x04
00018f 1620                      	CP R2,R16
000190 f521                      	BRNE CONFIG_HORA_MOSTRAR
000191 e000                      	LDI R16,0x00
000192 2e20                      	MOV R2,R16
000193 2e30                      	MOV R3,R16
000194 940c 01b5                 	JMP CONFIG_HORA_MOSTRAR
                                 CONFIG_HORA_REINICIO:
000196 e003                      	LDI R16,0x03
000197 2e20                      	MOV R2,R16
000198 e002                      	LDI R16,0x02
000199 2e30                      	MOV R3,R16
00019a 940c 01b5                 	JMP CONFIG_HORA_MOSTRAR
                                 
                                 CONFIG_HORA:
00019c 9a2c                      	SBI PORTB,4
00019d 982d                      	CBI PORTB,5
00019e 9844                      	CBI PORTC,4
00019f 9845                      	CBI PORTC,5
0001a0 e00a                      	LDI R16,0x0A
0001a1 1600                      	CP R0,R16
0001a2 f261                      	BREQ CONFIG_HORA_CASO1
                                 CONFIG_HORA_MINS_UNIDADES2:
0001a3 ef0f                      	LDI R16,0xFF
0001a4 1600                      	CP R0,R16
0001a5 f271                      	BREQ CONFIG_HORA_Caso2
                                 CONFIG_HORA_MINS_DECENAS:
0001a6 e006                      	LDI R16,0x06
0001a7 1610                      	CP R1,R16
0001a8 f281                      	BREQ CONFIG_HORA_CASO3
                                 CONFIG_HORA_MINS_DECENAS2:
0001a9 ef0f                      	LDI R16,0xFF
0001aa 1610                      	CP R1,R16
0001ab f289                      	BREQ CONFIG_HORA_CASO4
                                 CONFIG_HORA_HORAS_UNIDADES:
0001ac e00a                      	LDI R16,0x0A
0001ad 1620                      	CP R2,R16
0001ae f291                      	BREQ CONFIG_HORA_CASO5
                                 CONFIG_HORA_HORAS_UNIDADES2:
0001af ef0f                      	LDI R16,0xFF
0001b0 1620                      	CP R2,R16
0001b1 f2a1                      	BREQ CONFIG_HORA_CASO6
                                 CONFIG_HORA_HORAS_DECENAS:
0001b2 e002                      	LDI R16,0x02
0001b3 1630                      	CP R3,R16
0001b4 f2c9                      	BREQ CONFIG_HORA_CASO7
                                 CONFIG_HORA_MOSTRAR:
0001b5 940e 00e5                 	CALL MOSTRAR_DISPLAY_RELOJ_Y_CONFIG_RELOJ
0001b7 940c 0070                 	JMP MAIN_LOOP
                                 
                                 CASO_31_DIAS:
0001b9 e10e                      	LDI R16,0x1E
0001ba 2ec0                      	MOV R12,R16
0001bb e003                      	LDI R16,0x03
0001bc 2e50                      	MOV R5,R16
0001bd e001                      	LDI R16,0x01
0001be 2e40                      	MOV R4,R16
0001bf 940c 0209                 	JMP CASO_CONFIG_FECHA3
                                 CASO_30_DIAS:
0001c1 e10d                      	LDI R16,0x1D
0001c2 2ec0                      	MOV R12,R16
0001c3 e003                      	LDI R16,0x03
0001c4 2e50                      	MOV R5,R16
0001c5 e000                      	LDI R16,0x00
0001c6 2e40                      	MOV R4,R16
0001c7 940c 0209                 	JMP CASO_CONFIG_FECHA3
                                 CASO_28_DIAS:
0001c9 e10b                      	LDI R16,0x1B
0001ca 2ec0                      	MOV R12,R16
0001cb e002                      	LDI R16,0x02
0001cc 2e50                      	MOV R5,R16
0001cd e008                      	LDI R16,0x08
0001ce 2e40                      	MOV R4,R16
0001cf 940c 0209                 	JMP CASO_CONFIG_FECHA3
                                 
                                 
                                 OVER_FECHA_UNIDADES1:
0001d1 e000                      	LDI R16,0x00
0001d2 2e40                      	MOV R4,R16
0001d3 9453                      	INC R5
0001d4 c031                      	RJMP CASO_CONFIG_FECHA2
                                 UNDER_FECHA_UNIDADES2:
0001d5 2d0d                      	MOV R16,R13
0001d6 e0f0                      	LDI ZH, HIGH(MESES << 1)
0001d7 e5e6                      	LDI ZL, LOW(MESES << 1)
0001d8 0fe0                      	ADD ZL,R16
0001d9 9104                      	LPM R16, Z	
0001da 310f                      	CPI R16,0x1F
0001db f2e9                      	BREQ CASO_31_DIAS
0001dc 310e                      	CPI R16,0x1E
0001dd f319                      	BREQ CASO_30_DIAS
0001de 310c                      	CPI R16,0x1C
0001df f349                      	BREQ CASO_28_DIAS
0001e0 c028                      	RJMP CASO_CONFIG_FECHA3
                                 OVER_FECHA_UNIDADES2:
0001e1 e001                      	LDI R16,0x01
0001e2 2e40                      	MOV R4,R16
0001e3 e000                      	LDI R16,0x00
0001e4 2ec0                      	MOV R12,R16
0001e5 2e50                      	MOV R5,R16
0001e6 c029                      	RJMP CASO_CONFIG_FECHA4
                                 UNDER_FECHA_UNIDADES3:
0001e7 e009                      	LDI R16,0x09
0001e8 2e40                      	MOV R4,R16
0001e9 945a                      	DEC R5
0001ea c028                      	RJMP CASO_CONFIG_FECHA5
                                 OVER_FECHA_MES1:
0001eb e000                      	LDI R16,0x00
0001ec 2ed0                      	MOV R13,R16
0001ed 2e70                      	MOV R7,R16
0001ee e001                      	LDI R16,0x01
0001ef 2e60                      	MOV R6,R16
0001f0 c025                      	RJMP CASO_CONFIG_FECHA6
                                 UNDER_FECHA_MES1:
0001f1 e00b                      	LDI R16,0x0B
0001f2 2ed0                      	MOV R13,R16
0001f3 e001                      	LDI R16,0x01
0001f4 2e70                      	MOV R7,R16
0001f5 e002                      	LDI R16,0x02
0001f6 2e60                      	MOV R6,R16
0001f7 c021                      	RJMP CASO_CONFIG_FECHA7
                                 OVER_FECHA_MES2:
0001f8 e000                      	LDI R16,0x00
0001f9 2e60                      	MOV R6,R16
0001fa 9473                      	INC R7
0001fb c020                      	RJMP CASO_CONFIG_FECHA8
                                 UNDER_FECHA_MES2:
0001fc e009                      	LDI R16,0x09
0001fd 2e60                      	MOV R6,R16
0001fe 947a                      	DEC R7
                                 
                                 CONFIG_FECHA:
0001ff 9a2d                      	SBI PORTB,5
000200 982c                      	CBI PORTB,4
000201 9844                      	CBI PORTC,4
000202 9845                      	CBI PORTC,5
000203 e00a                      	LDI R16,0x0A
000204 1640                      	CP R4,R16
000205 f259                      	BREQ OVER_FECHA_UNIDADES1
                                 CASO_CONFIG_FECHA2:
000206 ef0f                      	LDI R16,0xFF
000207 16c0                      	CP R12,R16
000208 f261                      	BREQ UNDER_FECHA_UNIDADES2
                                 CASO_CONFIG_FECHA3:
000209 2d0d                      	MOV R16,R13
00020a e0f0                      	LDI ZH, HIGH(MESES << 1)
00020b e5e6                      	LDI ZL, LOW(MESES << 1)
00020c 0fe0                      	ADD ZL,R16
00020d 9104                      	LPM R16, Z
00020e 16c0                      	CP R12,R16
00020f f68c                      	BRGE OVER_FECHA_UNIDADES2
                                 CASO_CONFIG_FECHA4:
000210 ef0f                      	LDI R16,0xFF
000211 1640                      	CP R4,R16
000212 f2a1                      	BREQ UNDER_FECHA_UNIDADES3
                                 CASO_CONFIG_FECHA5:
000213 e00c                      	LDI R16,0x0C
000214 16d0                      	CP R13,R16
000215 f2a9                      	BREQ OVER_FECHA_MES1
                                 CASO_CONFIG_FECHA6:
000216 ef0f                      	LDI R16,0xFF
000217 16d0                      	CP R13,R16
000218 f2c1                      	BREQ UNDER_FECHA_MES1
                                 CASO_CONFIG_FECHA7:
000219 e00a                      	LDI R16,0x0A
00021a 1660                      	CP R6,R16
00021b f2e1                      	BREQ OVER_FECHA_MES2
                                 CASO_CONFIG_FECHA8:
00021c ef0f                      	lDI R16,0x0FF
00021d 1660                      	CP R6,R16
00021e f2e9                      	BREQ UNDER_FECHA_MES2
                                 MOSTRAR_CONFIG_FECHA:
00021f 940e 0106                 	CALL MOSTRAR_DISPLAY_FECHA_Y_CONFIG_FECHA
000221 940c 0070                 	JMP MAIN_LOOP
                                 
                                 
                                 CONFIG_ALARMA_CASO1:
000223 e000                      	LDI R16,0x00
000224 2e80                      	MOV R8,R16
000225 9493                      	INC R9
000226 940c 0257                 	JMP CONFIG_ALARMA_MINS_UNIDADES2
                                 CONFIG_ALARMA_CASO2:
000228 e009                      	LDI R16,0x09
000229 2e80                      	MOV R8,R16
00022a 949a                      	DEC R9 
00022b 940c 025a                 	JMP CONFIG_ALARMA_MINS_DECENAS
                                 CONFIG_ALARMA_CASO3:
00022d e000                      	LDI R16,0x00
00022e 2e90                      	MOV R9,R16
00022f 940c 025d                 	JMP CONFIG_ALARMA_MINS_DECENAS2
                                 CONFIG_ALARMA_CASO4:
000231 e005                      	LDI R16,0x05
000232 2e90                      	MOV R9,R16
000233 940c 0260                 	JMP CONFIG_ALARMA_HORAS_UNIDADES
                                 CONFIG_ALARMA_CASO5:
000235 e000                      	LDI R16,0x00
000236 2ea0                      	MOV R10,R16
000237 94b3                      	INC R11
000238 940c 0263                 	JMP CONFIG_ALARMA_HORAS_UNIDADES2
                                 CONFIG_ALARMA_CASO6:
00023a e000                      	LDI R16,0x00
00023b 16b0                      	CP R11,R16
00023c f069                      	BREQ REINICIO_CONFIG_ALARMA
00023d e009                      	LDI R16,0x09
00023e 2ea0                      	MOV R10,R16
00023f 94ba                      	DEC R11
000240 940c 0266                 	JMP CONFIG_ALARMA_HORAS_DECENAS
                                 CONFIG_ALARMA_CASO7:
000242 e004                      	LDI R16,0x04
000243 17b0                      	CP R27,R16
000244 f521                      	BRNE MOSTRAR_CONFIG_ALARMA
000245 e000                      	LDI R16,0x00
000246 2ea0                      	MOV R10,R16
000247 2eb0                      	MOV R11,R16
000248 940c 0269                 	JMP MOSTRAR_CONFIG_ALARMA
                                 REINICIO_CONFIG_ALARMA:
00024a e003                      	LDI R16,0x03
00024b 2ea0                      	MOV R10,R16
00024c e002                      	LDI R16,0x02
00024d 2eb0                      	MOV R11,R16
00024e 940c 0269                 	JMP MOSTRAR_CONFIG_ALARMA
                                 
                                 CONFIG_ALARMA:
000250 9a2c                      	SBI PORTB,4
000251 9a2d                      	SBI PORTB,5
000252 9844                      	CBI PORTC,4
000253 9845                      	CBI PORTC,5
000254 e00a                      	LDI R16,0x0A
000255 1680                      	CP R8,R16
000256 f261                      	BREQ CONFIG_ALARMA_CASO1
                                 CONFIG_ALARMA_MINS_UNIDADES2:
000257 ef0f                      	LDI R16,0xFF
000258 1680                      	CP R8,R16
000259 f271                      	BREQ CONFIG_ALARMA_CASO2
                                 CONFIG_ALARMA_MINS_DECENAS:
00025a e006                      	LDI R16,0x06
00025b 1690                      	CP R9,R16
00025c f281                      	BREQ CONFIG_ALARMA_CASO3
                                 CONFIG_ALARMA_MINS_DECENAS2:
00025d ef0f                      	LDI R16,0xFF
00025e 1690                      	CP R9,R16
00025f f289                      	BREQ CONFIG_ALARMA_CASO4
                                 CONFIG_ALARMA_HORAS_UNIDADES:
000260 e00a                      	LDI R16,0x0A
000261 16a0                      	CP R10,R16
000262 f291                      	BREQ CONFIG_ALARMA_CASO5
                                 CONFIG_ALARMA_HORAS_UNIDADES2:
000263 ef0f                      	LDI R16,0xFF
000264 16a0                      	CP R10,R16
000265 f2a1                      	BREQ CONFIG_ALARMA_CASO6
                                 CONFIG_ALARMA_HORAS_DECENAS:
000266 e002                      	LDI R16,0x02
000267 16b0                      	CP R11,R16
000268 f2c9                      	BREQ CONFIG_ALARMA_CASO7
                                 MOSTRAR_CONFIG_ALARMA:
000269 2d08                      	MOV R16,R8
00026a 9828                      	CBI PORTB, 0
00026b 9829                      	CBI PORTB, 1
00026c 982a                      	CBI PORTB, 2
00026d 982b                      	CBI PORTB, 3
00026e 940e 00df                 	CALL MOSTRAR_DISPLAY
000270 9a28                      	SBI PORTB, 0
000271 940e 0297                 	CALL DELAY
000273 9828                      	CBI PORTB, 0
000274 2d09                      	MOV R16,R9
000275 940e 00df                 	CALL MOSTRAR_DISPLAY
000277 9a29                      	SBI PORTB, 1
000278 940e 0297                 	CALL DELAY
00027a 9829                      	CBI PORTB, 1
00027b 2d0a                      	MOV R16,R10
00027c 940e 00df                 	CALL MOSTRAR_DISPLAY
00027e 9a2a                      	SBI PORTB, 2
00027f 940e 0297                 	CALL DELAY
000281 982a                      	CBI PORTB, 2
000282 2d0b                      	MOV R16,R11
000283 940e 00df                 	CALL MOSTRAR_DISPLAY
000285 9a2b                      	SBI PORTB, 3
000286 940e 0297                 	CALL DELAY
000288 982b                      	CBI PORTB, 3
000289 940c 0070                 	JMP MAIN_LOOP
                                 
                                 APAGAR_ALARMA:
00028b 9a2c                      	SBI PORTB,4
00028c 9a2d                      	SBI PORTB,5
00028d 9844                      	CBI PORTC,4
00028e 9845                      	CBI PORTC,5
00028f 3061                      	CPI R22,0x01
000290 f019                      	BREQ ALARMA_ENCENDIDA_LEDS
000291 9844                      	CBI PORTC,4
000292 940c 0070                 	JMP MAIN_LOOP
                                 ALARMA_ENCENDIDA_LEDS:
000294 9a44                      	SBI PORTC,4
000295 940c 0070                 	JMP MAIN_LOOP
                                 
                                 DELAY:
000297 e0f0                      	LDI R31,0
                                 	subdelay1:
000298 95f3                      	INC R31
000299 30f0                      	CPI R31,0x00
00029a f7e9                      	BRNE subdelay1
00029b 9508                      RET
                                 
                                 PINCHANGEC_ISR:
00029c 3372                      	CPI R23, 50
00029d f4a1                      	BRNE SALIR
00029e 3050                      	CPI R21,0x00
00029f f0b9                      	BREQ BOTONES_APAGADO
0002a0 9b30                      	SBIS PINC,0
0002a1 9553                      	INC R21
0002a2 3051                      	CPI R21,0x01
0002a3 f0f1                      	BREQ BOTONES_RELOJ
0002a4 3052                      	CPI R21,0x02
0002a5 f0f1                      	BREQ BOTONES_FECHA
0002a6 3053                      	CPI R21,0x03
0002a7 f0f1                      	BREQ BOTONES_CONFIG_HORA
0002a8 3054                      	CPI R21,0x04
0002a9 f049                      	BREQ SALTO_BOTONES_CONFIG_FECHA
0002aa 3055                      	CPI R21,0x05
0002ab f049                      	BREQ SALTO_BOTONES_CONFIG_ALARMA
0002ac e006                      	LDI R16,0x06
0002ad 1350                      	CPSE R21,R16
0002ae 940c 02b2                 	JMP SALIR
0002b0 940c 0307                 	JMP BOTONES_APAGAR_ALARMA
                                 	SALIR:
0002b2 9518                      RETI
                                 
                                 SALTO_BOTONES_CONFIG_FECHA:
0002b3 940c 02d3                 	JMP BOTONES_CONFIG_FECHA
                                 SALTO_BOTONES_CONFIG_ALARMA:
0002b5 940c 02f9                 	JMP BOTONES_CONFIG_ALARMA
                                 
                                 BOTONES_APAGADO:
0002b7 2777                      	CLR R23
0002b8 9b30                      	SBIS PINC,0
0002b9 c001                      	RJMP CAMBIO_DE_MODO
0002ba 9518                      RETI
                                 CAMBIO_DE_MODO:
0002bb 9553                      	INC R21
0002bc e644                      	LDI R20, 100
0002bd bd46                      	OUT TCNT0, R20
0002be 2711                      	CLR R17
0002bf 2722                      	CLR R18
0002c0 27dd                      	CLR R29
0002c1 9518                      RETI
                                 
                                 BOTONES_RELOJ:
0002c2 2777                      	CLR R23
0002c3 9518                      RETI
                                 
                                 BOTONES_FECHA:
0002c4 2777                      	CLR R23
0002c5 9518                      RETI
                                 BOTONES_CONFIG_HORA:
0002c6 2777                      	CLR R23
0002c7 9b33                      	SBIS PINC,3
0002c8 c005                      	RJMP HORAS_CONFIG_RELOJ 
                                 MINUTOS_CONFIG_RELOJ:
0002c9 9b31                      	SBIS PINC,1
0002ca 9403                      	INC R0
0002cb 9b32                      	SBIS PINC,2
0002cc 940a                      	DEC R0
0002cd 9518                      RETI
                                 HORAS_CONFIG_RELOJ:
0002ce 9b31                      	SBIS PINC,1
0002cf 9423                      	INC R2
0002d0 9b32                      	SBIS PINC,2
0002d1 942a                      	DEC R2
0002d2 9518                      RETI
                                 BOTONES_CONFIG_FECHA:
0002d3 2777                      	CLR R23
0002d4 9b33                      	SBIS PINC,3
0002d5 c00c                      	RJMP MES_FECHA
0002d6 c000                      	RJMP DIA_FECHA 
                                 DIA_FECHA:
0002d7 9b31                      	SBIS PINC,1
0002d8 c003                      	RJMP SUMAR_D
0002d9 9b32                      	SBIS PINC,2
0002da c004                      	RJMP RESTAR_D
0002db 9518                      RETI
                                 SUMAR_D:
0002dc 9443                      	INC R4
0002dd 94c3                      	INC R12
0002de 9518                      RETI
                                 RESTAR_D:
0002df 944a                      	DEC R4
0002e0 94ca                      	DEC R12
0002e1 9518                      RETI
                                 MES_FECHA:
0002e2 9b31                      	SBIS PINC,1
0002e3 c003                      	RJMP SUMAR_M
0002e4 9b32                      	SBIS PINC,2
0002e5 c00a                      	RJMP RESTAR_M
0002e6 9518                      RETI
                                 SUMAR_M:	
0002e7 9463                      	INC R6
0002e8 94d3                      	INC R13
0002e9 e000                      	LDI R16,0x00
0002ea 2e50                      	MOV R5,R16
0002eb e001                      	LDI R16,0x01
0002ec 2e40                      	MOV R4,R16
0002ed e000                      	LDI R16,0x00
0002ee 2ec0                      	MOV R12,R16
0002ef 9518                      RETI
                                 RESTAR_M:
0002f0 946a                      	DEC R6
0002f1 94da                      	DEC R13
0002f2 e000                      	LDI R16,0x00
0002f3 2e50                      	MOV R5,R16
0002f4 e001                      	LDI R16,0x01
0002f5 2e40                      	MOV R4,R16
0002f6 e000                      	LDI R16,0x00
0002f7 2ec0                      	MOV R12,R16
0002f8 9518                      RETI
                                 
                                 BOTONES_CONFIG_ALARMA:
0002f9 2777                      	CLR R23
0002fa 9b33                      	SBIS PINC,3
0002fb c006                      	RJMP HORAS_CONFIG_ALARMA
0002fc c000                      	RJMP MINUTOS_CONFIG_ALARMA
                                 MINUTOS_CONFIG_ALARMA:
0002fd 9b31                      	SBIS PINC,1
0002fe 9483                      	INC R8
0002ff 9b32                      	SBIS PINC,2
000300 948a                      	DEC R8
000301 9518                      RETI
                                 HORAS_CONFIG_ALARMA:
000302 9b31                      	SBIS PINC,1
000303 94a3                      	INC R10
000304 9b32                      	SBIS PINC,2
000305 94aa                      	DEC R10
000306 9518                      RETI
                                 
                                 BOTONES_APAGAR_ALARMA:
000307 2777                      	CLR R23
000308 9b31                      	SBIS PINC,1
000309 c006                      	RJMP ALARMA_APAGADA
00030a 9b32                      	SBIS PINC,2
00030b c001                      	RJMP ALARMA_ENCENDIDA
00030c 9518                      RETI
                                 ALARMA_ENCENDIDA:
00030d 9a44                      	SBI PORTC,4
00030e e061                      	LDI R22,0x01
00030f 9518                      RETI
                                 ALARMA_APAGADA:
000310 9844                      	CBI PORTC,4
000311 e060                      	LDI R22,0x00
000312 9518                      RETI
                                 
                                 TMR0_ISR:
000313 e644                      	LDI R20, 100
000314 bd46                      	OUT TCNT0, R20
000315 3372                      	CPI R23, 50
000316 f009                      	BREQ CASO_1_CONTAR
000317 9573                      	INC R23
                                 CASO_1_CONTAR:
000318 3051                      	CPI R21,0x01
000319 f411                      	BRNE CASO_2_CONTAR
00031a 9513                      	INC R17
00031b 95d3                      	INC R29
                                 CASO_2_CONTAR:
00031c 3052                      	CPI R21,0x02
00031d f411                      	BRNE ENCENDER_PUNTOS
00031e 9513                      	INC R17
00031f 95d3                      	INC R29
                                 ENCENDER_PUNTOS:
000320 3f1a                      	CPI R17, 250
000321 f009                      	BREQ REGISTRO2
000322 9518                      RETI
                                 	REGISTRO2:
000323 9523                      	INC R18


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

"ATmega328P" register use summary:
x  :   0 y  :   0 z  :   4 r0 :  12 r1 :  12 r2 :  17 r3 :  12 r4 :  20 
r5 :  12 r6 :  15 r7 :   8 r8 :  10 r9 :   9 r10:  11 r11:   9 r12:  15 
r13:  13 r14:   1 r15:   1 r16: 266 r17:   6 r18:   5 r19:   0 r20:   5 
r21:  20 r22:   5 r23:  10 r24:   0 r25:   0 r26:   0 r27:   1 r28:   0 
r29:   6 r30:   8 r31:   8 
Registers used: 28 out of 35 (80.0%)

"ATmega328P" instruction use summary:
.lds  :   0 .sts  :   0 adc   :   0 add   :   4 adiw  :   0 and   :   0 
andi  :   1 asr   :   0 bclr  :   0 bld   :   0 brbc  :   0 brbs  :   0 
brcc  :   0 brcs  :   0 break :   0 breq  :  54 brge  :   2 brhc  :   0 
brhs  :   0 brid  :   0 brie  :   0 brlo  :   0 brlt  :   0 brmi  :   0 
brne  :   9 brpl  :   0 brsh  :   0 brtc  :   0 brts  :   0 brvc  :   0 
brvs  :   0 bset  :   0 bst   :   0 call  :  34 cbi   :  50 cbr   :   0 
clc   :   0 clh   :   0 cli   :   1 cln   :   0 clr   :  13 cls   :   0 
clt   :   0 clv   :   0 clz   :   0 com   :   0 cp    :  40 cpc   :   0 
cpi   :  25 cpse  :   1 dec   :  14 eor   :   0 fmul  :   0 fmuls :   0 
fmulsu:   0 icall :   0 ijmp  :   0 in    :   0 inc   :  36 jmp   :  48 
ld    :   0 ldd   :   0 ldi   : 127 lds   :   0 lpm   :   8 lsl   :   0 
lsr   :   0 mov   :  94 movw  :   0 mul   :   0 muls  :   0 mulsu :   0 
neg   :   0 nop   :   0 or    :   0 ori   :   0 out   :  13 pop   :   0 
push  :   0 rcall :   0 ret   :   7 reti  :  20 rjmp  :  29 rol   :   0 
ror   :   0 sbc   :   0 sbci  :   0 sbi   :  24 sbic  :   1 sbis  :  20 
sbiw  :   0 sbr   :   0 sbrc  :   0 sbrs  :   0 sec   :   0 seh   :   0 
sei   :   1 sen   :   0 ser   :   0 ses   :   0 set   :   0 sev   :   0 
sez   :   0 sleep :   0 spm   :   0 st    :   0 std   :   0 sts   :   6 
sub   :   0 subi  :   0 swap  :   0 tst   :   0 wdr   :   0 
Instructions used: 27 out of 113 (23.9%)

"ATmega328P" memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x00064a   1532     22   1554   32768   4.7%
[.dseg] 0x000100 0x000100      0      0      0    2048   0.0%
[.eseg] 0x000000 0x000000      0      0      0    1024   0.0%

Assembly complete, 0 errors, 0 warnings
