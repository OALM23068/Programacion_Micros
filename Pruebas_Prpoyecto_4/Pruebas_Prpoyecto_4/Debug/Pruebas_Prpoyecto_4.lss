
AVRASM ver. 2.2.8  C:\Users\oscar\OneDrive\Documents\GitHub\Programacion_Micros\Pruebas_Prpoyecto_4\Pruebas_Prpoyecto_4\main.asm Thu Mar 06 12:09:19 2025

[builtin](2): Including file 'C:/Program Files (x86)\Atmel\Studio\7.0\Packs\atmel\ATmega_DFP\1.7.374\avrasm\inc\m328Pdef.inc'
C:\Users\oscar\OneDrive\Documents\GitHub\Programacion_Micros\Pruebas_Prpoyecto_4\Pruebas_Prpoyecto_4\main.asm(7): Including file 'C:/Program Files (x86)\Atmel\Studio\7.0\Packs\atmel\ATmega_DFP\1.7.374\avrasm\inc\M328PDEF.inc'
[builtin](2): Including file 'C:/Program Files (x86)\Atmel\Studio\7.0\Packs\atmel\ATmega_DFP\1.7.374\avrasm\inc\m328Pdef.inc'
C:\Users\oscar\OneDrive\Documents\GitHub\Programacion_Micros\Pruebas_Prpoyecto_4\Pruebas_Prpoyecto_4\main.asm(7): Including file 'C:/Program Files (x86)\Atmel\Studio\7.0\Packs\atmel\ATmega_DFP\1.7.374\avrasm\inc\M328PDEF.inc'
                                 
                                 ;
                                 
                                 ;***** Created: 2011-02-09 12:03 ******* Source: ATmega328P.xml **********
                                 ;*************************************************************************
                                 ;* A P P L I C A T I O N   N O T E   F O R   T H E   A V R   F A M I L Y
                                 ;* 
                                 ;* Number            : AVR000
                                 ;* File Name         : "m328Pdef.inc"
                                 ;* Title             : Register/Bit Definitions for the ATmega328P
                                 ;* Date              : 2011-02-09
                                 ;* Version           : 2.35
                                 ;* Support E-mail    : avr@atmel.com
                                 ;* Target MCU        : ATmega328P
                                 ;* 
                                 ;* DESCRIPTION
                                 ;* When including this file in the assembly program file, all I/O register 
                                 ;* names and I/O register bit names appearing in the data book can be used.
                                 ;* In addition, the six registers forming the three data pointers X, Y and 
                                 ;* Z have been assigned names XL - ZH. Highest RAM address for Internal 
                                 ;* SRAM is also defined 
                                 ;* 
                                 ;* The Register names are represented by their hexadecimal address.
                                 ;* 
                                 ;* The Register Bit names are represented by their bit number (0-7).
                                 ;* 
                                 ;* Please observe the difference in using the bit names with instructions
                                 ;* such as "sbr"/"cbr" (set/clear bit in register) and "sbrs"/"sbrc"
                                 ;* (skip if bit in register set/cleared). The following example illustrates
                                 ;* this:
                                 ;* 
                                 ;* in    r16,PORTB             ;read PORTB latch
                                 ;* sbr   r16,(1<<PB6)+(1<<PB5) ;set PB6 and PB5 (use masks, not bit#)
                                 ;* out   PORTB,r16             ;output to PORTB
                                 ;* 
                                 ;* in    r16,TIFR              ;read the Timer Interrupt Flag Register
                                 ;* sbrc  r16,TOV0              ;test the overflow flag (use bit#)
                                 ;* rjmp  TOV0_is_set           ;jump if set
                                 ;* ...                         ;otherwise do something else
                                 ;*************************************************************************
                                 
                                 #ifndef _M328PDEF_INC_
                                 #define _M328PDEF_INC_
                                 
                                 
                                 #pragma partinc 0
                                 
                                 ; ***** SPECIFY DEVICE ***************************************************
                                 .device ATmega328P
                                 #pragma AVRPART ADMIN PART_NAME ATmega328P
                                 .equ	SIGNATURE_000	= 0x1e
                                 .equ	SIGNATURE_001	= 0x95
                                 .equ	SIGNATURE_002	= 0x0f
                                 
                                 #pragma AVRPART CORE CORE_VERSION V2E
                                 
                                 
                                 ; ***** I/O REGISTER DEFINITIONS *****************************************
                                 ; NOTE:
                                 ; Definitions marked "MEMORY MAPPED"are extended I/O ports
                                 ; and cannot be used with IN/OUT instructions
                                 .equ	UDR0	= 0xc6	; MEMORY MAPPED
                                 .equ	UBRR0L	= 0xc4	; MEMORY MAPPED
                                 .equ	UBRR0H	= 0xc5	; MEMORY MAPPED
                                 .equ	UCSR0C	= 0xc2	; MEMORY MAPPED
                                 .equ	UCSR0B	= 0xc1	; MEMORY MAPPED
                                 .equ	UCSR0A	= 0xc0	; MEMORY MAPPED
                                 .equ	TWAMR	= 0xbd	; MEMORY MAPPED
                                 .equ	TWCR	= 0xbc	; MEMORY MAPPED
                                 .equ	TWDR	= 0xbb	; MEMORY MAPPED
                                 .equ	TWAR	= 0xba	; MEMORY MAPPED
                                 .equ	TWSR	= 0xb9	; MEMORY MAPPED
                                 .equ	TWBR	= 0xb8	; MEMORY MAPPED
                                 .equ	ASSR	= 0xb6	; MEMORY MAPPED
                                 .equ	OCR2B	= 0xb4	; MEMORY MAPPED
                                 .equ	OCR2A	= 0xb3	; MEMORY MAPPED
                                 .equ	TCNT2	= 0xb2	; MEMORY MAPPED
                                 .equ	TCCR2B	= 0xb1	; MEMORY MAPPED
                                 .equ	TCCR2A	= 0xb0	; MEMORY MAPPED
                                 .equ	OCR1BL	= 0x8a	; MEMORY MAPPED
                                 .equ	OCR1BH	= 0x8b	; MEMORY MAPPED
                                 .equ	OCR1AL	= 0x88	; MEMORY MAPPED
                                 .equ	OCR1AH	= 0x89	; MEMORY MAPPED
                                 .equ	ICR1L	= 0x86	; MEMORY MAPPED
                                 .equ	ICR1H	= 0x87	; MEMORY MAPPED
                                 .equ	TCNT1L	= 0x84	; MEMORY MAPPED
                                 .equ	TCNT1H	= 0x85	; MEMORY MAPPED
                                 .equ	TCCR1C	= 0x82	; MEMORY MAPPED
                                 .equ	TCCR1B	= 0x81	; MEMORY MAPPED
                                 .equ	TCCR1A	= 0x80	; MEMORY MAPPED
                                 .equ	DIDR1	= 0x7f	; MEMORY MAPPED
                                 .equ	DIDR0	= 0x7e	; MEMORY MAPPED
                                 .equ	ADMUX	= 0x7c	; MEMORY MAPPED
                                 .equ	ADCSRB	= 0x7b	; MEMORY MAPPED
                                 .equ	ADCSRA	= 0x7a	; MEMORY MAPPED
                                 .equ	ADCH	= 0x79	; MEMORY MAPPED
                                 .equ	ADCL	= 0x78	; MEMORY MAPPED
                                 .equ	TIMSK2	= 0x70	; MEMORY MAPPED
                                 .equ	TIMSK1	= 0x6f	; MEMORY MAPPED
                                 .equ	TIMSK0	= 0x6e	; MEMORY MAPPED
                                 .equ	PCMSK1	= 0x6c	; MEMORY MAPPED
                                 .equ	PCMSK2	= 0x6d	; MEMORY MAPPED
                                 .equ	PCMSK0	= 0x6b	; MEMORY MAPPED
                                 .equ	EICRA	= 0x69	; MEMORY MAPPED
                                 .equ	PCICR	= 0x68	; MEMORY MAPPED
                                 .equ	OSCCAL	= 0x66	; MEMORY MAPPED
                                 .equ	PRR	= 0x64	; MEMORY MAPPED
                                 .equ	CLKPR	= 0x61	; MEMORY MAPPED
                                 .equ	WDTCSR	= 0x60	; MEMORY MAPPED
                                 .equ	SREG	= 0x3f
                                 .equ	SPL	= 0x3d
                                 .equ	SPH	= 0x3e
                                 .equ	SPMCSR	= 0x37
                                 .equ	MCUCR	= 0x35
                                 .equ	MCUSR	= 0x34
                                 .equ	SMCR	= 0x33
                                 .equ	ACSR	= 0x30
                                 .equ	SPDR	= 0x2e
                                 .equ	SPSR	= 0x2d
                                 .equ	SPCR	= 0x2c
                                 .equ	GPIOR2	= 0x2b
                                 .equ	GPIOR1	= 0x2a
                                 .equ	OCR0B	= 0x28
                                 .equ	OCR0A	= 0x27
                                 .equ	TCNT0	= 0x26
                                 .equ	TCCR0B	= 0x25
                                 .equ	TCCR0A	= 0x24
                                 .equ	GTCCR	= 0x23
                                 .equ	EEARH	= 0x22
                                 .equ	EEARL	= 0x21
                                 .equ	EEDR	= 0x20
                                 .equ	EECR	= 0x1f
                                 .equ	GPIOR0	= 0x1e
                                 .equ	EIMSK	= 0x1d
                                 .equ	EIFR	= 0x1c
                                 .equ	PCIFR	= 0x1b
                                 .equ	TIFR2	= 0x17
                                 .equ	TIFR1	= 0x16
                                 .equ	TIFR0	= 0x15
                                 .equ	PORTD	= 0x0b
                                 .equ	DDRD	= 0x0a
                                 .equ	PIND	= 0x09
                                 .equ	PORTC	= 0x08
                                 .equ	DDRC	= 0x07
                                 .equ	PINC	= 0x06
                                 .equ	PORTB	= 0x05
                                 .equ	DDRB	= 0x04
                                 .equ	PINB	= 0x03
                                 
                                 
                                 ; ***** BIT DEFINITIONS **************************************************
                                 
                                 ; ***** USART0 ***********************
                                 ; UDR0 - USART I/O Data Register
                                 .equ	UDR0_0	= 0	; USART I/O Data Register bit 0
                                 .equ	UDR0_1	= 1	; USART I/O Data Register bit 1
                                 .equ	UDR0_2	= 2	; USART I/O Data Register bit 2
                                 .equ	UDR0_3	= 3	; USART I/O Data Register bit 3
                                 .equ	UDR0_4	= 4	; USART I/O Data Register bit 4
                                 .equ	UDR0_5	= 5	; USART I/O Data Register bit 5
                                 .equ	UDR0_6	= 6	; USART I/O Data Register bit 6
                                 .equ	UDR0_7	= 7	; USART I/O Data Register bit 7
                                 
                                 ; UCSR0A - USART Control and Status Register A
                                 .equ	MPCM0	= 0	; Multi-processor Communication Mode
                                 .equ	U2X0	= 1	; Double the USART transmission speed
                                 .equ	UPE0	= 2	; Parity Error
                                 .equ	DOR0	= 3	; Data overRun
                                 .equ	FE0	= 4	; Framing Error
                                 .equ	UDRE0	= 5	; USART Data Register Empty
                                 .equ	TXC0	= 6	; USART Transmitt Complete
                                 .equ	RXC0	= 7	; USART Receive Complete
                                 
                                 ; UCSR0B - USART Control and Status Register B
                                 .equ	TXB80	= 0	; Transmit Data Bit 8
                                 .equ	RXB80	= 1	; Receive Data Bit 8
                                 .equ	UCSZ02	= 2	; Character Size
                                 .equ	TXEN0	= 3	; Transmitter Enable
                                 .equ	RXEN0	= 4	; Receiver Enable
                                 .equ	UDRIE0	= 5	; USART Data register Empty Interrupt Enable
                                 .equ	TXCIE0	= 6	; TX Complete Interrupt Enable
                                 .equ	RXCIE0	= 7	; RX Complete Interrupt Enable
                                 
                                 ; UCSR0C - USART Control and Status Register C
                                 .equ	UCPOL0	= 0	; Clock Polarity
                                 .equ	UCSZ00	= 1	; Character Size
                                 .equ	UCPHA0	= UCSZ00	; For compatibility
                                 .equ	UCSZ01	= 2	; Character Size
                                 .equ	UDORD0	= UCSZ01	; For compatibility
                                 .equ	USBS0	= 3	; Stop Bit Select
                                 .equ	UPM00	= 4	; Parity Mode Bit 0
                                 .equ	UPM01	= 5	; Parity Mode Bit 1
                                 .equ	UMSEL00	= 6	; USART Mode Select
                                 .equ	UMSEL0	= UMSEL00	; For compatibility
                                 .equ	UMSEL01	= 7	; USART Mode Select
                                 .equ	UMSEL1	= UMSEL01	; For compatibility
                                 
                                 ; UBRR0H - USART Baud Rate Register High Byte
                                 .equ	UBRR8	= 0	; USART Baud Rate Register bit 8
                                 .equ	UBRR9	= 1	; USART Baud Rate Register bit 9
                                 .equ	UBRR10	= 2	; USART Baud Rate Register bit 10
                                 .equ	UBRR11	= 3	; USART Baud Rate Register bit 11
                                 
                                 ; UBRR0L - USART Baud Rate Register Low Byte
                                 .equ	_UBRR0	= 0	; USART Baud Rate Register bit 0
                                 .equ	_UBRR1	= 1	; USART Baud Rate Register bit 1
                                 .equ	UBRR2	= 2	; USART Baud Rate Register bit 2
                                 .equ	UBRR3	= 3	; USART Baud Rate Register bit 3
                                 .equ	UBRR4	= 4	; USART Baud Rate Register bit 4
                                 .equ	UBRR5	= 5	; USART Baud Rate Register bit 5
                                 .equ	UBRR6	= 6	; USART Baud Rate Register bit 6
                                 .equ	UBRR7	= 7	; USART Baud Rate Register bit 7
                                 
                                 
                                 ; ***** TWI **************************
                                 ; TWAMR - TWI (Slave) Address Mask Register
                                 .equ	TWAM0	= 1	; 
                                 .equ	TWAMR0	= TWAM0	; For compatibility
                                 .equ	TWAM1	= 2	; 
                                 .equ	TWAMR1	= TWAM1	; For compatibility
                                 .equ	TWAM2	= 3	; 
                                 .equ	TWAMR2	= TWAM2	; For compatibility
                                 .equ	TWAM3	= 4	; 
                                 .equ	TWAMR3	= TWAM3	; For compatibility
                                 .equ	TWAM4	= 5	; 
                                 .equ	TWAMR4	= TWAM4	; For compatibility
                                 .equ	TWAM5	= 6	; 
                                 .equ	TWAMR5	= TWAM5	; For compatibility
                                 .equ	TWAM6	= 7	; 
                                 .equ	TWAMR6	= TWAM6	; For compatibility
                                 
                                 ; TWBR - TWI Bit Rate register
                                 .equ	TWBR0	= 0	; 
                                 .equ	TWBR1	= 1	; 
                                 .equ	TWBR2	= 2	; 
                                 .equ	TWBR3	= 3	; 
                                 .equ	TWBR4	= 4	; 
                                 .equ	TWBR5	= 5	; 
                                 .equ	TWBR6	= 6	; 
                                 .equ	TWBR7	= 7	; 
                                 
                                 ; TWCR - TWI Control Register
                                 .equ	TWIE	= 0	; TWI Interrupt Enable
                                 .equ	TWEN	= 2	; TWI Enable Bit
                                 .equ	TWWC	= 3	; TWI Write Collition Flag
                                 .equ	TWSTO	= 4	; TWI Stop Condition Bit
                                 .equ	TWSTA	= 5	; TWI Start Condition Bit
                                 .equ	TWEA	= 6	; TWI Enable Acknowledge Bit
                                 .equ	TWINT	= 7	; TWI Interrupt Flag
                                 
                                 ; TWSR - TWI Status Register
                                 .equ	TWPS0	= 0	; TWI Prescaler
                                 .equ	TWPS1	= 1	; TWI Prescaler
                                 .equ	TWS3	= 3	; TWI Status
                                 .equ	TWS4	= 4	; TWI Status
                                 .equ	TWS5	= 5	; TWI Status
                                 .equ	TWS6	= 6	; TWI Status
                                 .equ	TWS7	= 7	; TWI Status
                                 
                                 ; TWDR - TWI Data register
                                 .equ	TWD0	= 0	; TWI Data Register Bit 0
                                 .equ	TWD1	= 1	; TWI Data Register Bit 1
                                 .equ	TWD2	= 2	; TWI Data Register Bit 2
                                 .equ	TWD3	= 3	; TWI Data Register Bit 3
                                 .equ	TWD4	= 4	; TWI Data Register Bit 4
                                 .equ	TWD5	= 5	; TWI Data Register Bit 5
                                 .equ	TWD6	= 6	; TWI Data Register Bit 6
                                 .equ	TWD7	= 7	; TWI Data Register Bit 7
                                 
                                 ; TWAR - TWI (Slave) Address register
                                 .equ	TWGCE	= 0	; TWI General Call Recognition Enable Bit
                                 .equ	TWA0	= 1	; TWI (Slave) Address register Bit 0
                                 .equ	TWA1	= 2	; TWI (Slave) Address register Bit 1
                                 .equ	TWA2	= 3	; TWI (Slave) Address register Bit 2
                                 .equ	TWA3	= 4	; TWI (Slave) Address register Bit 3
                                 .equ	TWA4	= 5	; TWI (Slave) Address register Bit 4
                                 .equ	TWA5	= 6	; TWI (Slave) Address register Bit 5
                                 .equ	TWA6	= 7	; TWI (Slave) Address register Bit 6
                                 
                                 
                                 ; ***** TIMER_COUNTER_1 **************
                                 ; TIMSK1 - Timer/Counter Interrupt Mask Register
                                 .equ	TOIE1	= 0	; Timer/Counter1 Overflow Interrupt Enable
                                 .equ	OCIE1A	= 1	; Timer/Counter1 Output CompareA Match Interrupt Enable
                                 .equ	OCIE1B	= 2	; Timer/Counter1 Output CompareB Match Interrupt Enable
                                 .equ	ICIE1	= 5	; Timer/Counter1 Input Capture Interrupt Enable
                                 
                                 ; TIFR1 - Timer/Counter Interrupt Flag register
                                 .equ	TOV1	= 0	; Timer/Counter1 Overflow Flag
                                 .equ	OCF1A	= 1	; Output Compare Flag 1A
                                 .equ	OCF1B	= 2	; Output Compare Flag 1B
                                 .equ	ICF1	= 5	; Input Capture Flag 1
                                 
                                 ; TCCR1A - Timer/Counter1 Control Register A
                                 .equ	WGM10	= 0	; Waveform Generation Mode
                                 .equ	WGM11	= 1	; Waveform Generation Mode
                                 .equ	COM1B0	= 4	; Compare Output Mode 1B, bit 0
                                 .equ	COM1B1	= 5	; Compare Output Mode 1B, bit 1
                                 .equ	COM1A0	= 6	; Comparet Ouput Mode 1A, bit 0
                                 .equ	COM1A1	= 7	; Compare Output Mode 1A, bit 1
                                 
                                 ; TCCR1B - Timer/Counter1 Control Register B
                                 .equ	CS10	= 0	; Prescaler source of Timer/Counter 1
                                 .equ	CS11	= 1	; Prescaler source of Timer/Counter 1
                                 .equ	CS12	= 2	; Prescaler source of Timer/Counter 1
                                 .equ	WGM12	= 3	; Waveform Generation Mode
                                 .equ	WGM13	= 4	; Waveform Generation Mode
                                 .equ	ICES1	= 6	; Input Capture 1 Edge Select
                                 .equ	ICNC1	= 7	; Input Capture 1 Noise Canceler
                                 
                                 ; TCCR1C - Timer/Counter1 Control Register C
                                 .equ	FOC1B	= 6	; 
                                 .equ	FOC1A	= 7	; 
                                 
                                 ; GTCCR - General Timer/Counter Control Register
                                 .equ	PSRSYNC	= 0	; Prescaler Reset Timer/Counter1 and Timer/Counter0
                                 .equ	TSM	= 7	; Timer/Counter Synchronization Mode
                                 
                                 
                                 ; ***** TIMER_COUNTER_2 **************
                                 ; TIMSK2 - Timer/Counter Interrupt Mask register
                                 .equ	TOIE2	= 0	; Timer/Counter2 Overflow Interrupt Enable
                                 .equ	TOIE2A	= TOIE2	; For compatibility
                                 .equ	OCIE2A	= 1	; Timer/Counter2 Output Compare Match A Interrupt Enable
                                 .equ	OCIE2B	= 2	; Timer/Counter2 Output Compare Match B Interrupt Enable
                                 
                                 ; TIFR2 - Timer/Counter Interrupt Flag Register
                                 .equ	TOV2	= 0	; Timer/Counter2 Overflow Flag
                                 .equ	OCF2A	= 1	; Output Compare Flag 2A
                                 .equ	OCF2B	= 2	; Output Compare Flag 2B
                                 
                                 ; TCCR2A - Timer/Counter2 Control Register A
                                 .equ	WGM20	= 0	; Waveform Genration Mode
                                 .equ	WGM21	= 1	; Waveform Genration Mode
                                 .equ	COM2B0	= 4	; Compare Output Mode bit 0
                                 .equ	COM2B1	= 5	; Compare Output Mode bit 1
                                 .equ	COM2A0	= 6	; Compare Output Mode bit 1
                                 .equ	COM2A1	= 7	; Compare Output Mode bit 1
                                 
                                 ; TCCR2B - Timer/Counter2 Control Register B
                                 .equ	CS20	= 0	; Clock Select bit 0
                                 .equ	CS21	= 1	; Clock Select bit 1
                                 .equ	CS22	= 2	; Clock Select bit 2
                                 .equ	WGM22	= 3	; Waveform Generation Mode
                                 .equ	FOC2B	= 6	; Force Output Compare B
                                 .equ	FOC2A	= 7	; Force Output Compare A
                                 
                                 ; TCNT2 - Timer/Counter2
                                 .equ	TCNT2_0	= 0	; Timer/Counter 2 bit 0
                                 .equ	TCNT2_1	= 1	; Timer/Counter 2 bit 1
                                 .equ	TCNT2_2	= 2	; Timer/Counter 2 bit 2
                                 .equ	TCNT2_3	= 3	; Timer/Counter 2 bit 3
                                 .equ	TCNT2_4	= 4	; Timer/Counter 2 bit 4
                                 .equ	TCNT2_5	= 5	; Timer/Counter 2 bit 5
                                 .equ	TCNT2_6	= 6	; Timer/Counter 2 bit 6
                                 .equ	TCNT2_7	= 7	; Timer/Counter 2 bit 7
                                 
                                 ; OCR2A - Timer/Counter2 Output Compare Register A
                                 .equ	OCR2A_0	= 0	; Timer/Counter2 Output Compare Register Bit 0
                                 .equ	OCR2A_1	= 1	; Timer/Counter2 Output Compare Register Bit 1
                                 .equ	OCR2A_2	= 2	; Timer/Counter2 Output Compare Register Bit 2
                                 .equ	OCR2A_3	= 3	; Timer/Counter2 Output Compare Register Bit 3
                                 .equ	OCR2A_4	= 4	; Timer/Counter2 Output Compare Register Bit 4
                                 .equ	OCR2A_5	= 5	; Timer/Counter2 Output Compare Register Bit 5
                                 .equ	OCR2A_6	= 6	; Timer/Counter2 Output Compare Register Bit 6
                                 .equ	OCR2A_7	= 7	; Timer/Counter2 Output Compare Register Bit 7
                                 
                                 ; OCR2B - Timer/Counter2 Output Compare Register B
                                 .equ	OCR2B_0	= 0	; Timer/Counter2 Output Compare Register Bit 0
                                 .equ	OCR2B_1	= 1	; Timer/Counter2 Output Compare Register Bit 1
                                 .equ	OCR2B_2	= 2	; Timer/Counter2 Output Compare Register Bit 2
                                 .equ	OCR2B_3	= 3	; Timer/Counter2 Output Compare Register Bit 3
                                 .equ	OCR2B_4	= 4	; Timer/Counter2 Output Compare Register Bit 4
                                 .equ	OCR2B_5	= 5	; Timer/Counter2 Output Compare Register Bit 5
                                 .equ	OCR2B_6	= 6	; Timer/Counter2 Output Compare Register Bit 6
                                 .equ	OCR2B_7	= 7	; Timer/Counter2 Output Compare Register Bit 7
                                 
                                 ; ASSR - Asynchronous Status Register
                                 .equ	TCR2BUB	= 0	; Timer/Counter Control Register2 Update Busy
                                 .equ	TCR2AUB	= 1	; Timer/Counter Control Register2 Update Busy
                                 .equ	OCR2BUB	= 2	; Output Compare Register 2 Update Busy
                                 .equ	OCR2AUB	= 3	; Output Compare Register2 Update Busy
                                 .equ	TCN2UB	= 4	; Timer/Counter2 Update Busy
                                 .equ	AS2	= 5	; Asynchronous Timer/Counter2
                                 .equ	EXCLK	= 6	; Enable External Clock Input
                                 
                                 ; GTCCR - General Timer Counter Control register
                                 .equ	PSRASY	= 1	; Prescaler Reset Timer/Counter2
                                 .equ	PSR2	= PSRASY	; For compatibility
                                 ;.equ	TSM	= 7	; Timer/Counter Synchronization Mode
                                 
                                 
                                 ; ***** AD_CONVERTER *****************
                                 ; ADMUX - The ADC multiplexer Selection Register
                                 .equ	MUX0	= 0	; Analog Channel and Gain Selection Bits
                                 .equ	MUX1	= 1	; Analog Channel and Gain Selection Bits
                                 .equ	MUX2	= 2	; Analog Channel and Gain Selection Bits
                                 .equ	MUX3	= 3	; Analog Channel and Gain Selection Bits
                                 .equ	ADLAR	= 5	; Left Adjust Result
                                 .equ	REFS0	= 6	; Reference Selection Bit 0
                                 .equ	REFS1	= 7	; Reference Selection Bit 1
                                 
                                 ; ADCSRA - The ADC Control and Status register A
                                 .equ	ADPS0	= 0	; ADC  Prescaler Select Bits
                                 .equ	ADPS1	= 1	; ADC  Prescaler Select Bits
                                 .equ	ADPS2	= 2	; ADC  Prescaler Select Bits
                                 .equ	ADIE	= 3	; ADC Interrupt Enable
                                 .equ	ADIF	= 4	; ADC Interrupt Flag
                                 .equ	ADATE	= 5	; ADC  Auto Trigger Enable
                                 .equ	ADSC	= 6	; ADC Start Conversion
                                 .equ	ADEN	= 7	; ADC Enable
                                 
                                 ; ADCSRB - The ADC Control and Status register B
                                 .equ	ADTS0	= 0	; ADC Auto Trigger Source bit 0
                                 .equ	ADTS1	= 1	; ADC Auto Trigger Source bit 1
                                 .equ	ADTS2	= 2	; ADC Auto Trigger Source bit 2
                                 .equ	ACME	= 6	; 
                                 
                                 ; ADCH - ADC Data Register High Byte
                                 .equ	ADCH0	= 0	; ADC Data Register High Byte Bit 0
                                 .equ	ADCH1	= 1	; ADC Data Register High Byte Bit 1
                                 .equ	ADCH2	= 2	; ADC Data Register High Byte Bit 2
                                 .equ	ADCH3	= 3	; ADC Data Register High Byte Bit 3
                                 .equ	ADCH4	= 4	; ADC Data Register High Byte Bit 4
                                 .equ	ADCH5	= 5	; ADC Data Register High Byte Bit 5
                                 .equ	ADCH6	= 6	; ADC Data Register High Byte Bit 6
                                 .equ	ADCH7	= 7	; ADC Data Register High Byte Bit 7
                                 
                                 ; ADCL - ADC Data Register Low Byte
                                 .equ	ADCL0	= 0	; ADC Data Register Low Byte Bit 0
                                 .equ	ADCL1	= 1	; ADC Data Register Low Byte Bit 1
                                 .equ	ADCL2	= 2	; ADC Data Register Low Byte Bit 2
                                 .equ	ADCL3	= 3	; ADC Data Register Low Byte Bit 3
                                 .equ	ADCL4	= 4	; ADC Data Register Low Byte Bit 4
                                 .equ	ADCL5	= 5	; ADC Data Register Low Byte Bit 5
                                 .equ	ADCL6	= 6	; ADC Data Register Low Byte Bit 6
                                 .equ	ADCL7	= 7	; ADC Data Register Low Byte Bit 7
                                 
                                 ; DIDR0 - Digital Input Disable Register
                                 .equ	ADC0D	= 0	; 
                                 .equ	ADC1D	= 1	; 
                                 .equ	ADC2D	= 2	; 
                                 .equ	ADC3D	= 3	; 
                                 .equ	ADC4D	= 4	; 
                                 .equ	ADC5D	= 5	; 
                                 
                                 
                                 ; ***** ANALOG_COMPARATOR ************
                                 ; ACSR - Analog Comparator Control And Status Register
                                 .equ	ACIS0	= 0	; Analog Comparator Interrupt Mode Select bit 0
                                 .equ	ACIS1	= 1	; Analog Comparator Interrupt Mode Select bit 1
                                 .equ	ACIC	= 2	; Analog Comparator Input Capture Enable
                                 .equ	ACIE	= 3	; Analog Comparator Interrupt Enable
                                 .equ	ACI	= 4	; Analog Comparator Interrupt Flag
                                 .equ	ACO	= 5	; Analog Compare Output
                                 .equ	ACBG	= 6	; Analog Comparator Bandgap Select
                                 .equ	ACD	= 7	; Analog Comparator Disable
                                 
                                 ; DIDR1 - Digital Input Disable Register 1
                                 .equ	AIN0D	= 0	; AIN0 Digital Input Disable
                                 .equ	AIN1D	= 1	; AIN1 Digital Input Disable
                                 
                                 
                                 ; ***** PORTB ************************
                                 ; PORTB - Port B Data Register
                                 .equ	PORTB0	= 0	; Port B Data Register bit 0
                                 .equ	PB0	= 0	; For compatibility
                                 .equ	PORTB1	= 1	; Port B Data Register bit 1
                                 .equ	PB1	= 1	; For compatibility
                                 .equ	PORTB2	= 2	; Port B Data Register bit 2
                                 .equ	PB2	= 2	; For compatibility
                                 .equ	PORTB3	= 3	; Port B Data Register bit 3
                                 .equ	PB3	= 3	; For compatibility
                                 .equ	PORTB4	= 4	; Port B Data Register bit 4
                                 .equ	PB4	= 4	; For compatibility
                                 .equ	PORTB5	= 5	; Port B Data Register bit 5
                                 .equ	PB5	= 5	; For compatibility
                                 .equ	PORTB6	= 6	; Port B Data Register bit 6
                                 .equ	PB6	= 6	; For compatibility
                                 .equ	PORTB7	= 7	; Port B Data Register bit 7
                                 .equ	PB7	= 7	; For compatibility
                                 
                                 ; DDRB - Port B Data Direction Register
                                 .equ	DDB0	= 0	; Port B Data Direction Register bit 0
                                 .equ	DDB1	= 1	; Port B Data Direction Register bit 1
                                 .equ	DDB2	= 2	; Port B Data Direction Register bit 2
                                 .equ	DDB3	= 3	; Port B Data Direction Register bit 3
                                 .equ	DDB4	= 4	; Port B Data Direction Register bit 4
                                 .equ	DDB5	= 5	; Port B Data Direction Register bit 5
                                 .equ	DDB6	= 6	; Port B Data Direction Register bit 6
                                 .equ	DDB7	= 7	; Port B Data Direction Register bit 7
                                 
                                 ; PINB - Port B Input Pins
                                 .equ	PINB0	= 0	; Port B Input Pins bit 0
                                 .equ	PINB1	= 1	; Port B Input Pins bit 1
                                 .equ	PINB2	= 2	; Port B Input Pins bit 2
                                 .equ	PINB3	= 3	; Port B Input Pins bit 3
                                 .equ	PINB4	= 4	; Port B Input Pins bit 4
                                 .equ	PINB5	= 5	; Port B Input Pins bit 5
                                 .equ	PINB6	= 6	; Port B Input Pins bit 6
                                 .equ	PINB7	= 7	; Port B Input Pins bit 7
                                 
                                 
                                 ; ***** PORTC ************************
                                 ; PORTC - Port C Data Register
                                 .equ	PORTC0	= 0	; Port C Data Register bit 0
                                 .equ	PC0	= 0	; For compatibility
                                 .equ	PORTC1	= 1	; Port C Data Register bit 1
                                 .equ	PC1	= 1	; For compatibility
                                 .equ	PORTC2	= 2	; Port C Data Register bit 2
                                 .equ	PC2	= 2	; For compatibility
                                 .equ	PORTC3	= 3	; Port C Data Register bit 3
                                 .equ	PC3	= 3	; For compatibility
                                 .equ	PORTC4	= 4	; Port C Data Register bit 4
                                 .equ	PC4	= 4	; For compatibility
                                 .equ	PORTC5	= 5	; Port C Data Register bit 5
                                 .equ	PC5	= 5	; For compatibility
                                 .equ	PORTC6	= 6	; Port C Data Register bit 6
                                 .equ	PC6	= 6	; For compatibility
                                 
                                 ; DDRC - Port C Data Direction Register
                                 .equ	DDC0	= 0	; Port C Data Direction Register bit 0
                                 .equ	DDC1	= 1	; Port C Data Direction Register bit 1
                                 .equ	DDC2	= 2	; Port C Data Direction Register bit 2
                                 .equ	DDC3	= 3	; Port C Data Direction Register bit 3
                                 .equ	DDC4	= 4	; Port C Data Direction Register bit 4
                                 .equ	DDC5	= 5	; Port C Data Direction Register bit 5
                                 .equ	DDC6	= 6	; Port C Data Direction Register bit 6
                                 
                                 ; PINC - Port C Input Pins
                                 .equ	PINC0	= 0	; Port C Input Pins bit 0
                                 .equ	PINC1	= 1	; Port C Input Pins bit 1
                                 .equ	PINC2	= 2	; Port C Input Pins bit 2
                                 .equ	PINC3	= 3	; Port C Input Pins bit 3
                                 .equ	PINC4	= 4	; Port C Input Pins bit 4
                                 .equ	PINC5	= 5	; Port C Input Pins bit 5
                                 .equ	PINC6	= 6	; Port C Input Pins bit 6
                                 
                                 
                                 ; ***** PORTD ************************
                                 ; PORTD - Port D Data Register
                                 .equ	PORTD0	= 0	; Port D Data Register bit 0
                                 .equ	PD0	= 0	; For compatibility
                                 .equ	PORTD1	= 1	; Port D Data Register bit 1
                                 .equ	PD1	= 1	; For compatibility
                                 .equ	PORTD2	= 2	; Port D Data Register bit 2
                                 .equ	PD2	= 2	; For compatibility
                                 .equ	PORTD3	= 3	; Port D Data Register bit 3
                                 .equ	PD3	= 3	; For compatibility
                                 .equ	PORTD4	= 4	; Port D Data Register bit 4
                                 .equ	PD4	= 4	; For compatibility
                                 .equ	PORTD5	= 5	; Port D Data Register bit 5
                                 .equ	PD5	= 5	; For compatibility
                                 .equ	PORTD6	= 6	; Port D Data Register bit 6
                                 .equ	PD6	= 6	; For compatibility
                                 .equ	PORTD7	= 7	; Port D Data Register bit 7
                                 .equ	PD7	= 7	; For compatibility
                                 
                                 ; DDRD - Port D Data Direction Register
                                 .equ	DDD0	= 0	; Port D Data Direction Register bit 0
                                 .equ	DDD1	= 1	; Port D Data Direction Register bit 1
                                 .equ	DDD2	= 2	; Port D Data Direction Register bit 2
                                 .equ	DDD3	= 3	; Port D Data Direction Register bit 3
                                 .equ	DDD4	= 4	; Port D Data Direction Register bit 4
                                 .equ	DDD5	= 5	; Port D Data Direction Register bit 5
                                 .equ	DDD6	= 6	; Port D Data Direction Register bit 6
                                 .equ	DDD7	= 7	; Port D Data Direction Register bit 7
                                 
                                 ; PIND - Port D Input Pins
                                 .equ	PIND0	= 0	; Port D Input Pins bit 0
                                 .equ	PIND1	= 1	; Port D Input Pins bit 1
                                 .equ	PIND2	= 2	; Port D Input Pins bit 2
                                 .equ	PIND3	= 3	; Port D Input Pins bit 3
                                 .equ	PIND4	= 4	; Port D Input Pins bit 4
                                 .equ	PIND5	= 5	; Port D Input Pins bit 5
                                 .equ	PIND6	= 6	; Port D Input Pins bit 6
                                 .equ	PIND7	= 7	; Port D Input Pins bit 7
                                 
                                 
                                 ; ***** TIMER_COUNTER_0 **************
                                 ; TIMSK0 - Timer/Counter0 Interrupt Mask Register
                                 .equ	TOIE0	= 0	; Timer/Counter0 Overflow Interrupt Enable
                                 .equ	OCIE0A	= 1	; Timer/Counter0 Output Compare Match A Interrupt Enable
                                 .equ	OCIE0B	= 2	; Timer/Counter0 Output Compare Match B Interrupt Enable
                                 
                                 ; TIFR0 - Timer/Counter0 Interrupt Flag register
                                 .equ	TOV0	= 0	; Timer/Counter0 Overflow Flag
                                 .equ	OCF0A	= 1	; Timer/Counter0 Output Compare Flag 0A
                                 .equ	OCF0B	= 2	; Timer/Counter0 Output Compare Flag 0B
                                 
                                 ; TCCR0A - Timer/Counter  Control Register A
                                 .equ	WGM00	= 0	; Waveform Generation Mode
                                 .equ	WGM01	= 1	; Waveform Generation Mode
                                 .equ	COM0B0	= 4	; Compare Output Mode, Fast PWm
                                 .equ	COM0B1	= 5	; Compare Output Mode, Fast PWm
                                 .equ	COM0A0	= 6	; Compare Output Mode, Phase Correct PWM Mode
                                 .equ	COM0A1	= 7	; Compare Output Mode, Phase Correct PWM Mode
                                 
                                 ; TCCR0B - Timer/Counter Control Register B
                                 .equ	CS00	= 0	; Clock Select
                                 .equ	CS01	= 1	; Clock Select
                                 .equ	CS02	= 2	; Clock Select
                                 .equ	WGM02	= 3	; 
                                 .equ	FOC0B	= 6	; Force Output Compare B
                                 .equ	FOC0A	= 7	; Force Output Compare A
                                 
                                 ; TCNT0 - Timer/Counter0
                                 .equ	TCNT0_0	= 0	; 
                                 .equ	TCNT0_1	= 1	; 
                                 .equ	TCNT0_2	= 2	; 
                                 .equ	TCNT0_3	= 3	; 
                                 .equ	TCNT0_4	= 4	; 
                                 .equ	TCNT0_5	= 5	; 
                                 .equ	TCNT0_6	= 6	; 
                                 .equ	TCNT0_7	= 7	; 
                                 
                                 ; OCR0A - Timer/Counter0 Output Compare Register
                                 .equ	OCR0A_0	= 0	; 
                                 .equ	OCR0A_1	= 1	; 
                                 .equ	OCR0A_2	= 2	; 
                                 .equ	OCR0A_3	= 3	; 
                                 .equ	OCR0A_4	= 4	; 
                                 .equ	OCR0A_5	= 5	; 
                                 .equ	OCR0A_6	= 6	; 
                                 .equ	OCR0A_7	= 7	; 
                                 
                                 ; OCR0B - Timer/Counter0 Output Compare Register
                                 .equ	OCR0B_0	= 0	; 
                                 .equ	OCR0B_1	= 1	; 
                                 .equ	OCR0B_2	= 2	; 
                                 .equ	OCR0B_3	= 3	; 
                                 .equ	OCR0B_4	= 4	; 
                                 .equ	OCR0B_5	= 5	; 
                                 .equ	OCR0B_6	= 6	; 
                                 .equ	OCR0B_7	= 7	; 
                                 
                                 ; GTCCR - General Timer/Counter Control Register
                                 ;.equ	PSRSYNC	= 0	; Prescaler Reset Timer/Counter1 and Timer/Counter0
                                 .equ	PSR10	= PSRSYNC	; For compatibility
                                 ;.equ	TSM	= 7	; Timer/Counter Synchronization Mode
                                 
                                 
                                 ; ***** EXTERNAL_INTERRUPT ***********
                                 ; EICRA - External Interrupt Control Register
                                 .equ	ISC00	= 0	; External Interrupt Sense Control 0 Bit 0
                                 .equ	ISC01	= 1	; External Interrupt Sense Control 0 Bit 1
                                 .equ	ISC10	= 2	; External Interrupt Sense Control 1 Bit 0
                                 .equ	ISC11	= 3	; External Interrupt Sense Control 1 Bit 1
                                 
                                 ; EIMSK - External Interrupt Mask Register
                                 .equ	INT0	= 0	; External Interrupt Request 0 Enable
                                 .equ	INT1	= 1	; External Interrupt Request 1 Enable
                                 
                                 ; EIFR - External Interrupt Flag Register
                                 .equ	INTF0	= 0	; External Interrupt Flag 0
                                 .equ	INTF1	= 1	; External Interrupt Flag 1
                                 
                                 ; PCICR - Pin Change Interrupt Control Register
                                 .equ	PCIE0	= 0	; Pin Change Interrupt Enable 0
                                 .equ	PCIE1	= 1	; Pin Change Interrupt Enable 1
                                 .equ	PCIE2	= 2	; Pin Change Interrupt Enable 2
                                 
                                 ; PCMSK2 - Pin Change Mask Register 2
                                 .equ	PCINT16	= 0	; Pin Change Enable Mask 16
                                 .equ	PCINT17	= 1	; Pin Change Enable Mask 17
                                 .equ	PCINT18	= 2	; Pin Change Enable Mask 18
                                 .equ	PCINT19	= 3	; Pin Change Enable Mask 19
                                 .equ	PCINT20	= 4	; Pin Change Enable Mask 20
                                 .equ	PCINT21	= 5	; Pin Change Enable Mask 21
                                 .equ	PCINT22	= 6	; Pin Change Enable Mask 22
                                 .equ	PCINT23	= 7	; Pin Change Enable Mask 23
                                 
                                 ; PCMSK1 - Pin Change Mask Register 1
                                 .equ	PCINT8	= 0	; Pin Change Enable Mask 8
                                 .equ	PCINT9	= 1	; Pin Change Enable Mask 9
                                 .equ	PCINT10	= 2	; Pin Change Enable Mask 10
                                 .equ	PCINT11	= 3	; Pin Change Enable Mask 11
                                 .equ	PCINT12	= 4	; Pin Change Enable Mask 12
                                 .equ	PCINT13	= 5	; Pin Change Enable Mask 13
                                 .equ	PCINT14	= 6	; Pin Change Enable Mask 14
                                 
                                 ; PCMSK0 - Pin Change Mask Register 0
                                 .equ	PCINT0	= 0	; Pin Change Enable Mask 0
                                 .equ	PCINT1	= 1	; Pin Change Enable Mask 1
                                 .equ	PCINT2	= 2	; Pin Change Enable Mask 2
                                 .equ	PCINT3	= 3	; Pin Change Enable Mask 3
                                 .equ	PCINT4	= 4	; Pin Change Enable Mask 4
                                 .equ	PCINT5	= 5	; Pin Change Enable Mask 5
                                 .equ	PCINT6	= 6	; Pin Change Enable Mask 6
                                 .equ	PCINT7	= 7	; Pin Change Enable Mask 7
                                 
                                 ; PCIFR - Pin Change Interrupt Flag Register
                                 .equ	PCIF0	= 0	; Pin Change Interrupt Flag 0
                                 .equ	PCIF1	= 1	; Pin Change Interrupt Flag 1
                                 .equ	PCIF2	= 2	; Pin Change Interrupt Flag 2
                                 
                                 
                                 ; ***** SPI **************************
                                 ; SPDR - SPI Data Register
                                 .equ	SPDR0	= 0	; SPI Data Register bit 0
                                 .equ	SPDR1	= 1	; SPI Data Register bit 1
                                 .equ	SPDR2	= 2	; SPI Data Register bit 2
                                 .equ	SPDR3	= 3	; SPI Data Register bit 3
                                 .equ	SPDR4	= 4	; SPI Data Register bit 4
                                 .equ	SPDR5	= 5	; SPI Data Register bit 5
                                 .equ	SPDR6	= 6	; SPI Data Register bit 6
                                 .equ	SPDR7	= 7	; SPI Data Register bit 7
                                 
                                 ; SPSR - SPI Status Register
                                 .equ	SPI2X	= 0	; Double SPI Speed Bit
                                 .equ	WCOL	= 6	; Write Collision Flag
                                 .equ	SPIF	= 7	; SPI Interrupt Flag
                                 
                                 ; SPCR - SPI Control Register
                                 .equ	SPR0	= 0	; SPI Clock Rate Select 0
                                 .equ	SPR1	= 1	; SPI Clock Rate Select 1
                                 .equ	CPHA	= 2	; Clock Phase
                                 .equ	CPOL	= 3	; Clock polarity
                                 .equ	MSTR	= 4	; Master/Slave Select
                                 .equ	DORD	= 5	; Data Order
                                 .equ	SPE	= 6	; SPI Enable
                                 .equ	SPIE	= 7	; SPI Interrupt Enable
                                 
                                 
                                 ; ***** WATCHDOG *********************
                                 ; WDTCSR - Watchdog Timer Control Register
                                 .equ	WDP0	= 0	; Watch Dog Timer Prescaler bit 0
                                 .equ	WDP1	= 1	; Watch Dog Timer Prescaler bit 1
                                 .equ	WDP2	= 2	; Watch Dog Timer Prescaler bit 2
                                 .equ	WDE	= 3	; Watch Dog Enable
                                 .equ	WDCE	= 4	; Watchdog Change Enable
                                 .equ	WDP3	= 5	; Watchdog Timer Prescaler Bit 3
                                 .equ	WDIE	= 6	; Watchdog Timeout Interrupt Enable
                                 .equ	WDIF	= 7	; Watchdog Timeout Interrupt Flag
                                 
                                 
                                 ; ***** CPU **************************
                                 ; SREG - Status Register
                                 .equ	SREG_C	= 0	; Carry Flag
                                 .equ	SREG_Z	= 1	; Zero Flag
                                 .equ	SREG_N	= 2	; Negative Flag
                                 .equ	SREG_V	= 3	; Two's Complement Overflow Flag
                                 .equ	SREG_S	= 4	; Sign Bit
                                 .equ	SREG_H	= 5	; Half Carry Flag
                                 .equ	SREG_T	= 6	; Bit Copy Storage
                                 .equ	SREG_I	= 7	; Global Interrupt Enable
                                 
                                 ; OSCCAL - Oscillator Calibration Value
                                 .equ	CAL0	= 0	; Oscillator Calibration Value Bit0
                                 .equ	CAL1	= 1	; Oscillator Calibration Value Bit1
                                 .equ	CAL2	= 2	; Oscillator Calibration Value Bit2
                                 .equ	CAL3	= 3	; Oscillator Calibration Value Bit3
                                 .equ	CAL4	= 4	; Oscillator Calibration Value Bit4
                                 .equ	CAL5	= 5	; Oscillator Calibration Value Bit5
                                 .equ	CAL6	= 6	; Oscillator Calibration Value Bit6
                                 .equ	CAL7	= 7	; Oscillator Calibration Value Bit7
                                 
                                 ; CLKPR - Clock Prescale Register
                                 .equ	CLKPS0	= 0	; Clock Prescaler Select Bit 0
                                 .equ	CLKPS1	= 1	; Clock Prescaler Select Bit 1
                                 .equ	CLKPS2	= 2	; Clock Prescaler Select Bit 2
                                 .equ	CLKPS3	= 3	; Clock Prescaler Select Bit 3
                                 .equ	CLKPCE	= 7	; Clock Prescaler Change Enable
                                 
                                 ; SPMCSR - Store Program Memory Control and Status Register
                                 .equ    SELFPRGEN = 0; Added for backwards compatibility
                                 .equ	SPMEN	= 0	; Store Program Memory
                                 .equ	PGERS	= 1	; Page Erase
                                 .equ	PGWRT	= 2	; Page Write
                                 .equ	BLBSET	= 3	; Boot Lock Bit Set
                                 .equ	RWWSRE	= 4	; Read-While-Write section read enable
                                 .equ    SIGRD   = 5 ; Signature Row Read
                                 .equ	RWWSB	= 6	; Read-While-Write Section Busy
                                 .equ	SPMIE	= 7	; SPM Interrupt Enable
                                 
                                 ; MCUCR - MCU Control Register
                                 .equ	IVCE	= 0	; 
                                 .equ	IVSEL	= 1	; 
                                 .equ	PUD	= 4	; 
                                 .equ	BODSE	= 5	; BOD Sleep Enable
                                 .equ	BODS	= 6	; BOD Sleep
                                 
                                 ; MCUSR - MCU Status Register
                                 .equ	PORF	= 0	; Power-on reset flag
                                 .equ	EXTRF	= 1	; External Reset Flag
                                 .equ	EXTREF	= EXTRF	; For compatibility
                                 .equ	BORF	= 2	; Brown-out Reset Flag
                                 .equ	WDRF	= 3	; Watchdog Reset Flag
                                 
                                 ; SMCR - Sleep Mode Control Register
                                 .equ	SE	= 0	; Sleep Enable
                                 .equ	SM0	= 1	; Sleep Mode Select Bit 0
                                 .equ	SM1	= 2	; Sleep Mode Select Bit 1
                                 .equ	SM2	= 3	; Sleep Mode Select Bit 2
                                 
                                 ; GPIOR2 - General Purpose I/O Register 2
                                 .equ	GPIOR20	= 0	; 
                                 .equ	GPIOR21	= 1	; 
                                 .equ	GPIOR22	= 2	; 
                                 .equ	GPIOR23	= 3	; 
                                 .equ	GPIOR24	= 4	; 
                                 .equ	GPIOR25	= 5	; 
                                 .equ	GPIOR26	= 6	; 
                                 .equ	GPIOR27	= 7	; 
                                 
                                 ; GPIOR1 - General Purpose I/O Register 1
                                 .equ	GPIOR10	= 0	; 
                                 .equ	GPIOR11	= 1	; 
                                 .equ	GPIOR12	= 2	; 
                                 .equ	GPIOR13	= 3	; 
                                 .equ	GPIOR14	= 4	; 
                                 .equ	GPIOR15	= 5	; 
                                 .equ	GPIOR16	= 6	; 
                                 .equ	GPIOR17	= 7	; 
                                 
                                 ; GPIOR0 - General Purpose I/O Register 0
                                 .equ	GPIOR00	= 0	; 
                                 .equ	GPIOR01	= 1	; 
                                 .equ	GPIOR02	= 2	; 
                                 .equ	GPIOR03	= 3	; 
                                 .equ	GPIOR04	= 4	; 
                                 .equ	GPIOR05	= 5	; 
                                 .equ	GPIOR06	= 6	; 
                                 .equ	GPIOR07	= 7	; 
                                 
                                 ; PRR - Power Reduction Register
                                 .equ	PRADC	= 0	; Power Reduction ADC
                                 .equ	PRUSART0	= 1	; Power Reduction USART
                                 .equ	PRSPI	= 2	; Power Reduction Serial Peripheral Interface
                                 .equ	PRTIM1	= 3	; Power Reduction Timer/Counter1
                                 .equ	PRTIM0	= 5	; Power Reduction Timer/Counter0
                                 .equ	PRTIM2	= 6	; Power Reduction Timer/Counter2
                                 .equ	PRTWI	= 7	; Power Reduction TWI
                                 
                                 
                                 ; ***** EEPROM ***********************
                                 ; EEARL - EEPROM Address Register Low Byte
                                 .equ	EEAR0	= 0	; EEPROM Read/Write Access Bit 0
                                 .equ	EEAR1	= 1	; EEPROM Read/Write Access Bit 1
                                 .equ	EEAR2	= 2	; EEPROM Read/Write Access Bit 2
                                 .equ	EEAR3	= 3	; EEPROM Read/Write Access Bit 3
                                 .equ	EEAR4	= 4	; EEPROM Read/Write Access Bit 4
                                 .equ	EEAR5	= 5	; EEPROM Read/Write Access Bit 5
                                 .equ	EEAR6	= 6	; EEPROM Read/Write Access Bit 6
                                 .equ	EEAR7	= 7	; EEPROM Read/Write Access Bit 7
                                 
                                 ; EEARH - EEPROM Address Register High Byte
                                 .equ	EEAR8	= 0	; EEPROM Read/Write Access Bit 8
                                 .equ	EEAR9	= 1	; EEPROM Read/Write Access Bit 9
                                 
                                 ; EEDR - EEPROM Data Register
                                 .equ	EEDR0	= 0	; EEPROM Data Register bit 0
                                 .equ	EEDR1	= 1	; EEPROM Data Register bit 1
                                 .equ	EEDR2	= 2	; EEPROM Data Register bit 2
                                 .equ	EEDR3	= 3	; EEPROM Data Register bit 3
                                 .equ	EEDR4	= 4	; EEPROM Data Register bit 4
                                 .equ	EEDR5	= 5	; EEPROM Data Register bit 5
                                 .equ	EEDR6	= 6	; EEPROM Data Register bit 6
                                 .equ	EEDR7	= 7	; EEPROM Data Register bit 7
                                 
                                 ; EECR - EEPROM Control Register
                                 .equ	EERE	= 0	; EEPROM Read Enable
                                 .equ	EEPE	= 1	; EEPROM Write Enable
                                 .equ	EEMPE	= 2	; EEPROM Master Write Enable
                                 .equ	EERIE	= 3	; EEPROM Ready Interrupt Enable
                                 .equ	EEPM0	= 4	; EEPROM Programming Mode Bit 0
                                 .equ	EEPM1	= 5	; EEPROM Programming Mode Bit 1
                                 
                                 
                                 
                                 ; ***** LOCKSBITS ********************************************************
                                 .equ	LB1	= 0	; Lock bit
                                 .equ	LB2	= 1	; Lock bit
                                 .equ	BLB01	= 2	; Boot Lock bit
                                 .equ	BLB02	= 3	; Boot Lock bit
                                 .equ	BLB11	= 4	; Boot lock bit
                                 .equ	BLB12	= 5	; Boot lock bit
                                 
                                 
                                 ; ***** FUSES ************************************************************
                                 ; LOW fuse bits
                                 .equ	CKSEL0	= 0	; Select Clock Source
                                 .equ	CKSEL1	= 1	; Select Clock Source
                                 .equ	CKSEL2	= 2	; Select Clock Source
                                 .equ	CKSEL3	= 3	; Select Clock Source
                                 .equ	SUT0	= 4	; Select start-up time
                                 .equ	SUT1	= 5	; Select start-up time
                                 .equ	CKOUT	= 6	; Clock output
                                 .equ	CKDIV8	= 7	; Divide clock by 8
                                 
                                 ; HIGH fuse bits
                                 .equ	BOOTRST	= 0	; Select reset vector
                                 .equ	BOOTSZ0	= 1	; Select boot size
                                 .equ	BOOTSZ1	= 2	; Select boot size
                                 .equ	EESAVE	= 3	; EEPROM memory is preserved through chip erase
                                 .equ	WDTON	= 4	; Watchdog Timer Always On
                                 .equ	SPIEN	= 5	; Enable Serial programming and Data Downloading
                                 .equ	DWEN	= 6	; debugWIRE Enable
                                 .equ	RSTDISBL	= 7	; External reset disable
                                 
                                 ; EXTENDED fuse bits
                                 .equ	BODLEVEL0	= 0	; Brown-out Detector trigger level
                                 .equ	BODLEVEL1	= 1	; Brown-out Detector trigger level
                                 .equ	BODLEVEL2	= 2	; Brown-out Detector trigger level
                                 
                                 
                                 
                                 ; ***** CPU REGISTER DEFINITIONS *****************************************
                                 .def	XH	= r27
                                 .def	XL	= r26
                                 .def	YH	= r29
                                 .def	YL	= r28
                                 .def	ZH	= r31
                                 .def	ZL	= r30
                                 
                                 
                                 
                                 ; ***** DATA MEMORY DECLARATIONS *****************************************
                                 .equ	FLASHEND	= 0x3fff	; Note: Word address
                                 .equ	IOEND	= 0x00ff
                                 .equ	SRAM_START	= 0x0100
                                 .equ	SRAM_SIZE	= 2048
                                 .equ	RAMEND	= 0x08ff
                                 .equ	XRAMEND	= 0x0000
                                 .equ	E2END	= 0x03ff
                                 .equ	EEPROMEND	= 0x03ff
                                 .equ	EEADRBITS	= 10
                                 #pragma AVRPART MEMORY PROG_FLASH 32768
                                 #pragma AVRPART MEMORY EEPROM 1024
                                 #pragma AVRPART MEMORY INT_SRAM SIZE 2048
                                 #pragma AVRPART MEMORY INT_SRAM START_ADDR 0x100
                                 
                                 
                                 
                                 ; ***** BOOTLOADER DECLARATIONS ******************************************
                                 .equ	NRWW_START_ADDR	= 0x3800
                                 .equ	NRWW_STOP_ADDR	= 0x3fff
                                 .equ	RWW_START_ADDR	= 0x0
                                 .equ	RWW_STOP_ADDR	= 0x37ff
                                 .equ	PAGESIZE	= 64
                                 .equ	FIRSTBOOTSTART	= 0x3f00
                                 .equ	SECONDBOOTSTART	= 0x3e00
                                 .equ	THIRDBOOTSTART	= 0x3c00
                                 .equ	FOURTHBOOTSTART	= 0x3800
                                 .equ	SMALLBOOTSTART	= FIRSTBOOTSTART
                                 .equ	LARGEBOOTSTART	= FOURTHBOOTSTART
                                 
                                 
                                 
                                 ; ***** INTERRUPT VECTORS ************************************************
                                 .equ	INT0addr	= 0x0002	; External Interrupt Request 0
                                 .equ	INT1addr	= 0x0004	; External Interrupt Request 1
                                 .equ	PCI0addr	= 0x0006	; Pin Change Interrupt Request 0
                                 .equ	PCI1addr	= 0x0008	; Pin Change Interrupt Request 0
                                 .equ	PCI2addr	= 0x000a	; Pin Change Interrupt Request 1
                                 .equ	WDTaddr	= 0x000c	; Watchdog Time-out Interrupt
                                 .equ	OC2Aaddr	= 0x000e	; Timer/Counter2 Compare Match A
                                 .equ	OC2Baddr	= 0x0010	; Timer/Counter2 Compare Match A
                                 .equ	OVF2addr	= 0x0012	; Timer/Counter2 Overflow
                                 .equ	ICP1addr	= 0x0014	; Timer/Counter1 Capture Event
                                 .equ	OC1Aaddr	= 0x0016	; Timer/Counter1 Compare Match A
                                 .equ	OC1Baddr	= 0x0018	; Timer/Counter1 Compare Match B
                                 .equ	OVF1addr	= 0x001a	; Timer/Counter1 Overflow
                                 .equ	OC0Aaddr	= 0x001c	; TimerCounter0 Compare Match A
                                 .equ	OC0Baddr	= 0x001e	; TimerCounter0 Compare Match B
                                 .equ	OVF0addr	= 0x0020	; Timer/Couner0 Overflow
                                 .equ	SPIaddr	= 0x0022	; SPI Serial Transfer Complete
                                 .equ	URXCaddr	= 0x0024	; USART Rx Complete
                                 .equ	UDREaddr	= 0x0026	; USART, Data Register Empty
                                 .equ	UTXCaddr	= 0x0028	; USART Tx Complete
                                 .equ	ADCCaddr	= 0x002a	; ADC Conversion Complete
                                 .equ	ERDYaddr	= 0x002c	; EEPROM Ready
                                 .equ	ACIaddr	= 0x002e	; Analog Comparator
                                 .equ	TWIaddr	= 0x0030	; Two-wire Serial Interface
                                 .equ	SPMRaddr	= 0x0032	; Store Program Memory Read
                                 
                                 .equ	INT_VECTORS_SIZE	= 52	; size in words
                                 
                                 #endif  /* _M328PDEF_INC_ */
                                 
                                 ; ***** END OF FILE ******************************************************
                                 
                                 ; Pruebas_Proyecto_3_micros.asm
                                 ;
                                 ; Created: 2/27/2025 2:12:51 PM
                                 ; Author : oscar
                                 ;
                                 .include "M328PDEF.inc"
                                 
                                 ;***** Created: 2011-02-09 12:03 ******* Source: ATmega328P.xml **********
                                 ;*************************************************************************
                                 ;* A P P L I C A T I O N   N O T E   F O R   T H E   A V R   F A M I L Y
                                 ;* 
                                 ;* Number            : AVR000
                                 ;* File Name         : "m328Pdef.inc"
                                 ;* Title             : Register/Bit Definitions for the ATmega328P
                                 ;* Date              : 2011-02-09
                                 ;* Version           : 2.35
                                 ;* Support E-mail    : avr@atmel.com
                                 ;* Target MCU        : ATmega328P
                                 ;* 
                                 ;* DESCRIPTION
                                 ;* When including this file in the assembly program file, all I/O register 
                                 ;* names and I/O register bit names appearing in the data book can be used.
                                 ;* In addition, the six registers forming the three data pointers X, Y and 
                                 ;* Z have been assigned names XL - ZH. Highest RAM address for Internal 
                                 ;* SRAM is also defined 
                                 ;* 
                                 ;* The Register names are represented by their hexadecimal address.
                                 ;* 
                                 ;* The Register Bit names are represented by their bit number (0-7).
                                 ;* 
                                 ;* Please observe the difference in using the bit names with instructions
                                 ;* such as "sbr"/"cbr" (set/clear bit in register) and "sbrs"/"sbrc"
                                 ;* (skip if bit in register set/cleared). The following example illustrates
                                 ;* this:
                                 ;* 
                                 ;* in    r16,PORTB             ;read PORTB latch
                                 ;* sbr   r16,(1<<PB6)+(1<<PB5) ;set PB6 and PB5 (use masks, not bit#)
                                 ;* out   PORTB,r16             ;output to PORTB
                                 ;* 
                                 ;* in    r16,TIFR              ;read the Timer Interrupt Flag Register
                                 ;* sbrc  r16,TOV0              ;test the overflow flag (use bit#)
                                 ;* rjmp  TOV0_is_set           ;jump if set
                                 ;* ...                         ;otherwise do something else
                                 ;*************************************************************************
                                 
                                 #ifndef _M328PDEF_INC_
                                 #endif  /* _M328PDEF_INC_ */
                                 
                                 ; ***** END OF FILE ******************************************************
                                 .cseg
                                 .org 0x0000
000000 940c 0022                 	JMP START
                                 .org 0x0008
000008 940c 024b                 	JMP PINCHANGEC_ISR
                                 .org 0x0020
000020 940c 02e8                 	JMP TMR0_ISR
                                 
                                 
                                 START:
                                 // Configuraci n de la pila?
000022 ef0f                      	LDI R16, LOW(RAMEND)
000023 bf0d                      	OUT SPL, R16
000024 e008                      	LDI R16, HIGH(RAMEND)
000025 bf0e                      	OUT SPH, R16	
                                 
000026 053f
000027 4f5b
000028 6e65
000029 077e
00002a 677f
00002b 7f77
00002c 3f3a
00002d 727a                      DIS: .DB 0x3F,0x05,0x5B,0x4F,0x65,0x6E,0x7E,0x07,0x7F,0x67,0x77,0x7F,0x3A,0x3F,0x7A,0x72
00002e 1d20
00002f 1f20
000030 1f20
000031 2020
000032 201f
000033 201f                      MESES: .DB 0x20,0x1D,0x20,0x1F,0x20,0x1F,0x20,0x20,0x31F,0x20,0x1F,0x20
                                 
                                 SETUP:
000034 94f8                      	CLI
                                 
                                 
                                 
000035 e003                      	LDI R16,(1 << CS01)|(1 << CS00)
000036 bd05                      	OUT TCCR0B, R16
000037 e604                      	LDI R16,100
000038 bd06                      	OUT TCNT0, R16
                                 
000039 e001                      	LDI R16, (1 << TOIE0)
00003a 9300 006e                 	STS TIMSK0, R16
                                 
00003c e002                      	LDI R16, (1 << PCIE1)
00003d 9300 0068                 	STS PCICR, R16
00003f e20f                      	LDI R16,(1 << PCINT13)|(1 << PCINT11)|(1 << PCINT10)|(1 << PCINT9)|(1 << PCINT8)
000040 9300 006c                 	STS PCMSK1, R16
                                 
                                 	
000042 e000                      	LDI R16,0x00
000043 b90b                      	OUT PORTD, R16
000044 b905                      	OUT PORTB, R16
000045 9300 00c1                 	STS UCSR0B, R16
000047 e300                      	LDI R16,0x30
000048 b907                      	OUT DDRC,R16
000049 ef0f                      	LDI R16,0xFF
00004a b908                      	OUT PORTC, R16
00004b b904                      	OUT DDRB,R16
00004c b90a                      	OUT DDRD, R16
                                 	
00004d 9478                      	SEI
                                 
00004e e000                      	LDI R16,0x00
00004f 2e00                      	MOV R0,R16
000050 2e10                      	MOV R1,R16
000051 2e20                      	MOV R2,R16
000052 2e30                      	MOV R3,R16
000053 2e40                      	MOV R4,R16
000054 2e50                      	MOV R5,R16
000055 2e60                      	MOV R6,R16
000056 2e70                      	MOV R7,R16
000057 2e80                      	MOV R8,R16 
000058 2e90                      	MOV R9,R16
000059 2ea0                      	MOV R10,R16
00005a 2eb0                      	MOV R11,R16
00005b 2ec0                      	MOV R12,R16
00005c 2ed0                      	MOV R13,R16 
00005d 2ee0                      	MOV R14,R16 
                                 
                                 // Contador horas y mins
00005e e000                      	LDI R16,0x00
00005f e010                      	LDI R17,0x00
000060 e020                      	LDI R18,0x00
000061 e030                      	LDI R19,0x00
                                 // Contadores para minutos
000062 e040                      	LDI R20,0x00
000063 e050                      	LDI R21,0x00
                                 // Valor a mostrar en displays
000064 e060                      	LDI R22,0x00
                                 // Valores temporales
000065 e070                      	LDI R23,0x00
                                 // Modo del sistema
000066 e080                      	LDI R24,0x00
                                 // Registros Alarma y Fecha
000067 e090                      	LDI R25,0x00
000068 e0a0                      	LDI R26,0x00
000069 e0b0                      	LDI R27,0x00
00006a e0c0                      	LDI R28,0x00
                                 // Registro para puntos cada 500ms
00006b e0d0                      	LDI R29,0x00
                                 //ANTIREBOTE
                                 // Registro para el delay de los displays
00006c e0f0                      	LDI R31,0x00
                                 
                                 MAIN_LOOP:
00006d 2e00                      	MOV R0,R16
00006e 2e11                      	MOV R1,R17
00006f 2e22                      	MOV R2,R18
000070 2e33                      	MOV R3,R19
000071 7087                      	ANDI R24,0x07 
000072 3080                      	CPI R24,0x00
000073 f159                      	BREQ SALTO_APAGADO
000074 3081                      	CPI R24,0x01
000075 f159                      	BREQ SALTO_RELOJ
000076 3082                      	CPI R24,0x02
000077 f159                      	BREQ SALTO_FECHA
000078 3083                      	CPI R24,0x03
000079 f159                      	BREQ SALTO_CONFIG_HORA
00007a 3084                      	CPI R24,0x04
00007b f159                      	BREQ SALTO_CONFIG_FECHA
00007c 3085                      	CPI R24,0x05
00007d f159                      	BREQ SALTO_CONFIG_ALARMA
00007e 3086                      	CPI R24,0x06
00007f f159                      	BREQ SALTO_APAGAR_ALARMA
000080 940c 006d                 	JMP MAIN_LOOP
                                 
                                 RESTRICCIONES:
000082 3158                      	CPI R21, 24
000083 f459                      	BRNE FINAL
000084 2744                      	CLR R20
000085 2755                      	CLR R21
000086 9503                      	INC R16	
000087 300a                      	CPI R16,0x0A
000088 f039                      	BREQ OVER_UNIDADES_SEGUNDOS
                                 CASO2_RELOJ:
000089 3016                      	CPI R17,0x06
00008a f041                      	BREQ OVER_DECENA_SEGUNDOS
                                 CASO3_RELOJ:
00008b 3024                      	CPI R18,0x04
00008c f049                      	BREQ OVER_UNIDADES_HORA
                                 CASO4_RELOJ:
00008d 302a                      	CPI R18,0x0A
00008e f069                      	BREQ OVER_DECENAS_HORA
                                 CASO5_FECHA:
                                 
                                 FINAL:
00008f 9508                      RET
                                 
                                 OVER_UNIDADES_SEGUNDOS:
000090 e000                      	LDI R16, 0x00
000091 9513                      	INC R17
000092 cff6                      	RJMP CASO2_RELOJ
                                 OVER_DECENA_SEGUNDOS:
000093 e010                      	LDI R17, 0x00
000094 9523                      	INC R18
000095 cff5                      	RJMP CASO3_RELOJ
                                 OVER_UNIDADES_HORA:
000096 3032                      	CPI R19,0x02
000097 f7a9                      	BRNE CASO4_RELOJ
000098 e020                      	LDI R18,0x00
000099 e030                      	LDI R19,0x00
00009a 9443                      	INC R4
00009b cff3                      	RJMP CASO5_FECHA
                                 OVER_DECENAS_HORA:
00009c e020                      	LDI R18,0x00
00009d 9533                      	INC R19
00009e cff0                      	RJMP CASO5_FECHA
                                 
                                 SALTO_APAGADO:
00009f 940c 00ad                 	JMP APAGADO
                                 SALTO_RELOJ:
0000a1 940c 00b8                 	JMP RELOJ
                                 SALTO_FECHA:
0000a3 940c 0110                 	JMP FECHA
                                 SALTO_CONFIG_HORA:
0000a5 940c 0164                 	JMP CONFIG_HORA
                                 SALTO_CONFIG_FECHA:
0000a7 940c 01a5                 	JMP CONFIG_FECHA
                                 SALTO_CONFIG_ALARMA:
0000a9 940c 01f3                 	JMP CONFIG_ALARMA
                                 SALTO_APAGAR_ALARMA:
0000ab 940c 022d                 	JMP APAGAR_ALARMA
                                 
                                 APAGADO:
0000ad 9828                      	CBI PORTB,0
0000ae 9829                      	CBI PORTB,1
0000af 982a                      	CBI PORTB,2
0000b0 982b                      	CBI PORTB,3
0000b1 982c                      	CBI PORTB,4
0000b2 982d                      	CBI PORTB,5
0000b3 9844                      	CBI PORTC,4
0000b4 e664                      	LDI R22, 100
0000b5 bd66                      	OUT TCNT0, R22
0000b6 940c 006d                 	JMP MAIN_LOOP
                                 
                                 RELOJ:
0000b8 940e 0082                 	CALL RESTRICCIONES
0000ba 9a2c                      	SBI PORTB,4
0000bb 982d                      	CBI PORTB,5
0000bc 33d2                      	CPI R29, 50
0000bd f541                      	BRNE RELOJ_MOSTRAR
0000be 27dd                      	CLR R29
0000bf 9b34                      	SBIS PINC,4
0000c0 940c 00c4                 	JMP ENCENDER
0000c2 9934                      	SBIC PINC,4
0000c3 c002                      	RJMP APAGAR
                                 ENCENDER:
0000c4 9a44                      	SBI PORTC,4
0000c5 c001                      	RJMP COMPARAR_ALARMA
                                 APAGAR:
0000c6 9844                      	CBI PORTC,4
                                 COMPARAR_ALARMA:
0000c7 2d78                      	MOV R23,R8
0000c8 1707                      	CP R16, R23
0000c9 f019                      	BREQ COMPARAR2
0000ca 9845                      	CBI PORTC,5
0000cb 940c 00b8                 	JMP RELOJ
                                 COMPARAR2:
0000cd 2d79                      	MOV R23,R9
0000ce 1717                      	CP R17, R23
0000cf f019                      	BREQ COMPARAR3
0000d0 9845                      	CBI PORTC,5
0000d1 940c 00b8                 	JMP RELOJ
                                 COMPARAR3:
0000d3 2d7a                      	MOV R23,R10
0000d4 1727                      	CP R18, R23
0000d5 f019                      	BREQ COMPARAR4
0000d6 9845                      	CBI PORTC,5
0000d7 940c 00b8                 	JMP RELOJ
                                 COMPARAR4:
0000d9 2d7b                      	MOV R23,R11
0000da 1737                      	CP R19, R23
0000db f019                      	BREQ COMPARAR5
0000dc 9845                      	CBI PORTC,5
0000dd 940c 00e6                 	JMP RELOJ_MOSTRAR
                                 COMPARAR5:
0000df e071                      	LDI R23,0x01
0000e0 16c7                      	CP R12,R23
0000e1 f019                      	BREQ ACTIVAR_ALARMA
0000e2 9845                      	CBI PORTC,5
0000e3 940c 00e6                 	JMP RELOJ_MOSTRAR
                                 ACTIVAR_ALARMA:
0000e5 9a45                      	SBI PORTC, 5
                                 RELOJ_MOSTRAR:
0000e6 e0f0                      	LDI ZH, HIGH(DIS << 1)
0000e7 e4ec                      	LDI ZL, LOW(DIS << 1)
0000e8 0fe0                      	ADD ZL,R16
0000e9 9174                      	LPM R23, Z
0000ea 9828                      	CBI PORTB, 0
0000eb 9829                      	CBI PORTB, 1
0000ec 982a                      	CBI PORTB, 2
0000ed 982b                      	CBI PORTB, 3
0000ee b97b                      	OUT PORTD, R23
0000ef 9a28                      	SBI PORTB, 0
0000f0 940e 0231                 	CALL DELAY
0000f2 9828                      	CBI PORTB, 0
0000f3 e0f0                      	LDI ZH, HIGH(DIS << 1)
0000f4 e4ec                      	LDI ZL, LOW(DIS << 1)
0000f5 0fe1                      	ADD ZL,R17
0000f6 9174                      	LPM R23, Z
0000f7 b97b                      	OUT PORTD, R23
0000f8 9a29                      	SBI PORTB, 1
0000f9 940e 0231                 	CALL DELAY
0000fb 9829                      	CBI PORTB, 1
0000fc e0f0                      	LDI ZH, HIGH(DIS << 1)
0000fd e4ec                      	LDI ZL, LOW(DIS << 1)
0000fe 0fe2                      	ADD ZL,R18
0000ff 9174                      	LPM R23, Z
000100 b97b                      	OUT PORTD, R23
000101 9a2a                      	SBI PORTB, 2
000102 940e 0231                 	CALL DELAY
000104 982a                      	CBI PORTB, 2
000105 e0f0                      	LDI ZH, HIGH(DIS << 1)
000106 e4ec                      	LDI ZL, LOW(DIS << 1)
000107 0fe3                      	ADD ZL,R19
000108 9174                      	LPM R23, Z
000109 b97b                      	OUT PORTD, R23
00010a 9a2b                      	SBI PORTB, 3
00010b 940e 0231                 	CALL DELAY
00010d 982b                      	CBI PORTB, 3
00010e 940c 006d                 	JMP MAIN_LOOP
                                 
                                 
                                 FECHA:
000110 940e 0082                 	CALL RESTRICCIONES
000112 9a28                      	SBI PORTB, 0
000113 9a29                      	SBI PORTB, 1
000114 9a2a                      	SBI PORTB, 2
000115 9a2b                      	SBI PORTB, 3
000116 e0f0                      	LDI ZH, HIGH(DIS << 1)
000117 e4ec                      	LDI ZL, LOW(DIS << 1)
000118 0fe9                      	ADD ZL,R25
000119 9174                      	LPM R23, Z
00011a 9828                      	CBI PORTB, 0
00011b 9829                      	CBI PORTB, 1
00011c 982a                      	CBI PORTB, 2
00011d 982b                      	CBI PORTB, 3
00011e b97b                      	OUT PORTD, R23
00011f 9a28                      	SBI PORTB, 0
000120 940e 0231                 	CALL DELAY
000122 9828                      	CBI PORTB, 0
000123 e0f0                      	LDI ZH, HIGH(DIS << 1)
000124 e4ec                      	LDI ZL, LOW(DIS << 1)
000125 0fea                      	ADD ZL,R26
000126 9174                      	LPM R23, Z
000127 b97b                      	OUT PORTD, R23
000128 9a29                      	SBI PORTB, 1
000129 940e 0231                 	CALL DELAY
00012b 9829                      	CBI PORTB, 1
00012c e0f0                      	LDI ZH, HIGH(DIS << 1)
00012d e4ec                      	LDI ZL, LOW(DIS << 1)
00012e 0feb                      	ADD ZL,R27
00012f 9174                      	LPM R23, Z
000130 b97b                      	OUT PORTD, R23
000131 9a2a                      	SBI PORTB, 2
000132 940e 0231                 	CALL DELAY
000134 982a                      	CBI PORTB, 2
000135 e0f0                      	LDI ZH, HIGH(DIS << 1)
000136 e4ec                      	LDI ZL, LOW(DIS << 1)
000137 0fec                      	ADD ZL,R28
000138 9174                      	LPM R23, Z
000139 b97b                      	OUT PORTD, R23
00013a 9a2b                      	SBI PORTB, 3
00013b 940e 0231                 	CALL DELAY
00013d 982b                      	CBI PORTB,3
00013e 940c 006d                 	JMP MAIN_LOOP
000140 940c 006d                 	JMP MAIN_LOOP
                                 
                                 CONFIG_HORA_CASO1:
000142 e090                      	LDI R25,0x00
000143 95a3                      	INC R26
000144 940c 016f                 	JMP CONFIG_HORA_MINS_UNIDADES2
                                 CONFIG_HORA_CASO2:
000146 e099                      	LDI R25,0x09
000147 95aa                      	DEC R26 
000148 940c 0171                 	JMP CONFIG_HORA_MINS_DECENAS
                                 CONFIG_HORA_CASO3:
00014a e0a0                      	LDI R26,0x00
00014b 940c 0173                 	JMP CONFIG_HORA_MINS_DECENAS2
                                 CONFIG_HORA_CASO4:
00014d e0a5                      	LDI R26,0x5
00014e 940c 0175                 	JMP CONFIG_HORA_HORAS_UNIDADES
                                 CONFIG_HORA_CASO5:
000150 e0b0                      	LDI R27,0x00
000151 95c3                      	INC R28
000152 940c 0177                 	JMP CONFIG_HORA_HORAS_UNIDADES2
                                 CONFIG_HORA_CASO6:
000154 30c0                      	CPI R28,0x00
000155 f051                      	BREQ CONFIG_HORA_REINICIO
000156 e0b9                      	LDI R27,0x09
000157 95ca                      	DEC R28
000158 940c 0179                 	JMP CONFIG_HORA_HORAS_DECENAS
                                 CONFIG_HORA_CASO7:
00015a 30b4                      	CPI R27,0x04
00015b f4f9                      	BRNE CONFIG_HORA_MOSTRAR
00015c e0b0                      	LDI R27,0x00
00015d e0c0                      	LDI R28,0x00
00015e 940c 017b                 	JMP CONFIG_HORA_MOSTRAR
                                 CONFIG_HORA_REINICIO:
000160 e0b3                      	LDI R27,0x03
000161 e0c2                      	LDI R28,0x02
000162 940c 017b                 	JMP CONFIG_HORA_MOSTRAR
                                 
                                 CONFIG_HORA:
000164 9828                      	CBI PORTB,0
000165 9829                      	CBI PORTB,1
000166 982a                      	CBI PORTB,2
000167 982b                      	CBI PORTB,3
000168 982c                      	CBI PORTB,4
000169 982d                      	CBI PORTB,5
00016a 9844                      	CBI PORTC,4
00016b e664                      	LDI R22, 100
00016c bd66                      	OUT TCNT0, R22
00016d 309a                      	CPI R25,0x0A
00016e f299                      	BREQ CONFIG_HORA_CASO1
                                 CONFIG_HORA_MINS_UNIDADES2:
00016f 3f9f                      	CPI R25,0xFF
000170 f2a9                      	BREQ CONFIG_HORA_Caso2
                                 CONFIG_HORA_MINS_DECENAS:
000171 30a6                      	CPI R26,0x06
000172 f2b9                      	BREQ CONFIG_HORA_CASO3
                                 CONFIG_HORA_MINS_DECENAS2:
000173 3faf                      	CPI R26,0xFF
000174 f2c1                      	BREQ CONFIG_HORA_CASO4
                                 CONFIG_HORA_HORAS_UNIDADES:
000175 30ba                      	CPI R27,0x0A
000176 f2c9                      	BREQ CONFIG_HORA_CASO5
                                 CONFIG_HORA_HORAS_UNIDADES2:
000177 3fbf                      	CPI R27,0xFF
000178 f2d9                      	BREQ CONFIG_HORA_CASO6
                                 CONFIG_HORA_HORAS_DECENAS:
000179 30c2                      	CPI R28,0x02
00017a f2f9                      	BREQ CONFIG_HORA_CASO7
                                 CONFIG_HORA_MOSTRAR:
00017b e0f0                      	LDI ZH, HIGH(DIS << 1)
00017c e4ec                      	LDI ZL, LOW(DIS << 1)
00017d 0fe9                      	ADD ZL,R25
00017e 9174                      	LPM R23, Z
00017f 9828                      	CBI PORTB, 0
000180 9829                      	CBI PORTB, 1
000181 982a                      	CBI PORTB, 2
000182 982b                      	CBI PORTB, 3
000183 b97b                      	OUT PORTD, R23
000184 9a28                      	SBI PORTB, 0
000185 940e 0231                 	CALL DELAY
000187 9828                      	CBI PORTB, 0
000188 e0f0                      	LDI ZH, HIGH(DIS << 1)
000189 e4ec                      	LDI ZL, LOW(DIS << 1)
00018a 0fea                      	ADD ZL,R26
00018b 9174                      	LPM R23, Z
00018c b97b                      	OUT PORTD, R23
00018d 9a29                      	SBI PORTB, 1
00018e 940e 0231                 	CALL DELAY
000190 9829                      	CBI PORTB, 1
000191 e0f0                      	LDI ZH, HIGH(DIS << 1)
000192 e4ec                      	LDI ZL, LOW(DIS << 1)
000193 0feb                      	ADD ZL,R27
000194 9174                      	LPM R23, Z
000195 b97b                      	OUT PORTD, R23
000196 9a2a                      	SBI PORTB, 2
000197 940e 0231                 	CALL DELAY
000199 982a                      	CBI PORTB, 2
00019a e0f0                      	LDI ZH, HIGH(DIS << 1)
00019b e4ec                      	LDI ZL, LOW(DIS << 1)
00019c 0fec                      	ADD ZL,R28
00019d 9174                      	LPM R23, Z
00019e b97b                      	OUT PORTD, R23
00019f 9a2b                      	SBI PORTB, 3
0001a0 940e 0231                 	CALL DELAY
0001a2 982b                      	CBI PORTB, 3
0001a3 940c 006d                 	JMP MAIN_LOOP
                                 
                                 CONFIG_FECHA:
0001a5 e664                      	LDI R22, 100
0001a6 bd66                      	OUT TCNT0, R22
0001a7 e0f0                      	LDI ZH, HIGH(DIS << 1)
0001a8 e4ec                      	LDI ZL, LOW(DIS << 1)
0001a9 0fe9                      	ADD ZL,R25
0001aa 9174                      	LPM R23, Z
0001ab 9828                      	CBI PORTB, 0
0001ac 9829                      	CBI PORTB, 1
0001ad 982a                      	CBI PORTB, 2
0001ae 982b                      	CBI PORTB, 3
0001af b97b                      	OUT PORTD, R23
0001b0 9a28                      	SBI PORTB, 0
0001b1 940e 0231                 	CALL DELAY
0001b3 9828                      	CBI PORTB, 0
0001b4 e0f0                      	LDI ZH, HIGH(DIS << 1)
0001b5 e4ec                      	LDI ZL, LOW(DIS << 1)
0001b6 0fea                      	ADD ZL,R26
0001b7 9174                      	LPM R23, Z
0001b8 b97b                      	OUT PORTD, R23
0001b9 9a29                      	SBI PORTB, 1
0001ba 940e 0231                 	CALL DELAY
0001bc 9829                      	CBI PORTB, 1
0001bd e0f0                      	LDI ZH, HIGH(DIS << 1)
0001be e4ec                      	LDI ZL, LOW(DIS << 1)
0001bf 0feb                      	ADD ZL,R27
0001c0 9174                      	LPM R23, Z
0001c1 b97b                      	OUT PORTD, R23
0001c2 9a2a                      	SBI PORTB, 2
0001c3 940e 0231                 	CALL DELAY
0001c5 982a                      	CBI PORTB, 2
0001c6 e0f0                      	LDI ZH, HIGH(DIS << 1)
0001c7 e4ec                      	LDI ZL, LOW(DIS << 1)
0001c8 0fec                      	ADD ZL,R28
0001c9 9174                      	LPM R23, Z
0001ca b97b                      	OUT PORTD, R23
0001cb 9a2b                      	SBI PORTB, 3
0001cc 940e 0231                 	CALL DELAY
0001ce 982b                      	CBI PORTB,3
0001cf 940c 006d                 	JMP MAIN_LOOP
                                 
                                 CONFIG_ALARMA_CASO1:
0001d1 e090                      	LDI R25,0x00
0001d2 95a3                      	INC R26
0001d3 940c 01f7                 	JMP CONFIG_ALARMA_MINS_UNIDADES2
                                 CONFIG_ALARMA_CASO2:
0001d5 e099                      	LDI R25,0x09
0001d6 95aa                      	DEC R26 
0001d7 940c 01f9                 	JMP CONFIG_ALARMA_MINS_DECENAS
                                 CONFIG_ALARMA_CASO3:
0001d9 e0a0                      	LDI R26,0x00
0001da 940c 01fb                 	JMP CONFIG_ALARMA_MINS_DECENAS2
                                 CONFIG_ALARMA_CASO4:
0001dc e0a5                      	LDI R26,0x5
0001dd 940c 01fd                 	JMP CONFIG_ALARMA_HORAS_UNIDADES
                                 CONFIG_ALARMA_CASO5:
0001df e0b0                      	LDI R27,0x00
0001e0 95c3                      	INC R28
0001e1 940c 01ff                 	JMP CONFIG_ALARMA_HORAS_UNIDADES2
                                 CONFIG_ALARMA_CASO6:
0001e3 30c0                      	CPI R28,0x00
0001e4 f051                      	BREQ REINICIO_CONFIG_ALARMA
0001e5 e0b9                      	LDI R27,0x09
0001e6 95ca                      	DEC R28
0001e7 940c 0201                 	JMP CONFIG_ALARMA_HORAS_DECENAS
                                 CONFIG_ALARMA_CASO7:
0001e9 30b4                      	CPI R27,0x04
0001ea f4c1                      	BRNE MOSTRAR_CONFIG_ALARMA
0001eb e0b0                      	LDI R27,0x00
0001ec e0c0                      	LDI R28,0x00
0001ed 940c 0203                 	JMP MOSTRAR_CONFIG_ALARMA
                                 REINICIO_CONFIG_ALARMA:
0001ef e0b3                      	LDI R27,0x03
0001f0 e0c2                      	LDI R28,0x02
0001f1 940c 0203                 	JMP MOSTRAR_CONFIG_ALARMA
                                 
                                 CONFIG_ALARMA:
0001f3 e664                      	LDI R22, 100
0001f4 bd66                      	OUT TCNT0, R22
0001f5 309a                      	CPI R25,0x0A
0001f6 f2d1                      	BREQ CONFIG_ALARMA_CASO1
                                 CONFIG_ALARMA_MINS_UNIDADES2:
0001f7 3f9f                      	CPI R25,0xFF
0001f8 f2e1                      	BREQ CONFIG_ALARMA_CASO2
                                 CONFIG_ALARMA_MINS_DECENAS:
0001f9 30a6                      	CPI R26,0x06
0001fa f2f1                      	BREQ CONFIG_ALARMA_CASO3
                                 CONFIG_ALARMA_MINS_DECENAS2:
0001fb 3faf                      	CPI R26,0xFF
0001fc f2f9                      	BREQ CONFIG_ALARMA_CASO4
                                 CONFIG_ALARMA_HORAS_UNIDADES:
0001fd 30ba                      	CPI R27,0x0A
0001fe f301                      	BREQ CONFIG_ALARMA_CASO5
                                 CONFIG_ALARMA_HORAS_UNIDADES2:
0001ff 3fbf                      	CPI R27,0xFF
000200 f311                      	BREQ CONFIG_ALARMA_CASO6
                                 CONFIG_ALARMA_HORAS_DECENAS:
000201 30c2                      	CPI R28,0x2
000202 f331                      	BREQ CONFIG_ALARMA_CASO7
                                 MOSTRAR_CONFIG_ALARMA:
000203 e0f0                      	LDI ZH, HIGH(DIS << 1)
000204 e4ec                      	LDI ZL, LOW(DIS << 1)
000205 0fe9                      	ADD ZL,R25
000206 9174                      	LPM R23, Z
000207 9828                      	CBI PORTB, 0
000208 9829                      	CBI PORTB, 1
000209 982a                      	CBI PORTB, 2
00020a 982b                      	CBI PORTB, 3
00020b b97b                      	OUT PORTD, R23
00020c 9a28                      	SBI PORTB, 0
00020d 940e 0231                 	CALL DELAY
00020f 9828                      	CBI PORTB, 0
000210 e0f0                      	LDI ZH, HIGH(DIS << 1)
000211 e4ec                      	LDI ZL, LOW(DIS << 1)
000212 0fea                      	ADD ZL,R26
000213 9174                      	LPM R23, Z
000214 b97b                      	OUT PORTD, R23
000215 9a29                      	SBI PORTB, 1
000216 940e 0231                 	CALL DELAY
000218 9829                      	CBI PORTB, 1
000219 e0f0                      	LDI ZH, HIGH(DIS << 1)
00021a e4ec                      	LDI ZL, LOW(DIS << 1)
00021b 0feb                      	ADD ZL,R27
00021c 9174                      	LPM R23, Z
00021d b97b                      	OUT PORTD, R23
00021e 9a2a                      	SBI PORTB, 2
00021f 940e 0231                 	CALL DELAY
000221 982a                      	CBI PORTB, 2
000222 e0f0                      	LDI ZH, HIGH(DIS << 1)
000223 e4ec                      	LDI ZL, LOW(DIS << 1)
000224 0fec                      	ADD ZL,R28
000225 9174                      	LPM R23, Z
000226 b97b                      	OUT PORTD, R23
000227 9a2b                      	SBI PORTB, 3
000228 940e 0231                 	CALL DELAY
00022a 982b                      	CBI PORTB,3
00022b 940c 006d                 	JMP MAIN_LOOP
                                 
                                 APAGAR_ALARMA:
00022d e664                      	LDI R22, 100
00022e bd66                      	OUT TCNT0, R22
00022f 940c 006d                 	JMP MAIN_LOOP
                                 
                                 DELAY:
000231 e0f0                      	LDI R31,0
                                 	subdelay1:
000232 95f3                      	INC R31
000233 30f0                      	CPI R31,0x00
000234 f7e9                      	BRNE subdelay1
000235 9508                      RET
                                 
                                 DELAY2:
000236 e0f0                      	LDI R31,0
                                 	subdelay1_2:
000237 95f3                      	INC R31
000238 30f0                      	CPI R31,0x00
000239 f7e9                      	BRNE subdelay1_2
00023a e0f0                      	LDI R31,0
                                 	subdelay2_2:
00023b 95f3                      	INC R31
00023c 30f0                      	CPI R31,0x00
00023d f7e9                      	BRNE subdelay2_2
00023e e0f0                      	LDI R31,0
                                 	subdelay3_2:
00023f 95f3                      	INC R31
000240 30f0                      	CPI R31,0x00
000241 f7e9                      	BRNE subdelay3_2
000242 e0f0                      	LDI R31,0
                                 	subdelay4_2:
000243 95f3                      	INC R31
000244 30f0                      	CPI R31,0x00
000245 f7e9                      	BRNE subdelay4_2
000246 e0f0                      	LDI R31,0
                                 	subdelay5_2:
000247 95f3                      	INC R31
000248 30f0                      	CPI R31,0x00
000249 f7e9                      	BRNE subdelay5_2
00024a 9508                      RET
                                 
                                 PINCHANGEC_ISR:
00024b b166                      	IN R22, PINC
00024c 17e6                      	CP R30,R22
00024d f0c1                      	BREQ SALIR
00024e 940e 0236                 	CALL DElAY2
000250 b176                      	IN R23, PINC
000251 17e6                      	CP R30,R22
000252 f099                      	BREQ SALIR
000253 940e 0236                 	CALL DElAY2
000255 b176                      	IN R23, PINC
000256 17e6                      	CP R30,R22
000257 f071                      	BREQ SALIR
000258 2fe6                      	MOV R30,R22
000259 9b30                      	SBIS PINC,0
00025a 940c 029e                 	JMP CAMBIO_MODO
00025c 3082                      	CPI R24,0x02
00025d f049                      	BREQ BOTONES_FECHA
00025e 3083                      	CPI R24,0x03
00025f f041                      	BREQ BOTONES_CONFIG_HORA
000260 3084                      	CPI R24,0x04
000261 f099                      	BREQ BOTONES_CONFIG_FECHA
000262 3085                      	CPI R24,0x05
000263 f111                      	BREQ BOTONES_CONFIG_ALARMA
000264 3086                      	CPI R24,0x06
000265 f169                      	BREQ BOTONES_APAGAR_ALARMA
                                 SALIR:
000266 9518                      RETI
                                 
                                 BOTONES_FECHA:
                                 
000267 9518                      RETI
                                 
                                 BOTONES_CONFIG_HORA:
000268 9b33                      	SBIS PINC,3
000269 c006                      	RJMP HORAS_CONFIG_RELOJ 
00026a c000                      	RJMP MINUTOS_CONFIG_RELOJ
                                 MINUTOS_CONFIG_RELOJ:
00026b 9b31                      	SBIS PINC,1
00026c 9593                      	INC R25
00026d 9b32                      	SBIS PINC,2
00026e 959a                      	DEC R25
00026f 9518                      RETI
                                 HORAS_CONFIG_RELOJ:
000270 9b31                      	SBIS PINC,1
000271 95b3                      	INC R27
000272 9b32                      	SBIS PINC,2
000273 95ba                      	DEC R27
000274 9518                      RETI
                                 
                                 BOTONES_CONFIG_FECHA:
000275 9b33                      	SBIS PINC,3
000276 c008                      	RJMP MES_FECHA
000277 c000                      	RJMP DIA_FECHA 
                                 DIA_FECHA:
000278 9b31                      	SBIS PINC,1
000279 9593                      	INC R25
00027a 94e3                      	INC R14
00027b 9b32                      	SBIS PINC,2
00027c 959a                      	DEC R25
00027d 94e3                      	INC R14
00027e 9518                      RETI
                                 MES_FECHA:
00027f 9b31                      	SBIS PINC,1
000280 95b3                      	INC R27
000281 94d3                      	INC R13
000282 9b32                      	SBIS PINC,2
000283 95ba                      	DEC R27
000284 94da                      	DEC R13
000285 9518                      RETI
                                 
                                 BOTONES_CONFIG_ALARMA:
000286 9b33                      	SBIS PINC,3
000287 c006                      	RJMP HORAS_CONFIG_ALARMA
000288 c000                      	RJMP MINUTOS_CONFIG_ALARMA
                                 MINUTOS_CONFIG_ALARMA:
000289 9b31                      	SBIS PINC,1
00028a 9593                      	INC R25
00028b 9b32                      	SBIS PINC,2
00028c 959a                      	DEC R25
00028d 9518                      RETI
                                 HORAS_CONFIG_ALARMA:
00028e 9b31                      	SBIS PINC,1
00028f 95b3                      	INC R27
000290 9b32                      	SBIS PINC,2
000291 95ba                      	DEC R27
000292 9518                      RETI
                                 
                                 BOTONES_APAGAR_ALARMA:
000293 9b31                      	SBIS PINC,1
000294 c006                      	RJMP ALARMA_APAGADA
000295 9b32                      	SBIS PINC,2
000296 c001                      	RJMP ALARMA_ENCENDIDA
000297 9518                      RETI
                                 ALARMA_ENCENDIDA:
000298 9a44                      	SBI PORTC,4
000299 e091                      	LDI R25,0x01
00029a 9518                      RETI
                                 ALARMA_APAGADA:
00029b 9844                      	CBI PORTC,4
00029c e090                      	LDI R25,0x00
00029d 9518                      RETI
                                 
                                 CAMBIO_MODO:
00029e 3080                      	CPI R24,0x00
00029f f079                      	BREQ CAMBIO_APAGADO
0002a0 3081                      	CPI R24,0x01
0002a1 f099                      	BREQ CAMBIO_RELOJ
0002a2 3082                      	CPI R24,0x02
0002a3 f0b9                      	BREQ CAMBIO_FECHA
0002a4 3083                      	CPI R24,0x03
0002a5 f0f9                      	BREQ CAMBIO_CONFIG_HORA
0002a6 3084                      	CPI R24,0x04
0002a7 f139                      	BREQ CAMBIO_CONFIG_FECHA
0002a8 3085                      	CPi R24,0x05
0002a9 f179                      	BREQ CAMBIO_CONFIG_ALARMA
0002aa 3086                      	CPI R24,0x06
0002ab 940c 02e5                 	JMP CAMBIO_APAGAR_ALARMA
0002ad 9583                      	INC R24
0002ae 9518                      RETI
                                 
                                 CAMBIO_APAGADO:
0002af 9583                      	INC R24
0002b0 2d00                      	MOV R16,R0
0002b1 2d11                      	MOV R17,R1
0002b2 2d22                      	MOV R18,R2
0002b3 2d33                      	MOV R19,R3
0002b4 9518                      RETI
                                 
                                 CAMBIO_RELOJ:
0002b5 9583                      	INC R24
0002b6 2d94                      	MOV R25,R4
0002b7 2da5                      	MOV R26,R5
0002b8 2db6                      	MOV R27,R6
0002b9 2dc7                      	MOV R28,R7
0002ba 9518                      RETI
                                 
                                 CAMBIO_FECHA:
0002bb 9583                      	INC R24
0002bc 2e49                      	MOV R4,R25
0002bd 2e5a                      	MOV R5,R26
0002be 2e6b                      	MOV R6,R27
0002bf 2e7c                      	MOV R7,R28
0002c0 2f90                      	MOV R25,R16
0002c1 2fa1                      	MOV R26,R17
0002c2 2fb2                      	MOV R27,R18
0002c3 2fc3                      	MOV R28,R19
0002c4 9518                      RETI
                                 
                                 CAMBIO_CONFIG_HORA:
0002c5 9583                      	INC R24
0002c6 2f09                      	MOV R16,R25
0002c7 2f1a                      	MOV R17,R26
0002c8 2f2b                      	MOV R18,R27
0002c9 2f3c                      	MOV R19,R28
0002ca 2d94                      	MOV R25,R4
0002cb 2da5                      	MOV R26,R5
0002cc 2db6                      	MOV R27,R6
0002cd 2dc7                      	MOV R28,R7
0002ce 9518                      RETI
                                 
                                 CAMBIO_CONFIG_FECHA:
0002cf 9583                      	INC R24
0002d0 2e49                      	MOV R4,R25
0002d1 2e5a                      	MOV R5,R26
0002d2 2e6b                      	MOV R6,R27
0002d3 2e7c                      	MOV R7,R28
0002d4 2d98                      	MOV R25,R8
0002d5 2da9                      	MOV R26,R9
0002d6 2dba                      	MOV R27,R10
0002d7 2dcb                      	MOV R28,R11
0002d8 9518                      RETI
                                 
                                 CAMBIO_CONFIG_ALARMA:
0002d9 9583                      	INC R24
0002da 2e89                      	MOV R8,R25
0002db 2e9a                      	MOV R9,R26
0002dc 2eab                      	MOV R10,R27
0002dd 2ebc                      	MOV R11,R28
0002de 2d9c                      	MOV R25, R12
0002df 3091                      	CPI R25,0x01
0002e0 f011                      	BREQ LED_ALARMA_ENCENDIDA
0002e1 9844                      	CBI PORTC,4
0002e2 9518                      RETI
                                 	LED_ALARMA_ENCENDIDA:
0002e3 9a44                      	SBI PORTC,4
0002e4 9518                      RETI
                                 
                                 CAMBIO_APAGAR_ALARMA:
0002e5 9583                      	INC R24
0002e6 2ec9                      	MOV R12,R25
0002e7 9518                      RETI
                                 
                                 TMR0_ISR:
0002e8 e664                      	LDI R22, 100
0002e9 bd66                      	OUT TCNT0, R22
0002ea 9543                      	INC R20
0002eb 95d3                      	INC R29
0002ec 3f4a                      	CPI R20, 250
0002ed f009                      	BREQ REGISTRO2
0002ee 9518                      RETI
                                 	REGISTRO2:
0002ef 9553                      	INC R21


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

"ATmega328P" register use summary:
x  :   0 y  :   0 z  :  20 r0 :   3 r1 :   3 r2 :   3 r3 :   3 r4 :   6 
r5 :   5 r6 :   5 r7 :   5 r8 :   4 r9 :   4 r10:   4 r11:   4 r12:   4 
r13:   3 r14:   3 r15:   0 r16:  50 r17:  10 r18:  12 r19:  10 r20:   4 
r21:   4 r22:  18 r23:  53 r24:  29 r25:  32 r26:  25 r27:  33 r28:  25 
r29:   4 r30:  44 r31:  39 
Registers used: 32 out of 35 (91.4%)

"ATmega328P" instruction use summary:
.lds  :   0 .sts  :   0 adc   :   0 add   :  20 adiw  :   0 and   :   0 
andi  :   1 asr   :   0 bclr  :   0 bld   :   0 brbc  :   0 brbs  :   0 
brcc  :   0 brcs  :   0 break :   0 breq  :  48 brge  :   0 brhc  :   0 
brhs  :   0 brid  :   0 brie  :   0 brlo  :   0 brlt  :   0 brmi  :   0 
brne  :  11 brpl  :   0 brsh  :   0 brtc  :   0 brts  :   0 brvc  :   0 
brvs  :   0 bset  :   0 bst   :   0 call  :  24 cbi   :  63 cbr   :   0 
clc   :   0 clh   :   0 cli   :   1 cln   :   0 clr   :   3 cls   :   0 
clt   :   0 clv   :   0 clz   :   0 com   :   0 cp    :   8 cpc   :   0 
cpi   :  52 cpse  :   0 dec   :  11 eor   :   0 fmul  :   0 fmuls :   0 
fmulsu:   0 icall :   0 ijmp  :   0 in    :   3 inc   :  35 jmp   :  43 
ld    :   0 ldd   :   0 ldi   : 106 lds   :   0 lpm   :  40 lsl   :   0 
lsr   :   0 mov   :  62 movw  :   0 mul   :   0 muls  :   0 mulsu :   0 
neg   :   0 nop   :   0 or    :   0 ori   :   0 out   :  36 pop   :   0 
push  :   0 rcall :   0 ret   :   3 reti  :  22 rjmp  :  14 rol   :   0 
ror   :   0 sbc   :   0 sbci  :   0 sbi   :  29 sbic  :   1 sbis  :  19 
sbiw  :   0 sbr   :   0 sbrc  :   0 sbrs  :   0 sec   :   0 seh   :   0 
sei   :   1 sen   :   0 ser   :   0 ses   :   0 set   :   0 sev   :   0 
sez   :   0 sleep :   0 spm   :   0 st    :   0 std   :   0 sts   :   4 
sub   :   0 subi  :   0 swap  :   0 tst   :   0 wdr   :   0 
Instructions used: 26 out of 113 (23.0%)

"ATmega328P" memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x0005e2   1422     28   1450   32768   4.4%
[.dseg] 0x000100 0x000100      0      0      0    2048   0.0%
[.eseg] 0x000000 0x000000      0      0      0    1024   0.0%

Assembly complete, 0 errors, 0 warnings
